<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hive题目</title>
      <link href="/2022/06/11/hive-ti-mu/"/>
      <url>/2022/06/11/hive-ti-mu/</url>
      
        <content type="html"><![CDATA[<h2 id="蚂蚁金服题目"><a href="#蚂蚁金服题目" class="headerlink" title="蚂蚁金服题目"></a>蚂蚁金服题目</h2><h3 id="第一题："><a href="#第一题：" class="headerlink" title="第一题："></a>第一题：</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*问题：查询user_low_carbon表中每日流水记录，条件为：用户在2017年，连续三天（或以上）的天数里，每天减少碳排放（low_carbon）都超过100g的用户低碳流水。需要查询返回满足以上条件的user_low_carbon表中的记录流水。例如用户u_002符合条件的记录如下，因为2017/1/2~2017/1/5连续四天的碳排放量之和都大于等于100g：seq（key） user_id data_dt  low_carbonxxxxx10    u_002  2017/1/2  150xxxxx11    u_002  2017/1/2  70xxxxx12    u_002  2017/1/3  30xxxxx13    u_002  2017/1/3  80xxxxx14    u_002  2017/1/4  150xxxxx14    u_002  2017/1/5  101备注：统计方法不限于sql、procedure、python,java等*/</span><span class="token keyword">with</span>t1<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> user_id<span class="token punctuation">,</span>date_format<span class="token punctuation">(</span>regexp_replace<span class="token punctuation">(</span>data_dt<span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span> date_f_dt<span class="token punctuation">,</span>low_carbon<span class="token keyword">from</span> user_low_carbon<span class="token keyword">where</span> substring<span class="token punctuation">(</span>data_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2017'</span> <span class="token operator">&amp;&amp;</span> low_carbon <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t2 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>date_f_dt<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">,</span>row_number <span class="token keyword">over</span><span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id  sort <span class="token keyword">by</span> t1<span class="token punctuation">.</span>date_f_dt <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_dt<span class="token keyword">from</span> t1<span class="token punctuation">)</span><span class="token punctuation">,</span>t3 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>date_f_dt<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>low_carbon<span class="token punctuation">,</span>date_add<span class="token punctuation">(</span>t2<span class="token punctuation">.</span>date_f_dt<span class="token punctuation">,</span>rank_dt<span class="token punctuation">)</span> dt_sum<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>rank_dt<span class="token keyword">from</span> t2<span class="token punctuation">)</span><span class="token punctuation">,</span>t4 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>date_f_dt<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>low_carbon<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>dt_sum<span class="token punctuation">)</span> same_num<span class="token keyword">from</span> t3<span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> t4<span class="token keyword">where</span> t4<span class="token punctuation">.</span>same_num <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第二题："><a href="#第二题：" class="headerlink" title="第二题："></a>第二题：</h3><p>一张表 user，包含两个字段：id,username<br>找出除id外的，其他都重复的所有信息。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">with</span>t1 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>username<span class="token keyword">from</span> <span class="token keyword">user</span><span class="token keyword">group</span> <span class="token keyword">by</span> username<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">select</span> u<span class="token punctuation">.</span>id<span class="token punctuation">,</span>u<span class="token punctuation">.</span>username<span class="token keyword">from</span> <span class="token keyword">user</span> u<span class="token keyword">where</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token operator">in</span> t1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据倾斜问题（Hive）</title>
      <link href="/2022/06/09/shu-ju-qing-xie-wen-ti/"/>
      <url>/2022/06/09/shu-ju-qing-xie-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="6大倾斜问题清单"><a href="#6大倾斜问题清单" class="headerlink" title="6大倾斜问题清单"></a>6大倾斜问题清单</h2><ol><li>NULL值导致的数据倾斜</li><li>大文件不可拆分导致的数据倾斜</li><li>小表JOIN大表导致的数据倾斜</li><li>统一字段不同数据类型导致的数据倾斜</li><li>确实无法减少数据量导致的数据倾斜</li><li>数据膨胀导致的数据倾斜</li></ol><h3 id="1-空值导致的数据倾斜"><a href="#1-空值导致的数据倾斜" class="headerlink" title="1. 空值导致的数据倾斜"></a>1. 空值导致的数据倾斜</h3><h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4><p>key值为NULL，它们的hash值相同，被分配给同一个reduce导致的数据倾斜。</p><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><p><strong>1. 不让空值数据参与JOIN</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> a<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> a <span class="token keyword">left</span> <span class="token keyword">join</span> b <span class="token keyword">on</span> a<span class="token punctuation">.</span><span class="token keyword">key</span> <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> a<span class="token punctuation">.</span><span class="token keyword">key</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token keyword">key</span><span class="token keyword">union</span> <span class="token keyword">all</span> a <span class="token keyword">where</span> a<span class="token punctuation">.</span><span class="token keyword">key</span> <span class="token operator">is</span> <span class="token boolean">null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2. 将空值后面加上随机数</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> a<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> a<span class="token keyword">left</span> <span class="token keyword">join</span> b<span class="token keyword">on</span> <span class="token keyword">case</span> <span class="token comment">-- when a.key is null then concat('tzk',',',rand())</span><span class="token keyword">when</span> a<span class="token punctuation">.</span><span class="token keyword">key</span> <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token keyword">then</span> concat_ws<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span><span class="token string">'tzk'</span><span class="token punctuation">,</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span> a<span class="token punctuation">.</span><span class="token keyword">key</span><span class="token keyword">end</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token keyword">key</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-大文件不可拆分导致的数据倾斜"><a href="#2-大文件不可拆分导致的数据倾斜" class="headerlink" title="2.大文件不可拆分导致的数据倾斜"></a>2.大文件不可拆分导致的数据倾斜</h3><h4 id="原因：-1"><a href="#原因：-1" class="headerlink" title="原因："></a>原因：</h4><p>文件过大，且压缩格式采用的是不可分割的格式比如Gzip</p><h4 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h4><p>换一种压缩方案如：bzip2,Zip</p><h3 id="3-表链接时引发的数据倾斜"><a href="#3-表链接时引发的数据倾斜" class="headerlink" title="3. 表链接时引发的数据倾斜"></a>3. 表链接时引发的数据倾斜</h3><h4 id="原因：-2"><a href="#原因：-2" class="headerlink" title="原因："></a>原因：</h4><p>某一张表的某一个Key数据倾斜严重。从而导致大量这个key值的数据在一个reduce中执行。</p><h4 id="解决方案：-2"><a href="#解决方案：-2" class="headerlink" title="解决方案："></a>解决方案：</h4><p><strong>（1）如果是大表join小表</strong></p><p>采用MapJoin，将小表放到内存中，在Map阶段Join,每一个MapTask（MapTask的数量由切片决定）中的数据与小表join，避免了Reduce阶段，从而避免了数据倾斜。<br>hive.auto.convert.join=true 默认值为true，自动开启MAPJOIN优化。<br>hive.mapjoin.smalltable.filesize=2500000</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> a<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> a<span class="token keyword">join</span> b <span class="token keyword">on</span> a<span class="token punctuation">.</span><span class="token keyword">key</span> <span class="token operator">=</span>b<span class="token punctuation">.</span><span class="token keyword">key</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>edit:<br>将表放到Map端内存时，如果节点的内存很大，但还是出现内存溢出的情况，我们可以通过这个参数 mapreduce.map.memory.mb  调节Map端内存的大小。</p><p><strong>（1）大表join大表</strong></p><p>同空值的处理类似，将导致数据倾斜的Key加上随机数。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 加入a.key== 大海时，数据占比40%</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> a<span class="token keyword">left</span> <span class="token keyword">join</span> b <span class="token keyword">on</span><span class="token keyword">case</span> a<span class="token punctuation">.</span><span class="token keyword">key</span><span class="token keyword">when</span> <span class="token string">'大海'</span> <span class="token keyword">then</span> concat_ws<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span><span class="token keyword">key</span><span class="token punctuation">,</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span> a<span class="token punctuation">.</span><span class="token keyword">key</span><span class="token keyword">end</span> <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token keyword">key</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-同一字段不通类型导致的数据倾斜"><a href="#4-同一字段不通类型导致的数据倾斜" class="headerlink" title="4. 同一字段不通类型导致的数据倾斜"></a>4. 同一字段不通类型导致的数据倾斜</h3><h4 id="4-1-原因："><a href="#4-1-原因：" class="headerlink" title="4.1 原因："></a>4.1 原因：</h4><p>a表的key值类型为String或者int型，而b表则为int型。那么默认按照int，那么所有的String类型会被分配到同一个reduce导致数据倾斜。</p><h4 id="4-2-解决方案："><a href="#4-2-解决方案：" class="headerlink" title="4.2 解决方案："></a>4.2 解决方案：</h4><p>统一数据类型，将Int转换为String。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token operator">*</span><span class="token keyword">from</span> a<span class="token keyword">left</span> <span class="token keyword">join</span> b<span class="token keyword">on</span> cast<span class="token punctuation">(</span>a<span class="token punctuation">.</span>user_id <span class="token keyword">as</span> String<span class="token punctuation">)</span> <span class="token operator">=</span> cast<span class="token punctuation">(</span>b<span class="token punctuation">.</span>user_id <span class="token keyword">as</span> String<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-确实无法减少数据量引发的数据倾斜"><a href="#5-确实无法减少数据量引发的数据倾斜" class="headerlink" title="5. 确实无法减少数据量引发的数据倾斜"></a>5. 确实无法减少数据量引发的数据倾斜</h3><h4 id="5-1-原因："><a href="#5-1-原因：" class="headerlink" title="5.1 原因："></a>5.1 原因：</h4><p>在一些操作中，我们无法减少同一个reduce处理的数据量。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> p<span class="token punctuation">.</span>id<span class="token punctuation">,</span>p<span class="token punctuation">.</span>province_name<span class="token punctuation">,</span>collect_list<span class="token punctuation">(</span>o<span class="token punctuation">.</span>final_amount<span class="token punctuation">)</span><span class="token keyword">from</span> dwd_order_info o<span class="token keyword">right</span> <span class="token keyword">join</span> dim_base_province p<span class="token keyword">on</span> o<span class="token punctuation">.</span>province_id <span class="token operator">=</span> p<span class="token punctuation">.</span>id<span class="token keyword">group</span> <span class="token keyword">by</span> p<span class="token punctuation">.</span>id<span class="token punctuation">,</span>p<span class="token punctuation">.</span>province_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-解决方案："><a href="#5-2-解决方案：" class="headerlink" title="5.2 解决方案："></a>5.2 解决方案：</h4><p>通过mapreduce.reduce.memory.mb这个参数增加reduce内存。</p><p><a href="https://www.yisu.com/zixun/488260.html">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据倾斜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MR源码</title>
      <link href="/2022/06/07/mapreduce-zong-jie/"/>
      <url>/2022/06/07/mapreduce-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="源码解析："><a href="#源码解析：" class="headerlink" title="源码解析："></a>源码解析：</h2><p>Job提交流程源码解析</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1建立连接</span>    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 1）创建提交Job的代理</span>        <span class="token keyword">new</span> <span class="token class-name">Cluster</span><span class="token punctuation">(</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// （1）判断是本地运行环境还是yarn集群运行环境</span>            <span class="token function">initialize</span><span class="token punctuation">(</span>jobTrackAddr<span class="token punctuation">,</span> conf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 提交job</span>submitter<span class="token punctuation">.</span><span class="token function">submitJobInternal</span><span class="token punctuation">(</span><span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> cluster<span class="token punctuation">)</span>    <span class="token comment">// 1）创建给集群提交数据的Stag路径</span>    <span class="token class-name">Path</span> jobStagingArea <span class="token operator">=</span> <span class="token class-name">JobSubmissionFiles</span><span class="token punctuation">.</span><span class="token function">getStagingDir</span><span class="token punctuation">(</span>cluster<span class="token punctuation">,</span> conf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 2）获取jobid ，并创建Job路径</span>    <span class="token class-name">JobID</span> jobId <span class="token operator">=</span> submitClient<span class="token punctuation">.</span><span class="token function">getNewJobID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 3）拷贝jar包到集群</span><span class="token function">copyAndConfigureFiles</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> submitJobDir<span class="token punctuation">)</span><span class="token punctuation">;</span>        rUploader<span class="token punctuation">.</span><span class="token function">uploadFiles</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> jobSubmitDir<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 4）计算切片，生成切片规划文件</span><span class="token function">writeSplits</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> submitJobDir<span class="token punctuation">)</span><span class="token punctuation">;</span>        maps <span class="token operator">=</span> <span class="token function">writeNewSplits</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> jobSubmitDir<span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">getSplits</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// split计算公式</span>        maxSize<span class="token operator">=</span><span class="token class-name">Long<span class="token punctuation">.</span>MaxValue</span>        <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>minSize<span class="token punctuation">,</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>maxSize<span class="token punctuation">,</span>blockSize<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 5）向Stag路径写XML配置文件</span><span class="token function">writeConf</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> submitJobFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    conf<span class="token punctuation">.</span><span class="token function">writeXml</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 6）提交Job,返回提交状态</span>status <span class="token operator">=</span> submitClient<span class="token punctuation">.</span><span class="token function">submitJob</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> submitJobDir<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> job<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>CopyAndConfiguration()：拷贝jar包</p><p>writeSplits()：切片信息</p><p>writeConf()：XML文件</p><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><h3 id="MapTask数量"><a href="#MapTask数量" class="headerlink" title="MapTask数量"></a>MapTask数量</h3><p>MapTask数量由Split（切片）决定。</p><h3 id="为什么推荐切片大小和block保持一致？"><a href="#为什么推荐切片大小和block保持一致？" class="headerlink" title="为什么推荐切片大小和block保持一致？"></a>为什么推荐切片大小和block保持一致？</h3><p>如下图，如果切片与block不一致，那么可能会导致一个MapTask需要从两个节点中读取文件，而导致需要网络传输，从而降低性能。</p><p><img src="/2022/06/07/mapreduce-zong-jie/%E5%88%87%E7%89%87%E5%9B%BE%E8%A7%A3.png" alt="图解"></p>]]></content>
      
      
      <categories>
          
          <category> MapReduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数仓项目-数据准备</title>
      <link href="/2022/04/21/shu-ju-zhun-bei/"/>
      <url>/2022/04/21/shu-ju-zhun-bei/</url>
      
        <content type="html"><![CDATA[<h2 id="日志数据的准备"><a href="#日志数据的准备" class="headerlink" title="日志数据的准备"></a>日志数据的准备</h2><p>在此项目中，由于配置了两个生产者，所以，分别在hadoop101,hadoop102上修改生成数据的时间.</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 修改两台机器上的生产者时间为2020-06-16</span>vim <span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span>EBDW<span class="token operator">/</span>applog<span class="token operator">/</span>application<span class="token punctuation">.</span>yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/04/21/shu-ju-zhun-bei/log_update.png" alt="application.yml"></p><p>启动生成日志脚本</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">loggen<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://tzktangxs.github.io/2021/11/17/shell-jiao-ben/#toc-heading-24">脚本编写,见此处</a></p><h2 id="业务数据准备"><a href="#业务数据准备" class="headerlink" title="业务数据准备"></a>业务数据准备</h2><p>修改hadoop101上的配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">vim <span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span>EBDW<span class="token operator">/</span>db_log<span class="token operator">/</span>application<span class="token punctuation">.</span>properties <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/04/21/shu-ju-zhun-bei/%E4%B8%9A%E5%8A%A1%E6%95%B0%E6%8D%AE%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="application.properties "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cd <span class="token operator">/</span>opt<span class="token operator">/</span>module<span class="token operator">/</span>EBDW<span class="token operator">/</span>db_logjava <span class="token operator">-</span>jar gmall2020<span class="token operator">-</span>mock<span class="token operator">-</span>db<span class="token operator">-</span>2021<span class="token operator">-</span>01<span class="token operator">-</span>22<span class="token punctuation">.</span>jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Data Warehouse </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>理论实战经验汇总</title>
      <link href="/2022/04/19/li-lun-shi-zhan-jing-yan-hui-zong/"/>
      <url>/2022/04/19/li-lun-shi-zhan-jing-yan-hui-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h1><h2 id="SparkCore"><a href="#SparkCore" class="headerlink" title="SparkCore"></a>SparkCore</h2><h3 id="Spark工作流程"><a href="#Spark工作流程" class="headerlink" title="Spark工作流程"></a>Spark工作流程</h3><h4 id="图解："><a href="#图解：" class="headerlink" title="图解："></a>图解：</h4><p><img src="/2022/04/19/li-lun-shi-zhan-jing-yan-hui-zong/SparkWorkStream1.png" alt="Spark工作流程图"></p><h4 id="文字解说"><a href="#文字解说" class="headerlink" title="文字解说:"></a>文字解说:</h4><p>1.SparkContext向资源管理器注册并申请资源运行Executor</p><p>2.资源管理器分配资源,运行Executor</p><p>3.Executor发送心跳至资源管理器</p><p>4.SparkContext构建DAG</p><p>5.根据宽表划分Stage</p><p>6.将Stage发送给TaskScheduler</p><p>7.Executor向SparkContext请求Task</p><p>8.TaskScheduler将Task给Executor执行.同时SparkContext将应用程序代码发送给Executor</p><p>9.Task在Executor上运行,运行完毕,释放资源.</p><br><h3 id="Spark的组件构成"><a href="#Spark的组件构成" class="headerlink" title="Spark的组件构成:"></a>Spark的组件构成:</h3><ol><li>Master 管理集群与节点,不参与计算</li><li>Work 计算节点,进程本身不参与计算</li><li>Driver 运行程序的main()方法,创建SparkContext</li><li>SparkContext 管理Application的整个生命周期,包括DAGScheduler等组件</li><li>Client 用户提交程序的入口</li></ol><br><h3 id="Spark组件中RDD的机制理解"><a href="#Spark组件中RDD的机制理解" class="headerlink" title="Spark组件中RDD的机制理解"></a>Spark组件中RDD的机制理解</h3><ol><li>RDD(Resilient Distributed Dataset)是弹性分布式数据集</li><li>但是,它本身是不存储数据的:<ol><li>初代RDD: 存储有分区信息和得到数据的方法.</li><li>子代RDD: 存储血缘关系.</li></ol></li><li>那么数据在哪里呢?在Task里面.</li><li>所以每一次执行collect或者行动算子都要重塑一遍血缘关系.</li></ol><p>补充:</p><ol><li>一下有一组关于RDD的定义(据说是Spark源码中对于RDD的定义)<ol><li>A list of partitions</li><li>A function for computing each split</li><li>A list of dependencies on other RDDS</li><li>Optionally,a partitioner for key-value RDDS</li><li>Optionally,a list of preferred locations to compute each split on(e.g. block locations for an HDFS file)</li></ol></li></ol><p><a href="https://zhuanlan.zhihu.com/p/129346816">参考这篇文章</a></p>]]></content>
      
      
      <categories>
          
          <category> BigData </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SparkSQL小题</title>
      <link href="/2022/04/17/sparksql-xiao-ti/"/>
      <url>/2022/04/17/sparksql-xiao-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><p>创表语句</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">click_product_id <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>user_visit_action<span class="token punctuation">`</span><span class="token punctuation">(</span> <span class="token punctuation">`</span><span class="token keyword">date</span><span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>user_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>session_id<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>page_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>action_time<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>search_keyword<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>click_category_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>click_product_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>order_category_ids<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>order_product_ids<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>pay_category_ids<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>pay_product_ids<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>city_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">'\t'</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'input/user_visit_action.txt'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> user_visit_action<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>product_info<span class="token punctuation">`</span><span class="token punctuation">(</span> <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>extend_info<span class="token punctuation">`</span> string<span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">'\t'</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'input/product_info.txt'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> product_info<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>city_info<span class="token punctuation">`</span><span class="token punctuation">(</span> <span class="token punctuation">`</span>city_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>city_name<span class="token punctuation">`</span> string<span class="token punctuation">,</span> <span class="token punctuation">`</span>area<span class="token punctuation">`</span> string<span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">'\t'</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'input/city_info.txt'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> city_info<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>这里的热门商品是从<strong>点击量</strong>的维度来看的，计算<strong>各个区域前三</strong>大热门<strong>商品</strong>，并备注上每<br>个商品在主要城市中的分布比例，超过两个城市用其他显示。</p><h3 id="例表"><a href="#例表" class="headerlink" title="例表"></a>例表</h3><br><table><thead><tr><th>地区</th><th align="center">商品名称</th><th align="center">点击次数</th><th align="center">城市备注</th></tr></thead><tbody><tr><td>华北</td><td align="center">商品A</td><td align="center">13423</td><td align="center">北京21.2%,天津12.23%,其他*%</td></tr></tbody></table><br><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><ol><li>按照点击量排序的</li><li>每个大区选出前三点击量TOP3榜单</li><li>需计算大区内部,城市分布比例(最后计算)</li></ol><h3 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h3><ol><li>先联立三张表,得到包含所有所需信息的基础表t1(初步过滤掉非点击量数据click_product_id &gt; -1)</li><li>计算点击量</li><li>按area distribute by,按 点击量 sort by</li><li>取出top3</li><li>然后按area计算城市分布比例</li></ol><br><h3 id="SQL实现"><a href="#SQL实现" class="headerlink" title="SQL实现"></a>SQL实现</h3><p>1.解题步骤</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- t1</span><span class="token keyword">select</span> u<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span>c<span class="token punctuation">.</span>city_name<span class="token punctuation">,</span>c<span class="token punctuation">.</span>area<span class="token keyword">from</span> user_visit_action u<span class="token keyword">join</span> product_info p <span class="token keyword">on</span> u<span class="token punctuation">.</span>click_product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id<span class="token keyword">join</span> city_info c <span class="token keyword">on</span> u<span class="token punctuation">.</span>city_id <span class="token operator">=</span> c<span class="token punctuation">.</span>city_id<span class="token keyword">where</span> u<span class="token punctuation">.</span>click_product_id <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token comment">-- t2</span><span class="token keyword">select</span>t1<span class="token punctuation">.</span>area<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> click_num<span class="token punctuation">,</span>rateCity<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>city_name<span class="token punctuation">)</span> rate_city_remark<span class="token keyword">from</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>area<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>product_name<span class="token comment">-- t3</span><span class="token keyword">select</span>area<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>click_num<span class="token punctuation">,</span>rate_city_remark<span class="token punctuation">,</span>rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span>distribute <span class="token keyword">by</span> area sort <span class="token keyword">by</span> click_num <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_num<span class="token keyword">from</span>t2<span class="token comment">-- t4</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span>t3<span class="token keyword">where</span> rank_num <span class="token operator">&lt;=</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h3 id="完整Spark代码"><a href="#完整Spark代码" class="headerlink" title="完整Spark代码"></a>完整Spark代码</h3><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>sparksql<span class="token punctuation">.</span>module</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span>SparkConf<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>Encoder<span class="token punctuation">,</span> Encoders<span class="token punctuation">,</span> SparkSession<span class="token punctuation">,</span> functions<span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>expressions<span class="token punctuation">.</span></span>Aggregator<span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>mutable</span><span class="token keyword">object</span> Demo03 <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"ClickTop3"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//操作</span>    spark<span class="token punctuation">.</span>udf<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">"rateCity"</span><span class="token punctuation">,</span>functions<span class="token punctuation">.</span>udaf<span class="token punctuation">(</span><span class="token keyword">new</span> RateCity<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |select        |u.*,        |p.product_name,        |c.city_name,c.area        |from user_visit_action u        |join product_info p on u.click_product_id = p.product_id        |join city_info c on u.city_id = c.city_id        |where u.click_product_id > -1        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"t1"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |select        |t1.area,        |t1.product_name,        |count(*) as click_num,        |rateCity(t1.city_name) rate_city_remark        |from        |t1        |group by t1.area,t1.product_name        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"t2"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |select        |area,        |product_name,        |click_num,        |rate_city_remark,        |rank() over(distribute by area sort by click_num desc) rank_num        |from        |t2        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"t3"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span>      <span class="token triple-quoted-string string">"""        |select *        |from(        |t2        |)t3        |where rank_num &lt;= 3        |"""</span><span class="token punctuation">.</span>stripMargin<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * In: String   * Buffer:Map((String,count),(String,count))   * Out: String*/</span>  <span class="token keyword">case</span> <span class="token keyword">class</span> Buff<span class="token punctuation">(</span><span class="token keyword">var</span> total<span class="token operator">:</span> <span class="token builtin">Long</span><span class="token punctuation">,</span>cityMap<span class="token operator">:</span> mutable<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">Long</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">class</span> RateCity <span class="token keyword">extends</span> Aggregator<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span>Buff<span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> zero<span class="token operator">:</span> Buff <span class="token operator">=</span> Buff<span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">,</span>mutable<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">Long</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> reduce<span class="token punctuation">(</span>b<span class="token operator">:</span> Buff<span class="token punctuation">,</span> a<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      b<span class="token punctuation">.</span>total <span class="token operator">+=</span> <span class="token number">1</span>      <span class="token keyword">val</span> newCount <span class="token operator">=</span> b<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>getOrElse<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1L</span>      b<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>update<span class="token punctuation">(</span>a<span class="token punctuation">,</span>newCount<span class="token punctuation">)</span>      b    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> merge<span class="token punctuation">(</span>b1<span class="token operator">:</span> Buff<span class="token punctuation">,</span> b2<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      b1<span class="token punctuation">.</span>total <span class="token operator">+=</span> b2<span class="token punctuation">.</span>total      b2<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>foreach<span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span>v<span class="token punctuation">)</span> <span class="token keyword">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">val</span> newCount <span class="token operator">=</span> b1<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>getOrElse<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">+</span> v          b1<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>update<span class="token punctuation">(</span>t<span class="token punctuation">,</span> newCount<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      b1    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> finish<span class="token punctuation">(</span>reduction<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">val</span> descCityMapList <span class="token operator">=</span> reduction<span class="token punctuation">.</span>cityMap<span class="token punctuation">.</span>toList<span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>reverse      <span class="token keyword">val</span> countTop1 <span class="token operator">=</span> descCityMapList<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_2      <span class="token keyword">val</span> countTop2 <span class="token operator">=</span> descCityMapList<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_2      <span class="token keyword">val</span> rateTop1 <span class="token operator">=</span> descCityMapList<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_1<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>countTop1<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>reduction<span class="token punctuation">.</span>total<span class="token punctuation">.</span>toDouble<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toLong<span class="token operator">+</span><span class="token string">"%"</span>      <span class="token keyword">val</span> rateTop2 <span class="token operator">=</span> descCityMapList<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_1<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>countTop2<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>reduction<span class="token punctuation">.</span>total<span class="token punctuation">.</span>toDouble<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toLong<span class="token operator">+</span><span class="token string">"%"</span>      <span class="token keyword">val</span> rateOther <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>reduction<span class="token punctuation">.</span>total<span class="token operator">-</span>countTop1<span class="token operator">-</span>countTop2<span class="token punctuation">)</span><span class="token punctuation">.</span>toDouble<span class="token operator">/</span>reduction<span class="token punctuation">.</span>total<span class="token punctuation">.</span>toDouble<span class="token punctuation">)</span><span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toLong<span class="token operator">+</span><span class="token string">"%"</span>      rateTop1<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>rateTop2<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>rateOther    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> bufferEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span>Buff<span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>product    <span class="token keyword">override</span> <span class="token keyword">def</span> outputEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>STRING  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SparkSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SparkSQL </tag>
            
            <tag> UDAF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SparkSQL用户自定义函数</title>
      <link href="/2022/04/16/sparksql-yong-hu-zi-ding-yi-han-shu/"/>
      <url>/2022/04/16/sparksql-yong-hu-zi-ding-yi-han-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h2><br><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>sparksql<span class="token punctuation">.</span>udf</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span>SparkConf<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SparkSession<span class="token keyword">object</span> UDF_ <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//配置环境</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"udf"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sc <span class="token operator">=</span> spark<span class="token punctuation">.</span>sparkContext    <span class="token comment">//操作</span>    <span class="token keyword">val</span> df <span class="token operator">=</span> spark<span class="token punctuation">.</span>read<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token string">"datas/1.json"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>udf<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">"addName"</span><span class="token punctuation">,</span><span class="token string">"Name:"</span><span class="token operator">+</span>_<span class="token punctuation">)</span>    df<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span><span class="token string">"select addName(name) as name,* from user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show    <span class="token comment">//关闭环境</span>    spark<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h3 id="运行效果图"><a href="#运行效果图" class="headerlink" title="运行效果图"></a>运行效果图</h3><p><img src="/2022/04/16/sparksql-yong-hu-zi-ding-yi-han-shu/udf.png" alt="UDF"></p><h2 id="UDAF"><a href="#UDAF" class="headerlink" title="UDAF"></a>UDAF</h2><p>现在统一使用Aggregator强类型</p><p>推荐使用方法如下</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>sparksql<span class="token punctuation">.</span>test01</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span>SparkConf<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>Encoder<span class="token punctuation">,</span> Encoders<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> SparkSession<span class="token punctuation">,</span> TypedColumn<span class="token punctuation">,</span> functions<span class="token punctuation">,</span> types<span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>expressions<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>Aggregator<span class="token punctuation">,</span> MutableAggregationBuffer<span class="token punctuation">,</span> UserDefinedAggregateFunction<span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>DataType<span class="token punctuation">,</span> LongType<span class="token punctuation">,</span> StructField<span class="token punctuation">,</span> StructType<span class="token punctuation">&#125;</span><span class="token keyword">object</span> Demo01 <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//创建sql环境</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"SQLTest"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sparkSeesion <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//操作</span>    <span class="token keyword">import</span> <span class="token namespace">sparkSeesion<span class="token punctuation">.</span>implicits<span class="token punctuation">.</span></span>_    <span class="token keyword">val</span> df <span class="token operator">=</span> sparkSeesion<span class="token punctuation">.</span>read<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token string">"datas/1.json"</span><span class="token punctuation">)</span>        df<span class="token punctuation">.</span>show    <span class="token comment">//现在推荐使用方法</span>    df<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    sparkSeesion<span class="token punctuation">.</span>udf<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">"avgPassword"</span><span class="token punctuation">,</span>functions<span class="token punctuation">.</span>udaf<span class="token punctuation">(</span><span class="token keyword">new</span> MyAvfUDAF<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    sparkSeesion<span class="token punctuation">.</span>sql<span class="token punctuation">(</span><span class="token string">"select avgPassword(password) from user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show    <span class="token comment">//早期使用强类型的方法如下</span>    <span class="token keyword">val</span> ds <span class="token operator">=</span> df<span class="token punctuation">.</span>as<span class="token punctuation">[</span>User<span class="token punctuation">]</span>    <span class="token keyword">val</span> column<span class="token operator">:</span> TypedColumn<span class="token punctuation">[</span>User<span class="token punctuation">,</span> <span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> MyAvgPassword<span class="token punctuation">)</span><span class="token punctuation">.</span>toColumn    ds<span class="token punctuation">.</span>select<span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//关闭sql环境</span>    sparkSeesion<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">case</span> <span class="token keyword">class</span> User<span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span>name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span>password<span class="token operator">:</span><span class="token builtin">Long</span><span class="token punctuation">,</span>school<span class="token operator">:</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">case</span> <span class="token keyword">class</span> Buff<span class="token punctuation">(</span><span class="token keyword">var</span> total<span class="token operator">:</span><span class="token builtin">Long</span><span class="token punctuation">,</span><span class="token keyword">var</span> count<span class="token operator">:</span><span class="token builtin">Long</span><span class="token punctuation">)</span><span class="token keyword">class</span> MyAvfUDAF <span class="token keyword">extends</span> Aggregator<span class="token punctuation">[</span><span class="token builtin">Long</span><span class="token punctuation">,</span>Buff<span class="token punctuation">,</span><span class="token builtin">Long</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> zero<span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    Buff<span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">,</span><span class="token number">0L</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> reduce<span class="token punctuation">(</span>b<span class="token operator">:</span> Buff<span class="token punctuation">,</span> a<span class="token operator">:</span> <span class="token builtin">Long</span><span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    b<span class="token punctuation">.</span>total <span class="token operator">+=</span> a    b<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span>    b  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> merge<span class="token punctuation">(</span>b1<span class="token operator">:</span> Buff<span class="token punctuation">,</span> b2<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    b1<span class="token punctuation">.</span>total <span class="token operator">+=</span> b2<span class="token punctuation">.</span>total    b1<span class="token punctuation">.</span>count <span class="token operator">+=</span> b2<span class="token punctuation">.</span>count    b1  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> finish<span class="token punctuation">(</span>reduction<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Long</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    reduction<span class="token punctuation">.</span>total<span class="token operator">/</span>reduction<span class="token punctuation">.</span>count  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> bufferEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span>Buff<span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>product  <span class="token keyword">override</span> <span class="token keyword">def</span> outputEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span><span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>scalaLong<span class="token punctuation">&#125;</span><span class="token keyword">class</span> MyAvgPassword <span class="token keyword">extends</span> Aggregator<span class="token punctuation">[</span>User<span class="token punctuation">,</span>Buff<span class="token punctuation">,</span><span class="token builtin">Long</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> zero<span class="token operator">:</span> Buff <span class="token operator">=</span> Buff<span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">,</span><span class="token number">0L</span><span class="token punctuation">)</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> reduce<span class="token punctuation">(</span>b<span class="token operator">:</span> Buff<span class="token punctuation">,</span> a<span class="token operator">:</span> User<span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    b<span class="token punctuation">.</span>total <span class="token operator">+=</span> a<span class="token punctuation">.</span>password    b<span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span>    b  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> merge<span class="token punctuation">(</span>b1<span class="token operator">:</span> Buff<span class="token punctuation">,</span> b2<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> Buff <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    b1<span class="token punctuation">.</span>total <span class="token operator">+=</span> b2<span class="token punctuation">.</span>total    b1<span class="token punctuation">.</span>count <span class="token operator">+=</span> b2<span class="token punctuation">.</span>count    b1  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> finish<span class="token punctuation">(</span>reduction<span class="token operator">:</span> Buff<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Long</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    reduction<span class="token punctuation">.</span>total<span class="token operator">/</span>reduction<span class="token punctuation">.</span>count  <span class="token punctuation">&#125;</span>  <span class="token keyword">override</span> <span class="token keyword">def</span> bufferEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span>Buff<span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>product  <span class="token keyword">override</span> <span class="token keyword">def</span> outputEncoder<span class="token operator">:</span> Encoder<span class="token punctuation">[</span><span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> Encoders<span class="token punctuation">.</span>scalaLong<span class="token punctuation">&#125;</span><span class="token comment">//过时的肉类型使用法</span><span class="token comment">/*class MyAvgUDAF extends UserDefinedAggregateFunction&#123;  override def inputSchema: StructType = &#123;    StructType(      Array(        StructField("age",LongType)      )    )  &#125;  override def bufferSchema: StructType = &#123;    StructType(      Array(        StructField("total",LongType),        StructField("count",LongType)      )    )  &#125;  override def dataType: DataType = LongType  override def deterministic: Boolean = true  override def initialize(buffer: MutableAggregationBuffer): Unit = &#123;    buffer(0) = 0L    buffer(1) = 0L  &#125;  override def update(buffer: MutableAggregationBuffer, input: Row): Unit = &#123;    buffer.update(0,buffer.getLong(0)+input.getLong(0))    buffer.update(1,buffer.getLong(1)+1)  &#125;  override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = &#123;    buffer1.update(0,buffer1.getLong(0)+buffer2.getLong(0))    buffer1.update(1,buffer1.getLong(1)+buffer2.getLong(1))  &#125;  override def evaluate(buffer: Row): Any = &#123;    buffer.getLong(0)/buffer.getLong(1)  &#125;&#125;*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SparkSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SparkSQL </tag>
            
            <tag> UDAF </tag>
            
            <tag> UDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scala读取复杂gson文件</title>
      <link href="/2022/04/15/scala-du-qu-fu-za-gson-wen-jian/"/>
      <url>/2022/04/15/scala-du-qu-fu-za-gson-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"RECORDS"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token property">"user_id"</span><span class="token operator">:</span> <span class="token string">"10408199"</span><span class="token punctuation">,</span>      <span class="token property">"user_name"</span><span class="token operator">:</span> <span class="token string">"lym20137109"</span><span class="token punctuation">,</span>      <span class="token property">"regist_channel"</span><span class="token operator">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>      <span class="token property">"regist_time"</span><span class="token operator">:</span> <span class="token string">"2013-01-30 14:27:02"</span><span class="token punctuation">,</span>      <span class="token property">"province"</span><span class="token operator">:</span> <span class="token string">"陕西"</span><span class="token punctuation">,</span>      <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"西安"</span><span class="token punctuation">,</span>      <span class="token property">"platfrom"</span><span class="token operator">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>      <span class="token property">"exam_name"</span><span class="token operator">:</span> <span class="token string">"安全工程师"</span><span class="token punctuation">,</span>      <span class="token property">"exam_type_name"</span><span class="token operator">:</span> <span class="token string">"建筑工程"</span><span class="token punctuation">,</span>      <span class="token property">"order_id"</span><span class="token operator">:</span> <span class="token string">"201801101326286"</span><span class="token punctuation">,</span>      <span class="token property">"child_order_id"</span><span class="token operator">:</span> <span class="token string">"201801101326287"</span><span class="token punctuation">,</span>      <span class="token property">"product_name"</span><span class="token operator">:</span> <span class="token string">"《建筑施工安全+三门公共课》全科高端班"</span><span class="token punctuation">,</span>      <span class="token property">"real_pay"</span><span class="token operator">:</span> <span class="token string">"629"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token property">"user_id"</span><span class="token operator">:</span> <span class="token string">"10408199"</span><span class="token punctuation">,</span>      <span class="token property">"user_name"</span><span class="token operator">:</span> <span class="token string">"lym20137109"</span><span class="token punctuation">,</span>      <span class="token property">"regist_channel"</span><span class="token operator">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>      <span class="token property">"regist_time"</span><span class="token operator">:</span> <span class="token string">"2013-01-30 14:27:02"</span><span class="token punctuation">,</span>      <span class="token property">"province"</span><span class="token operator">:</span> <span class="token string">"陕西"</span><span class="token punctuation">,</span>      <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"西安"</span><span class="token punctuation">,</span>      <span class="token property">"platfrom"</span><span class="token operator">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>      <span class="token property">"exam_name"</span><span class="token operator">:</span> <span class="token string">"安全工程师"</span><span class="token punctuation">,</span>      <span class="token property">"exam_type_name"</span><span class="token operator">:</span> <span class="token string">"建筑工程"</span><span class="token punctuation">,</span>      <span class="token property">"order_id"</span><span class="token operator">:</span> <span class="token string">"201801101326286"</span><span class="token punctuation">,</span>      <span class="token property">"child_order_id"</span><span class="token operator">:</span> <span class="token string">"201801101326287"</span><span class="token punctuation">,</span>      <span class="token property">"product_name"</span><span class="token operator">:</span> <span class="token string">"安全工程师全科高端班"</span><span class="token punctuation">,</span>      <span class="token property">"real_pay"</span><span class="token operator">:</span> <span class="token string">"629"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="读取代码"><a href="#读取代码" class="headerlink" title="读取代码"></a>读取代码</h2><p>使用GSON读取</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>module<span class="token punctuation">.</span>test02</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span></span>Gson<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>TypeToken<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Source<span class="token keyword">object</span> DemoTest <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">val</span> source <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromFile<span class="token punctuation">(</span><span class="token string">"datas/支付数据.json"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> reader<span class="token operator">:</span> InputStreamReader <span class="token operator">=</span> source<span class="token punctuation">.</span>reader<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> Gson<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//更复杂的情况可以使用这种,比如最外面的json对象不止有"RECORDES"一个,还有别的.反正理论就是一个个嵌套着用</span>    <span class="token keyword">val</span> infos1<span class="token operator">:</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span>util<span class="token punctuation">.</span>List<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> gson<span class="token punctuation">.</span>fromJson<span class="token punctuation">(</span>reader<span class="token punctuation">,</span><span class="token keyword">new</span> TypeToken<span class="token punctuation">[</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span>util<span class="token punctuation">.</span>List<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>getType<span class="token punctuation">)</span>    println<span class="token punctuation">(</span>infos1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"RECORDS"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>user_id<span class="token punctuation">)</span>    <span class="token comment">//本例子里面,用这种就够用了</span>    <span class="token keyword">val</span> infos<span class="token operator">:</span> Roder <span class="token operator">=</span> gson<span class="token punctuation">.</span>fromJson<span class="token punctuation">(</span>reader<span class="token punctuation">,</span> classOf<span class="token punctuation">[</span>Roder<span class="token punctuation">]</span><span class="token punctuation">)</span>    println<span class="token punctuation">(</span>infos<span class="token punctuation">)</span>    <span class="token keyword">val</span> maybeInfoes<span class="token operator">:</span> util<span class="token punctuation">.</span>List<span class="token punctuation">[</span>User<span class="token punctuation">]</span> <span class="token operator">=</span> infos<span class="token punctuation">.</span>RECORDS  <span class="token punctuation">&#125;</span>  <span class="token keyword">case</span> <span class="token keyword">class</span> Roder<span class="token punctuation">(</span>RECORDS<span class="token operator">:</span>util<span class="token punctuation">.</span>List<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token keyword">class</span> User<span class="token punctuation">(</span>user_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> user_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> regist_channel<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> regist_time<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> province<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> city<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> platfrom<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> exam_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> exam_type_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> order_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> child_order_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> product_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> real_pay<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scala集合与java集合的互转</title>
      <link href="/2022/04/15/scala-ji-he-yu-java-ji-he-de-hu-zhuan/"/>
      <url>/2022/04/15/scala-ji-he-yu-java-ji-he-de-hu-zhuan/</url>
      
        <content type="html"><![CDATA[<p>通过隐式转换</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span>JavaConverters<span class="token punctuation">.</span>_<span class="token comment">//创建scala集合</span><span class="token keyword">val</span> list <span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">//scala转java</span><span class="token keyword">val</span> jList <span class="token operator">=</span> list<span class="token punctuation">.</span>asJava<span class="token comment">//java转scala</span><span class="token keyword">val</span> sList <span class="token operator">=</span> jList<span class="token punctuation">.</span>asScala<span class="token punctuation">.</span>toList<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java和scala集合转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SparkSQL的基础命令</title>
      <link href="/2022/04/15/sparksql-de-ji-chu-ming-ling/"/>
      <url>/2022/04/15/sparksql-de-ji-chu-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="DF-DS-RDD三者转换"><a href="#DF-DS-RDD三者转换" class="headerlink" title="DF,DS,RDD三者转换"></a>DF,DS,RDD三者转换</h2><br><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// RDD => DF</span><span class="token keyword">val</span> df <span class="token operator">=</span> rdd<span class="token punctuation">.</span>toDF<span class="token comment">// RDD => DS</span><span class="token comment">// 可以直接转,但是工作中一般使用case class,毕竟用DS就是为例操作对象嘛</span><span class="token keyword">val</span> ds <span class="token operator">=</span> rdd<span class="token punctuation">.</span>toDS<span class="token keyword">case</span> <span class="token keyword">class</span> User<span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token keyword">val</span> ds <span class="token operator">=</span> rdd<span class="token punctuation">.</span>toDS<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token comment">// DF => DS</span><span class="token keyword">val</span> ds <span class="token operator">=</span> df<span class="token punctuation">.</span>as<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token comment">// DS => DF</span><span class="token keyword">val</span> df <span class="token operator">=</span> ds<span class="token punctuation">.</span>toDF<span class="token comment">// DS => RDD</span><span class="token keyword">val</span> rdd <span class="token operator">=</span> ds<span class="token punctuation">.</span>rdd<span class="token comment">// DF => RDD</span><span class="token keyword">val</span> rdd <span class="token operator">=</span> df<span class="token punctuation">.</span>rdd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><p>类似于表,方便sql查询的时候使用</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala">df<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>createOrReplaceGlobalTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token comment">//ds同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="IDEA-开发SparkSQL模板"><a href="#IDEA-开发SparkSQL模板" class="headerlink" title="IDEA 开发SparkSQL模板"></a>IDEA 开发SparkSQL模板</h2><ol><li><p>添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>代码实现模板</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>sparksql<span class="token punctuation">.</span>module</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>FileReader<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span></span>Gson<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>TypeToken<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>rdd<span class="token punctuation">.</span></span>RDD<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>Dataset<span class="token punctuation">,</span> SparkSession<span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>SparkConf<span class="token punctuation">,</span> SparkContext<span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span>BeanProperty<span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token punctuation">&#123;</span>BufferedSource<span class="token punctuation">,</span> Source<span class="token punctuation">&#125;</span><span class="token keyword">object</span> Demo02 <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">"TestSparkSQL"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sc <span class="token operator">=</span> spark<span class="token punctuation">.</span>sparkContext    <span class="token keyword">import</span> <span class="token namespace">spark<span class="token punctuation">.</span>implicits<span class="token punctuation">.</span></span>_    <span class="token keyword">val</span> df <span class="token operator">=</span> spark<span class="token punctuation">.</span>read<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token string">"G:/workspace1/tzkSpark/datas/1.json"</span><span class="token punctuation">)</span>    df<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span><span class="token string">"select * from user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show    <span class="token comment">//对于复杂json文件,他的支持是不太好的.</span>    <span class="token keyword">val</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> Gson<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> source<span class="token operator">:</span> BufferedSource <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromFile<span class="token punctuation">(</span><span class="token string">"datas/支付数据.json"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token comment">/*    val recode = gson.fromJson(s, new TypeToken[Recode]()&#123;&#125;.getType)    println(recode)*/</span>    <span class="token keyword">val</span> infos<span class="token operator">:</span> Recode <span class="token operator">=</span> gson<span class="token punctuation">.</span>fromJson<span class="token punctuation">(</span>source<span class="token punctuation">.</span>reader<span class="token punctuation">,</span> classOf<span class="token punctuation">[</span>Recode<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">/*    infos.RECORDS.forEach&#123;      case u:User => println(u.user_id)    &#125;*/</span>    <span class="token comment">//采用隐式转换的方式,将java集合转换成scala集合</span>    <span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span>JavaConverters<span class="token punctuation">.</span>_    <span class="token keyword">val</span> list<span class="token operator">:</span> List<span class="token punctuation">[</span>User<span class="token punctuation">]</span> <span class="token operator">=</span> infos<span class="token punctuation">.</span>RECORDS<span class="token punctuation">.</span>asScala<span class="token punctuation">.</span>toList    <span class="token keyword">val</span> rdd<span class="token operator">:</span> RDD<span class="token punctuation">[</span>User<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>list<span class="token punctuation">)</span>    <span class="token comment">//val df2 = rdd.toDF</span><span class="token comment">//    df2.show</span>    <span class="token comment">//df2.as[User].show</span><span class="token keyword">val</span> ds<span class="token operator">:</span>Dataset<span class="token punctuation">[</span>User<span class="token punctuation">]</span> <span class="token operator">=</span> rdd<span class="token punctuation">.</span>toDS    ds<span class="token punctuation">.</span>printSchema    ds<span class="token punctuation">.</span>show    ds<span class="token punctuation">.</span>createOrReplaceTempView<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    spark<span class="token punctuation">.</span>sql<span class="token punctuation">(</span><span class="token string">"select * from user limit 10"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">case</span> <span class="token keyword">class</span> User<span class="token punctuation">(</span>user_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> user_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> regist_channel<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> regist_time<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> province<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> city<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> platfrom<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> exam_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> exam_type_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> order_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> child_order_id<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> product_name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">,</span> real_pay<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token keyword">case</span> <span class="token keyword">class</span> Recode<span class="token punctuation">(</span>RECORDS<span class="token operator">:</span>util<span class="token punctuation">.</span>List<span class="token punctuation">[</span>User<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> SparkSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SparkSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SparkSQL组件的理解</title>
      <link href="/2022/04/14/sparksql-zu-jian-li-jie/"/>
      <url>/2022/04/14/sparksql-zu-jian-li-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h2><p>他是一种以RDD为基础的分布式数据集,相当于传统数据库的二维表.</p><p>但是,他与RDD的主要区别在于,他包含了schema元信息.</p><p>即他为数据提供了schema的视图.具体见下图</p><p><img src="/2022/04/14/sparksql-zu-jian-li-jie/RDDPerson.png" alt="RDD[person]">    <img src="/2022/04/14/sparksql-zu-jian-li-jie/DataFrame.png" alt="DataFrame"></p><p>然后有以下几点需要理解:</p><ol><li>他是包含schema元数据信息的<ol><li>这使得spark-sql可以了解到数据更多的结构信息.<ol><li>这就意味着,sqarkSQL可以针对藏于DataFrame背后的数据源以及作用于其上的变化做出针对性的优化,这样也就理所当然的相较于RDD,其的效率得到大幅度的提升.(SparkCore只能作用于stage层面的流水线优化)</li></ol></li></ol></li><li>也是懒执行的,但是性能上要比RDD高<ol><li>这主要得益于他的优化执行计划,即查询计划通过Spark catalyst optimiser进行优化.(具体理解,看下前面代码和解析)<pre class="line-numbers language-scala" data-language="scala"><code class="language-scala">users<span class="token punctuation">.</span>join<span class="token punctuation">(</span>evnets<span class="token punctuation">,</span>users<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> events<span class="token punctuation">(</span><span class="token string">"uid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>filter<span class="token punctuation">(</span>events<span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token string">"2015-01-01"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>如果按照这个代码逻辑执行,那么,在fitler之前就行join操作,必然是没有在fitler进行join操作来得效率高的.因为join是要进行shuffle的,越是大量的数据说要进行的shuffle代价就越是庞大.所以Spark SQL的查询优化器会将fitler放在join之前进行操作.</li></ol></li></ol><h2 id="DataSet"><a href="#DataSet" class="headerlink" title="DataSet"></a>DataSet</h2><p>他是spark 1.6添加的新抽象.</p><ol><li>DataSet = RDD的强类型优势(强大的lambda函数能力) + Spark SQL 的优化执行(DataFrame的优势)</li><li>DataSet 如何使用类型:DataSet[Person],DataSet[Student]</li><li>DataFrame相当于是DataSet的一个特例,类型为RowDataFrame = DataSet[Row]</li><li>DataSet 也可以使用功能性的转换（操作 map，flatMap，filter<br>等等）</li></ol>]]></content>
      
      
      <categories>
          
          <category> SparkSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SparkSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本中单引号和双引号的区别</title>
      <link href="/2022/04/04/shell-jiao-ben-zhong-dan-yin-hao-he-shuang-yin-hao-de-qu-bie/"/>
      <url>/2022/04/04/shell-jiao-ben-zhong-dan-yin-hao-he-shuang-yin-hao-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h2 id="‘-‘里面的东西-不能解析引用"><a href="#‘-‘里面的东西-不能解析引用" class="headerlink" title="‘  ‘里面的东西,不能解析引用"></a>‘  ‘里面的东西,不能解析引用</h2><h3 id="e-g"><a href="#e-g" class="headerlink" title="e.g"></a>e.g</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">export</span> name <span class="token operator">=</span> <span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>echo ‘$name ‘ 输出的就是$name<br>而echo “$name” 输出的是 \12</p><p>==================================================<br></p><p>然后再shell中,机器对于引号的理解是,按<strong>顺序</strong>来的.找到能够匹配的就直接匹配.</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 一下代码,本意是想使用嵌套引号</span><span class="token string">"abd abd "</span>打印 <span class="token string">" abd bad"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>对于以上例子,机器的理解是(为例便于理解,将空格用下划线表示)</p><ul><li>分为三个部分:<br>abd_abd_<br>打印<br>_abd_abd</li><li>合起来就是:<br>abd_abd_打印_abd_abd</li></ul><p>不难发现,打印后面的<strong>空格</strong>没有了.</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/04/04/shu-cang-xiang-mu-de-shu-ju-zhun-bei-jie-duan-de-bu-zou/"/>
      <url>/2022/04/04/shu-cang-xiang-mu-de-shu-ju-zhun-bei-jie-duan-de-bu-zou/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创建Hive表时,报错Unknown column &#39;A0.IS_REWRITE_ENABLED&#39; in &#39;field list&#39;</title>
      <link href="/2022/03/23/hive-cuo-wu-1/"/>
      <url>/2022/03/23/hive-cuo-wu-1/</url>
      
        <content type="html"><![CDATA[<h2 id="创建Hive表时-报错Unknown-column-‘A0-IS-REWRITE-ENABLED’-in-‘field-list’"><a href="#创建Hive表时-报错Unknown-column-‘A0-IS-REWRITE-ENABLED’-in-‘field-list’" class="headerlink" title="创建Hive表时,报错Unknown column ‘A0.IS_REWRITE_ENABLED’ in ‘field list’"></a>创建Hive表时,报错Unknown column ‘A0.IS_REWRITE_ENABLED’ in ‘field list’</h2><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="在hive的元数据-mysql中的metastore数据库中-的TBLS表中添加相应字段"><a href="#在hive的元数据-mysql中的metastore数据库中-的TBLS表中添加相应字段" class="headerlink" title="在hive的元数据(mysql中的metastore数据库中)的TBLS表中添加相应字段"></a>在hive的元数据(mysql中的metastore数据库中)的TBLS表中添加相应字段</h3><p><img src="/2022/03/23/hive-cuo-wu-1/602be56e-1040-47fd-ad3d-0c5abdd73507.png" alt="添加成功后的表结构"><br><strong>比如这次遇到的错误就是没有IS_REWRITE_ENABLED字段.</strong><br>修改sql语法</p><hr><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> TBLS <span class="token keyword">add</span> IS_REWRITE_ENABLED <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> b<span class="token string">'0'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> TBLS change IS_REWRITE_ENABLED NEW_NAME <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> b<span class="token string">'0'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> TBLS <span class="token keyword">drop</span> IS_REWRITE_ENABLED<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://stackoverflow.com/questions/63782822/setting-up-azure-sql-external-metastore-for-azure-databricks-invalid-column-na" title="StackOverFlow">参考解决方案出处</a></p>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive元数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql-inner,left,right,full outer join,union,union all</title>
      <link href="/2022/02/28/sql-inner-left-right-full-outer-join-union-union-all/"/>
      <url>/2022/02/28/sql-inner-left-right-full-outer-join-union-union-all/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ysmintor_/article/details/99694870">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql联接辨析</title>
      <link href="/2022/02/28/sql-lian-jie-bian-xi/"/>
      <url>/2022/02/28/sql-lian-jie-bian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h2><p><img src="/2022/02/28/sql-lian-jie-bian-xi/1.jpg"></p><h2 id="union-和-union-all的异同"><a href="#union-和-union-all的异同" class="headerlink" title="union 和 union all的异同"></a>union 和 union all的异同</h2><ul><li>相同点<br>首先两表所查询的列数与列的类型顺序都必须相同.(简单点,就是所要查询的列要相同)</li><li>区别<br>union去重,而union all不去重</li><li>用法:<br>select * from t1 unoin select * from t2<br>select * from t1 unoin all select * from t2</li></ul><p>图解:<br><img src="/2022/02/28/sql-lian-jie-bian-xi/2.jpg"><br><img src="/2022/02/28/sql-lian-jie-bian-xi/3.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea常用快捷键</title>
      <link href="/2022/01/18/idea-chang-yong-kuai-jie-jian/"/>
      <url>/2022/01/18/idea-chang-yong-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h2><p>所有使用到当前变量的地方</p><pre class="line-numbers language-none"><code class="language-none">shitf + F6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="To-replace-letter-in-totally-page"><a href="#To-replace-letter-in-totally-page" class="headerlink" title="To replace letter in totally page"></a>To replace letter in totally page</h2><pre class="line-numbers language-none"><code class="language-none">ctrl+f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="快速生成对象引用"><a href="#快速生成对象引用" class="headerlink" title="快速生成对象引用"></a>快速生成对象引用</h2><pre class="line-numbers language-none"><code class="language-none">alt+Enter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="打开文件记录-默认上一页"><a href="#打开文件记录-默认上一页" class="headerlink" title="打开文件记录(默认上一页)"></a>打开文件记录(默认上一页)</h2><pre class="line-numbers language-none"><code class="language-none">ctrl+table<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h2><pre class="line-numbers language-none"><code class="language-none">ctrl+shift+F<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="提示参数类型"><a href="#提示参数类型" class="headerlink" title="提示参数类型"></a>提示参数类型</h2><pre class="line-numbers language-none"><code class="language-none">ctrl+alt+&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看某个包下的类容"><a href="#查看某个包下的类容" class="headerlink" title="查看某个包下的类容"></a>查看某个包下的类容</h2><h3 id="以-scala-io包为例"><a href="#以-scala-io包为例" class="headerlink" title="以 scala.io包为例"></a>以 scala.io包为例</h3><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token comment">//先输入</span>scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span>stdIn<span class="token comment">//然后光标移动到io,并按住 ctrl + B</span><span class="token comment">//这样左侧就会出现目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手撕java集合</title>
      <link href="/2021/12/15/java-ji-he/"/>
      <url>/2021/12/15/java-ji-he/</url>
      
        <content type="html"><![CDATA[<h1 id="讲集合先上图"><a href="#讲集合先上图" class="headerlink" title="讲集合先上图"></a>讲集合先上图</h1><p><img src="/2021/12/15/java-ji-he/java%E9%9B%86%E5%90%88%E5%9B%BE.png" alt="java集合框架体系图"></p><h1 id="collection"><a href="#collection" class="headerlink" title="collection"></a>collection</h1><ul><li>1.collection对上继承iterable类,<br>所以collection及其子类皆可以调用iterator()方法获得迭代器.</li><li>2.collection由其子类实现<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>tzk<span class="token punctuation">.</span>collection_</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CollectionTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/**         * 集合中只能存放对象!!!         * */</span>        <span class="token comment">//集合的添加</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"sds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里的21调用了封装 new Integer(21)</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//同理</span>        <span class="token comment">//集合移除元素</span>        list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">/* terminal:            [sds, false]*/</span>        list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"sds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">/* terminal:            [sds, false]        [false]*/</span>        <span class="token comment">//以collection为单位添加</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> list2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1231</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"黄河"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//以collection为单位删除</span>        list<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//以collection为单位,查找该集合是否包含collection里的元素</span>        list<span class="token punctuation">.</span><span class="token function">containsAll</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2>list常用方法:</li><li>指定位置添加</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"大海"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"大海"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"是"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// terminal: 大海,是,大海</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>返回某元素第一次出现的下标</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">list<span class="token punctuation">.</span><span class="token function">indexof</span><span class="token punctuation">(</span><span class="token string">"大海"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>返回某元素最后一次出现的下表</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">list<span class="token punctuation">.</span><span class="token function">lastindexof</span><span class="token punctuation">(</span><span class="token string">"大海"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>元素替换</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">list<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"大海无疆"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>截取元素返回为子集合,左闭右开[ )</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">list<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><h4 id="源码解析图"><a href="#源码解析图" class="headerlink" title="源码解析图"></a>源码解析图</h4><p><img src="/2021/12/15/java-ji-he/ArrayList%E8%A7%A3%E6%9E%90%E5%9B%BE.png" alt="ArrayList源码解析图"></p><ul><li><strong>特点:</strong></li></ul><p>1.<em><strong>底层为数组Array</strong></em><br>2.<em><strong>线程不安全</strong></em><br>3.<em><strong>采用无参构造创建时:</strong></em><br>不初始化,对象引用啥也不指向;只有当进行添加元素时,才会采取按照默认值初始化数组,然后返回给对象引用.<br>4.<em><strong>如果使用带参构造:</strong></em><br>那么照设定值进行数组初始化(但是如果参数设定为0,那么走无参路线).<br>5.<em><strong>扩容方式:</strong></em><br>按照oldCapacity + (oldCapacity &gt;&gt; 1)的方式扩容.即:按照一点五倍扩容.</p><h3 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3><h4 id="源码解析图-1"><a href="#源码解析图-1" class="headerlink" title="源码解析图"></a>源码解析图</h4><p><img src="/2021/12/15/java-ji-he/Vector%E8%A7%A3%E6%9E%90%E5%9B%BE.png" alt="Vector解析图"></p><ul><li><strong>特点:</strong></li></ul><p>1.<em><strong>底层为数组Array</strong></em><br>2.<em><strong>线程安全</strong></em><br>3.<em><strong>采用无参构造创建时:</strong></em><br>那么照默认值进行数组初始化<br>4.<em><strong>如果使用带参构造:</strong></em><br>那么照设定值进行数组初始化,除此之外,还可以设定增量.<br>5.<em><strong>扩容方式:</strong></em><br>按照oldCapacity + (capacityIncrement &gt; 0? capacityIncrement:oldCapacity)的方式扩容.即:有增量,按增量,否者按照2倍扩容</p><p>###LinkedList</p><h4 id="源码解析图-看下结构就行-没什么好看的-就和模拟-面向过程类的语言的写法-C-去写的"><a href="#源码解析图-看下结构就行-没什么好看的-就和模拟-面向过程类的语言的写法-C-去写的" class="headerlink" title="源码解析图(看下结构就行,没什么好看的.就和模拟(面向过程类的语言的写法,C)去写的)"></a>源码解析图(看下结构就行,没什么好看的.就和模拟(面向过程类的语言的写法,C)去写的)</h4><p><img src="/2021/12/15/java-ji-he/LinkedList%E8%A7%A3%E6%9E%90%E5%9B%BE.png" alt="LinkedList解析图"></p><h4 id="其实LinkedList就是个双向链表-符合双向链表的所有特点-没啥好讲的"><a href="#其实LinkedList就是个双向链表-符合双向链表的所有特点-没啥好讲的" class="headerlink" title="其实LinkedList就是个双向链表,符合双向链表的所有特点.没啥好讲的."></a>其实LinkedList就是个双向链表,符合双向链表的所有特点.没啥好讲的.</h4><h4 id="特点"><a href="#特点" class="headerlink" title="特点:"></a>特点:</h4><p>1.从当前节点向前向后检索都特方便.<br>2. 插入方便,只要动动指针指向的东西就行(java里面就是对象引用指向的Node)<br>3. 删除方便,把当前Node的前一个Node的last指向当前Node的后一个Node的地址即可.<br>4. 查找麻烦,必须从头或者从尾部依次检索.</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免税购物的常用语法</title>
      <link href="/2021/12/14/mian-shui-gou-wu-de-chang-yong-yu-fa-ying-yu/"/>
      <url>/2021/12/14/mian-shui-gou-wu-de-chang-yong-yu-fa-ying-yu/</url>
      
        <content type="html"><![CDATA[<h3 id="a-maximum-of"><a href="#a-maximum-of" class="headerlink" title="a maximum of"></a>a maximum of</h3><ul><li>a maximum of one liter is allowed.</li><li>You are allowed a maximum of one liter of liquid.<br>You are permitted a maximum of one liter of liquid.</li><li>A maximum of 5kg of carry-on is allowed.<h3 id="no-more-than"><a href="#no-more-than" class="headerlink" title="no more than"></a>no more than</h3></li><li>no more than one liter is fine</li><li>My carry-ons is no more than five kg<br>carry-on:手提箱,随身包</li><li>It takes me no more than 10 minutes to walk to work</li><li>You can bring no more than one liter of liquid.</li><li>No more than 5kg of carry-on is allowed.</li><li>We are allowed no more than one liter of duty-free alcohol.<br>duty-free:免税</li><li>You are not allowed to open the sealed bag<br>seal[sil]:密封<br>sale[seil]:出售<h3 id="…-max"><a href="#…-max" class="headerlink" title="… max"></a>… max</h3></li><li>500 dollars max<br>how much will the trip cost?<br>500 dollars max.</li><li>The tree-day trip will cost us 800 max<br>这趟三天的旅行最多花费我们八百美元</li></ul>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态分区和动态分区的sql</title>
      <link href="/2021/12/13/dong-tai-fen-qu-yu-jing-tai-fen-qu/"/>
      <url>/2021/12/13/dong-tai-fen-qu-yu-jing-tai-fen-qu/</url>
      
        <content type="html"><![CDATA[<h3 id="动态分区"><a href="#动态分区" class="headerlink" title="动态分区"></a>动态分区</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> dwd_comment_info <span class="token keyword">partition</span> <span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>       user_id<span class="token punctuation">,</span>       sku_id<span class="token punctuation">,</span>       spu_id<span class="token punctuation">,</span>       order_id<span class="token punctuation">,</span>       appraise<span class="token punctuation">,</span>       create_time<span class="token punctuation">,</span>       date_format<span class="token punctuation">(</span>create_time<span class="token punctuation">,</span> <span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token keyword">from</span> ods_comment_info<span class="token keyword">where</span> dt <span class="token operator">=</span> <span class="token string">'2020-06-14'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="静态分区"><a href="#静态分区" class="headerlink" title="静态分区"></a>静态分区</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> dwd_comment_info <span class="token keyword">partition</span> <span class="token punctuation">(</span>dt <span class="token operator">=</span> <span class="token string">'2020-06-15'</span><span class="token punctuation">)</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>       user_id<span class="token punctuation">,</span>       sku_id<span class="token punctuation">,</span>       spu_id<span class="token punctuation">,</span>       order_id<span class="token punctuation">,</span>       appraise<span class="token punctuation">,</span>       create_time<span class="token keyword">from</span> ods_comment_info<span class="token keyword">where</span> dt <span class="token operator">=</span> <span class="token string">'2020-06-15'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Data Warehouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Warehouse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>维度表和事实表</title>
      <link href="/2021/12/13/wei-du-biao-he-shi-shi-biao/"/>
      <url>/2021/12/13/wei-du-biao-he-shi-shi-biao/</url>
      
        <content type="html"><![CDATA[<h3 id="维度表"><a href="#维度表" class="headerlink" title="维度表"></a>维度表</h3><p>相当于对象</p><h3 id="事实表"><a href="#事实表" class="headerlink" title="事实表"></a>事实表</h3><p>存储维度表外键与度量值(这个事件中除了对象之外的属性)</p><h3 id="接下来直接上例子，就很好理解了"><a href="#接下来直接上例子，就很好理解了" class="headerlink" title="接下来直接上例子，就很好理解了"></a>接下来直接上例子，就很好理解了</h3><p>做一个淘宝的模拟建模:<br>今天小明去淘宝买了一瓶灵泛得乐，花费25块钱</p><ul><li>   维度表:<br>根据时间,地点,人物理论建模<br>time(时间)<br>shop(商家)<br>goods(商品)<br>user(用户表)</li></ul><ul><li>事实表:<ul><li>度量值<br>一瓶<br>25块钱</li><li>维度表外键<br>time_id<br>shop_id<br>goods_id<br>user_id</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Data Warehouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Warehouse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修仙图片</title>
      <link href="/2021/12/01/xiu-xian-tu-pian/"/>
      <url>/2021/12/01/xiu-xian-tu-pian/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/12/01/xiu-xian-tu-pian/%E9%BE%99.png" alt="修仙图片"></p>]]></content>
      
      
      <categories>
          
          <category> 图片 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于==和equals的比较</title>
      <link href="/2021/11/30/guan-yu-he-equals-de-bi-jiao/"/>
      <url>/2021/11/30/guan-yu-he-equals-de-bi-jiao/</url>
      
        <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title="=="></a>==</h2><ul><li>存放在堆中,比较地址<br>像对象啊比较的就是地址</li><li>存放在栈中,比较值<br>像基本数据类型,比较的就是值</li></ul><h2 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h2><p>在objec里equals就是直接用的==<br>至于他们为什么会有区别呢?<br>那是因为在<strong>String,Integer,Date</strong>等类中,equals被改写了,比较的是它自身的值,而不是他们在堆中的地址了</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数式编程</title>
      <link href="/2021/11/29/han-shu-shi-bian-cheng/"/>
      <url>/2021/11/29/han-shu-shi-bian-cheng/</url>
      
        <content type="html"><![CDATA[<p>先来看一下,下面的函数定义:</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">def</span> f<span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是不是很像数学上的f(x)= 表达式<br>没错,这就是函数式变成,它所在意的是<strong>自变量</strong>和<strong>因变量</strong>之间的<strong>映射关系</strong>.</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token builtin">Int</span> <span class="token keyword">=></span> <span class="token builtin">Int</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也就是数学上的函数,所以才有了以上的写法.这样只学了数学的人就会相对容易的上手.<br>由于数学上的函数,相对是定死的(对于自变量x有且仅有唯一的一个f(x)值与之对应 ).不会有变化.该是怎么样的曲线便是什么样的曲线.<br>而,在分布式系统上需要的就是这样的稳定性.一拍即合.<br>它天生便适合大数据,或者说为大数据而生也不为过.</p><h2 id="函数致简原则"><a href="#函数致简原则" class="headerlink" title="函数致简原则"></a>函数致简原则</h2><p>记住一点就够了:当参数在=&gt;右边只出现一次,用_替代即可<br>其他的就按照能省既省原则即可<br>example</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">def</span> f<span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token operator">=</span> name<span class="token operator">+</span><span class="token string">"一点信仰!!!"</span><span class="token comment">// name:String => name+"一点信仰!!!"</span><span class="token comment">// _ + "一点信仰!!!"</span><span class="token keyword">def</span> f2<span class="token punctuation">(</span>fn<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token keyword">=></span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>fn<span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>f2<span class="token punctuation">(</span>_<span class="token operator">+</span><span class="token string">"一点信仰!!!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> lambda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux上传下载</title>
      <link href="/2021/11/25/linux-shang-chuan-xia-zai/"/>
      <url>/2021/11/25/linux-shang-chuan-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="linux文件上传下载使用lrzsz"><a href="#linux文件上传下载使用lrzsz" class="headerlink" title="linux文件上传下载使用lrzsz"></a>linux文件上传下载使用lrzsz</h1><h2 id="先安装这个工具"><a href="#先安装这个工具" class="headerlink" title="先安装这个工具"></a>先安装这个工具</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y lrzsz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li><p>单文件下载</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sz filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后他会弹出GUI,点点点就行了</p></li><li><p>多文件下载</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sz filename,filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>下载目录下所有文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sz d/*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><ul><li>统一操作<br>跳转到你想要的存放文件的linux目录下,使用如下命令<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>之后在GUI上操做就行.</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop中 hdfs,yarn..等等流程图及解析</title>
      <link href="/2021/11/22/hadoop/"/>
      <url>/2021/11/22/hadoop/</url>
      
        <content type="html"><![CDATA[<h2 id="hadoop中-hdfs-yarn-等等流程图"><a href="#hadoop中-hdfs-yarn-等等流程图" class="headerlink" title="hadoop中 hdfs,yarn..等等流程图"></a>hadoop中 hdfs,yarn..等等流程图</h2><h3 id="HDFS写流程图"><a href="#HDFS写流程图" class="headerlink" title="HDFS写流程图:"></a>HDFS写流程图:</h3><h4 id="文字解说"><a href="#文字解说" class="headerlink" title="文字解说:"></a>文字解说:</h4><p><strong>HDFS客户端创建分布式文件系统:</strong></p><ul><li>1.向NameNode提交在HDFS上创建文件的申请.</li><li>DataNode核对:<br>是否拥有权限(是)<br>是否才在此文件(否)</li><li>2.满足条件后,NameNode返回同意响应.</li><li>3.向NameNode提交上传第一个块的请求</li><li>4.NameNode返回用于存储该块的DataNode</li><li>选取策略:<br>本地节点<br>其他机架上的节点<br>其他机架上的不通节点</li></ul><p><strong>收到消息后,HDFS客户端打开outputstream:</strong></p><ul><li>5.向DataNode1提交请求,建立Block传输通道,DataNode之间层层传递直到最后一个DataNode3.</li><li>6.DataNode3返回同意,在层层同意之后返回FSDataOutputStream</li><li>7.然后开始以Packet(64k)为单位传递给DataNode</li><li>1.DataNode内部,数据是在ByteBuffer里不断流动给下一个DataNode的,与此同时,又会持久化于本地磁盘.</li><li>2.Packet每次传递后,节点都会逐层给与应答,只有当都成功了后,才会给与下一个Packet,否则再次传递.</li><li>3.Packet是由(chunk512byte+chunksum4byte(校验位))攒够64K形成的.<br>&emsp;提一下,在HDFS客户端开启FSDataOutputstra之前,会先创建一个这个缓冲队列,这个队列就是用来慢慢形成一个个的Packet.</li><li>传递完成后给与NameNode反馈</li></ul><p><img src="/2021/11/22/hadoop/HDFS%E5%86%99%E6%95%B0%E6%8D%AE%E6%B5%81%E7%A8%8B.png" alt="HDFS写流程图"></p>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office安装</title>
      <link href="/2021/11/22/office/"/>
      <url>/2021/11/22/office/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.coolhub.top/archives/14">office安装,你懂得!!!</a><br><a href="https://otp.landian.vip/en-us/">office Tool Plus</a></p>]]></content>
      
      
      <categories>
          
          <category> office </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>蚂蚁金服题目</title>
      <link href="/2021/11/20/ma-yi-jin-fu-de-ti-mu/"/>
      <url>/2021/11/20/ma-yi-jin-fu-de-ti-mu/</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><em><strong>今天做了两道蚂蚁金服的题目,题目蛮不错的,记录下吧</strong></em></p><p>背景说明：<br>以下表记录了用户每天的蚂蚁森林低碳生活领取的记录流水。<br>table_name：user_low_carbon<br>user_id data_dt  low_carbon<br>用户     日期      减少碳排放（g）</p><p>蚂蚁森林植物换购表，用于记录申领环保植物所需要减少的碳排放量<br>table_name:  plant_carbon<br>plant_id plant_name low_carbon<br>植物编号    植物名    换购植物所需要的碳</p><p>—-题目<br>1.蚂蚁森林植物申领统计<br>问题：假设2017年1月1日开始记录低碳数据（user_low_carbon），<br>假设2017年10月1日之前满足申领条件的用户都申领了一颗p004-胡杨，<br>剩余的能量全部用来领取“p002-沙柳” 。<br>统计在10月1日累计申领“p002-沙柳” 排名前10的用户信息；以及他比后一名多领了几颗沙柳。<br>得到的统计结果如下表样式：<br>user_id  plant_count less_count(比后一名多领了几颗沙柳)<br>u_101    1000         100<br>u_088    900          400<br>u_103    500          …</p><p>2、蚂蚁森林低碳用户排名分析<br>问题：查询user_low_carbon表中每日流水记录，条件为：<br>用户在2017年，连续三天（或以上）的天数里，<br>每天减少碳排放（low_carbon）都超过100g的用户低碳流水。<br>需要查询返回满足以上条件的user_low_carbon表中的记录流水。<br>例如用户u_002符合条件的记录如下，因为2017/1/2~2017/1/5连续四天的碳排放量之和都大于等于100g：<br>seq（key） user_id data_dt  low_carbon<br>xxxxx10    u_002  2017/1/2  150<br>xxxxx11    u_002  2017/1/2  70<br>xxxxx12    u_002  2017/1/3  30<br>xxxxx13    u_002  2017/1/3  80<br>xxxxx14    u_002  2017/1/4  150<br>xxxxx14    u_002  2017/1/5  101<br>备注：统计方法不限于sql、procedure、python,java等</p><h4 id="第一题答案"><a href="#第一题答案" class="headerlink" title="第一题答案:"></a>第一题答案:</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 第一题</span><span class="token comment">-- t3</span><span class="token keyword">select</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>num_p002<span class="token punctuation">,</span>  nvl<span class="token punctuation">(</span>t3<span class="token punctuation">.</span>num_p002 <span class="token operator">-</span> lead<span class="token punctuation">(</span>t3<span class="token punctuation">.</span>num_p002<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">order</span> <span class="token keyword">by</span> num_p002 <span class="token keyword">desc</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'后面没有了'</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  cast<span class="token punctuation">(</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>summer_low_carbon <span class="token operator">-</span> pc<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> <span class="token operator">/</span> pc2<span class="token punctuation">.</span>low_carbon <span class="token keyword">as</span> <span class="token keyword">int</span><span class="token punctuation">)</span> num_p002<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> summer_low_carbon<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> date_d<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon    <span class="token punctuation">)</span>t1<span class="token keyword">where</span> datediff<span class="token punctuation">(</span><span class="token string">'2017-10-1'</span><span class="token punctuation">,</span>t1<span class="token punctuation">.</span>date_d<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token keyword">group</span> <span class="token keyword">by</span> user_id<span class="token keyword">order</span> <span class="token keyword">by</span> user_id  <span class="token punctuation">)</span>t2<span class="token keyword">left</span> <span class="token keyword">join</span> plant_carbon pc<span class="token keyword">on</span> pc<span class="token punctuation">.</span>plant_id <span class="token operator">&lt;=></span> <span class="token string">'p004'</span><span class="token keyword">left</span> <span class="token keyword">join</span> plant_carbon pc2<span class="token keyword">on</span> pc2<span class="token punctuation">.</span>plant_id <span class="token operator">&lt;=></span> <span class="token string">'p002'</span>  <span class="token punctuation">)</span>t3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- t0</span><span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> date_d<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon<span class="token comment">-- t1</span><span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> summer_low_carbon<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> date_d<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon    <span class="token punctuation">)</span>t1<span class="token keyword">where</span> datediff<span class="token punctuation">(</span><span class="token string">'2017-10-1'</span><span class="token punctuation">,</span>t1<span class="token punctuation">.</span>date_d<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token keyword">group</span> <span class="token keyword">by</span> user_id<span class="token keyword">order</span> <span class="token keyword">by</span> user_id<span class="token comment">-- t2</span><span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  cast<span class="token punctuation">(</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>summer_low_carbon <span class="token operator">-</span> pc<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> <span class="token operator">/</span> pc2<span class="token punctuation">.</span>low_carbon <span class="token keyword">as</span> <span class="token keyword">int</span><span class="token punctuation">)</span> num_p002<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> summer_low_carbon<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> date_d<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon    <span class="token punctuation">)</span>t1<span class="token keyword">where</span> datediff<span class="token punctuation">(</span><span class="token string">'2017-10-1'</span><span class="token punctuation">,</span>t1<span class="token punctuation">.</span>date_d<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token keyword">group</span> <span class="token keyword">by</span> user_id<span class="token keyword">order</span> <span class="token keyword">by</span> user_id  <span class="token punctuation">)</span>t2<span class="token keyword">left</span> <span class="token keyword">join</span> plant_carbon pc<span class="token keyword">on</span> pc<span class="token punctuation">.</span>plant_id <span class="token operator">&lt;=></span> <span class="token string">'p004'</span><span class="token keyword">left</span> <span class="token keyword">join</span> plant_carbon pc2<span class="token keyword">on</span> pc2<span class="token punctuation">.</span>plant_id <span class="token operator">&lt;=></span> <span class="token string">'p002'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二题答案"><a href="#第二题答案" class="headerlink" title="第二题答案"></a>第二题答案</h4><pre class="line-numbers language-hive" data-language="hive"><code class="language-hive">select t6.user_id,tmp2.key,tmp2.valuefrom(    select t5.user_id,       tmp.ex_datefrom(      select t4.user_id,           t4.date_tong,          collect_list(map(t4.f_date,t4.sum_low_carbon)) list_map_dfrom(    select t3.user_id,           t3.f_date,           t3.sum_low_carbon,           date_add(t3.f_date,t3.rank_num) date_tongfrom(   select t2.user_id,       t2.f_date,       t2.sum_low_carbon,       rank() over (distribute by t2.user_id sort by t2.f_date desc) rank_numfrom(    select t1.user_id,t1.f_date,           sum(t1.low_carbon) sum_low_carbonfrom(    select user_id,       date_format(concat_ws(&#39;-&#39;,substring(date_dt,1,4),substring(date_dt,6,1),substring(date_dt,8,1)),&#39;yyy-MM-dd&#39;) f_date,       low_carbonfrom user_low_carbon        )t1group by t1.user_id,t1.f_date        )t2where t2.sum_low_carbon &gt; 100        )t3        )t4group by user_id,t4.date_tonghaving count(*) &gt;&#x3D; 3        )t5 lateral view explode(t5.list_map_d) tmp as ex_date        )t6 lateral view explode(t6.ex_date) tmp2 as key,valueorder by t6.user_id,tmp2.key;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 第二题</span><span class="token comment">-- t0</span><span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon<span class="token comment">-- t1</span><span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon        <span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token keyword">order</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id <span class="token keyword">asc</span><span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date <span class="token keyword">desc</span><span class="token comment">-- t2</span><span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span> <span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t2<span class="token punctuation">.</span>user_id sort <span class="token keyword">by</span> t2<span class="token punctuation">.</span>f_date <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_num<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> sum_low_carbon<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon        <span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date        <span class="token punctuation">)</span>t2<span class="token keyword">where</span> t2<span class="token punctuation">.</span>sum_low_carbon <span class="token operator">></span> <span class="token number">100</span><span class="token comment">-- order by t2.user_id asc,t2.f_date desc;</span><span class="token comment">-- t3</span>  <span class="token keyword">select</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  date_add<span class="token punctuation">(</span>t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>rank_num<span class="token punctuation">)</span> date_tong<span class="token keyword">from</span><span class="token punctuation">(</span>   <span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span> <span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t2<span class="token punctuation">.</span>user_id sort <span class="token keyword">by</span> t2<span class="token punctuation">.</span>f_date <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_num<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> sum_low_carbon<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon        <span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date        <span class="token punctuation">)</span>t2<span class="token keyword">where</span> t2<span class="token punctuation">.</span>sum_low_carbon <span class="token operator">></span> <span class="token number">100</span>  <span class="token punctuation">)</span>t3 <span class="token keyword">where</span> user_id <span class="token operator">=</span> <span class="token string">'u_010'</span><span class="token keyword">order</span> <span class="token keyword">by</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>f_date<span class="token comment">-- t4</span>  <span class="token keyword">select</span> t4<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t4<span class="token punctuation">.</span>date_tong<span class="token punctuation">,</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/*            collect_list(t4.f_date) date_list, collect_list(cast(t4.sum_low_carbon as string)) l_c_list,*/</span>  collect_list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>t4<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>t4<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">)</span><span class="token punctuation">)</span> list_map_d       <span class="token comment">-- `map`(t4.f_date,cast(t4.sum_low_carbon as string)) over(partition by t4.user_id,t4.sum_low_carbon)</span> <span class="token comment">-- concat_ws(',',collect_list(t4.f_date)) date_list, -- concat_ws(',',collect_list(cast(t4.sum_low_carbon as string))) l_c_listfrom(</span>    <span class="token keyword">select</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  date_add<span class="token punctuation">(</span>t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>rank_num<span class="token punctuation">)</span> date_tong<span class="token keyword">from</span><span class="token punctuation">(</span>   <span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span> <span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t2<span class="token punctuation">.</span>user_id sort <span class="token keyword">by</span> t2<span class="token punctuation">.</span>f_date <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_num<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  <span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> sum_low_carbon<span class="token comment">/*           concat_ws('|',collect_list(t1.f_date)), concat_ws('|',collect_list(cast(t1.low_carbon as string)))*/</span><span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon        <span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date        <span class="token punctuation">)</span>t2<span class="token keyword">where</span> t2<span class="token punctuation">.</span>sum_low_carbon <span class="token operator">></span> <span class="token number">100</span>  <span class="token punctuation">)</span>t3        <span class="token punctuation">)</span>t4<span class="token keyword">group</span> <span class="token keyword">by</span> user_id<span class="token punctuation">,</span>t4<span class="token punctuation">.</span>date_tong<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">3</span><span class="token comment">-- t5</span><span class="token keyword">select</span> t5<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  tmp<span class="token punctuation">.</span>ex_date<span class="token keyword">from</span><span class="token punctuation">(</span>      <span class="token keyword">select</span> t4<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t4<span class="token punctuation">.</span>date_tong<span class="token punctuation">,</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/*            collect_list(t4.f_date) date_list, collect_list(cast(t4.sum_low_carbon as string)) l_c_list,*/</span>  collect_list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>t4<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>t4<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">)</span><span class="token punctuation">)</span> list_map_d       <span class="token comment">-- `map`(t4.f_date,cast(t4.sum_low_carbon as string)) over(partition by t4.user_id,t4.sum_low_carbon)</span> <span class="token comment">-- concat_ws(',',collect_list(t4.f_date)) date_list, -- concat_ws(',',collect_list(cast(t4.sum_low_carbon as string))) l_c_listfrom(</span>    <span class="token keyword">select</span> t3<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t3<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  date_add<span class="token punctuation">(</span>t3<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>t3<span class="token punctuation">.</span>rank_num<span class="token punctuation">)</span> date_tong<span class="token keyword">from</span><span class="token punctuation">(</span>   <span class="token keyword">select</span> t2<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  t2<span class="token punctuation">.</span>sum_low_carbon<span class="token punctuation">,</span>  rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span> <span class="token punctuation">(</span>distribute <span class="token keyword">by</span> t2<span class="token punctuation">.</span>user_id sort <span class="token keyword">by</span> t2<span class="token punctuation">.</span>f_date <span class="token keyword">desc</span><span class="token punctuation">)</span> rank_num<span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date<span class="token punctuation">,</span>  <span class="token function">sum</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>low_carbon<span class="token punctuation">)</span> sum_low_carbon<span class="token comment">/*           concat_ws('|',collect_list(t1.f_date)), concat_ws('|',collect_list(cast(t1.low_carbon as string)))*/</span><span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>  date_format<span class="token punctuation">(</span>concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>substring<span class="token punctuation">(</span>date_dt<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'yyy-MM-dd'</span><span class="token punctuation">)</span> f_date<span class="token punctuation">,</span>  low_carbon<span class="token keyword">from</span> user_low_carbon        <span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>f_date        <span class="token punctuation">)</span>t2<span class="token keyword">where</span> t2<span class="token punctuation">.</span>sum_low_carbon <span class="token operator">></span> <span class="token number">100</span>  <span class="token punctuation">)</span>t3        <span class="token punctuation">)</span>t4<span class="token keyword">group</span> <span class="token keyword">by</span> user_id<span class="token punctuation">,</span>t4<span class="token punctuation">.</span>date_tong<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">3</span>  <span class="token punctuation">)</span>t5 lateral <span class="token keyword">view</span> explode<span class="token punctuation">(</span>t5<span class="token punctuation">.</span>list_map_d<span class="token punctuation">)</span> tmp <span class="token keyword">as</span> ex_date<span class="token keyword">where</span> t5<span class="token punctuation">.</span>user_id <span class="token operator">=</span> <span class="token string">'u_002'</span><span class="token keyword">order</span> <span class="token keyword">by</span> t5<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>tmp<span class="token punctuation">.</span>ex_date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hive基础</title>
      <link href="/2021/11/19/hive-ji-chu/"/>
      <url>/2021/11/19/hive-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="强转"><a href="#强转" class="headerlink" title="强转"></a>强转</h3><p>cast(‘4’ as INT)</p><p>如果强制类型转换失败，如执行CAST(‘X’ AS INT)，表达式返回空值 NULL.</p><h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><p>之后在复习,先过</p><h2 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h2><p>之后在复习,先过</p><h2 id="DSL"><a href="#DSL" class="headerlink" title="DSL"></a>DSL</h2><p><strong>EDIT:</strong>  sql里的基本语法就不再做赘述了</p><h3 id="where语句"><a href="#where语句" class="headerlink" title="where语句"></a>where语句</h3><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><ul><li>&lt;=&gt;安全等于<ul><li>example如果A和B都为NULL，则返回TRUE，其他的和等号（=）操作符的结果一致，如果任一为NULL则结果为NULL</li></ul></li><li>IN在此之中<ul><li>example<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 查询姓名叫小明或小花的员工</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">,</span><span class="token string">"小花"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ul><br><h4 id="RLIKE和LIKE"><a href="#RLIKE和LIKE" class="headerlink" title="RLIKE和LIKE"></a>RLIKE和LIKE</h4><ul><li>区别RLIKE支持java正则表达式LIKE不支持</li></ul><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><h4 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP BY"></a>GROUP BY</h4><p>GROUP BY语句通常会和聚合函数一起使用，按照一个或者多个列队结果进行分组，然后对每个组执行聚合操作。</p><p><strong>案例实操</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 计算emp表每个部门的平均工资</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>deptno<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>sal<span class="token punctuation">)</span> avg_sal <span class="token keyword">from</span> emp t <span class="token keyword">group</span> <span class="token keyword">by</span> t<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span><span class="token comment">-- 计算emp每个部门中每个岗位的最高薪水</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>deptno<span class="token punctuation">,</span> t<span class="token punctuation">.</span>job<span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>sal<span class="token punctuation">)</span> max_sal <span class="token keyword">from</span> emp t <span class="token keyword">group</span> <span class="token keyword">by</span> t<span class="token punctuation">.</span>deptno<span class="token punctuation">,</span> t<span class="token punctuation">.</span>job<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h4 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h4><p>HAVING 针对的是查询后的结果集进行条件过滤.</p><p>WHERE 针对的是表本身</p><p><strong>案例实操</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 求每个部门的平均薪水大于2000的部门</span>hive <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token keyword">select</span> deptno<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> avg_sal <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno <span class="token keyword">having</span> avg_sal <span class="token operator">></span> <span class="token number">2000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><ul><li>join内连接,左右表格都满足HAVING条件的数据,才会输出到结果即</li><li>left join以join左边的表为基准(左边表满足WHERE条件数据全输出),右边表满足HAVING条件的数据才会输出.没有的用空值替代</li><li>right join与left join同理</li><li>full join左右满足WHERE条件的表全输出,任意一方没有满足HAVING条件则用空值替代<br></li></ul><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h4><p>全局排序,一个reducer</p><h4 id="sort-by"><a href="#sort-by" class="headerlink" title="sort by"></a>sort by</h4><p>reducer内部排序</p><p>常与distribute by 连用</p><h4 id="distribute-by"><a href="#distribute-by" class="headerlink" title="distribute by"></a>distribute by</h4><ul><li>案例<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> empdistribute <span class="token keyword">by</span> deptnosort <span class="token keyword">by</span> name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>案例sql解释:按照部门分区,每个分区内按照员工姓名排序(默认asc)</li></ul><h4 id="cluster-by"><a href="#cluster-by" class="headerlink" title="cluster by"></a>cluster by</h4><p>等同于使用统一标准的distribute by sort by(sort by 按照升序 asc)</p><ul><li>案例<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 两种等价写法</span>hive <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp cluster <span class="token keyword">by</span> deptno<span class="token punctuation">;</span>hive <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp distribute <span class="token keyword">by</span> deptno sort <span class="token keyword">by</span> deptno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">需要注意的是,分区不一定就是一个固定死的值,也可是1到10号部门分到一个区.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><br><h3 id="常用的查询函数"><a href="#常用的查询函数" class="headerlink" title="常用的查询函数"></a>常用的查询函数</h3><h4 id="NVL"><a href="#NVL" class="headerlink" title="NVL"></a>NVL</h4><p>NVL(a,replace_1)</p><p>如果a为NULL,则用replcae_1替换a</p><p>如果a和replace_1都为NULL,那么返回NULL</p><ul><li>案例<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> nvl<span class="token punctuation">(</span>salary<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token comment">-- 如果salary为空,则返回-1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h4 id="CASE-WHEN"><a href="#CASE-WHEN" class="headerlink" title="CASE WHEN"></a>CASE WHEN</h4><p>条件判断</p><ul><li>案例:查询不通部门员工男女各多少人<ul><li>数据:<br>悟空    A    男<br>大海    A    男<br>宋宋    B    男<br>凤姐    A    女<br>婷姐    B    女<br>婷婷    B    女</li></ul></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> d<span class="token punctuation">.</span>deptno<span class="token punctuation">,</span>d<span class="token punctuation">.</span>name<span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> e<span class="token punctuation">.</span>sex <span class="token keyword">when</span> <span class="token string">'男'</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> male_number<span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> e<span class="token punctuation">.</span>sex <span class="token keyword">when</span> <span class="token string">'女'</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> female_number<span class="token keyword">from</span> emp e<span class="token keyword">right</span> <span class="token keyword">join</span> dept d<span class="token keyword">having</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno<span class="token keyword">group</span> <span class="token keyword">by</span> d<span class="token punctuation">.</span>deptno<span class="token keyword">order</span> <span class="token keyword">by</span> d<span class="token punctuation">.</span>deptno <span class="token keyword">desc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h4 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h4><p>讲白了就是合并</p><p>这里设计到三个函数</p><ul><li>concatconcat(a,’,’,b)返回的就是a,b</li><li>concat_ws(separator,str1,str2,….)第一个参数为分隔符,之后可以传递一个集合也是可以的concat_ws(separator,array)</li><li>collect_set(col)将该字段的值去重汇总返回一个array类型的字段</li></ul><h5 id="直接上案例"><a href="#直接上案例" class="headerlink" title="直接上案例"></a>直接上案例</h5><ul><li>原始数据</li></ul><table><thead><tr><th align="center">name</th><th align="center">constellation</th><th align="center">blood_type</th></tr></thead><tbody><tr><td align="center">孙悟空</td><td align="center">白羊座</td><td align="center">A</td></tr><tr><td align="center">大海无疆</td><td align="center">射手座</td><td align="center">A</td></tr><tr><td align="center">小宋</td><td align="center">白羊座</td><td align="center">B</td></tr><tr><td align="center">猪八戒</td><td align="center">白羊座</td><td align="center">A</td></tr><tr><td align="center">凤姐</td><td align="center">射手座</td><td align="center">A</td></tr></tbody></table><ul><li>需求:<br>得到星座与血型都相同的人物分类表<br>射手座,A            &emsp;大海无疆|凤姐<br>白羊座,A            &emsp;孙悟空|猪八戒<br>白羊座,B            &emsp;小宋</li></ul><ul><li>解题<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 思路:先求出星座和血型合并的表t1</span><span class="token keyword">select</span> concat<span class="token punctuation">(</span>constellation<span class="token punctuation">,</span><span class="token string">','</span><span class="token punctuation">,</span>blood_type<span class="token punctuation">)</span> base_type<span class="token punctuation">,</span>name<span class="token keyword">from</span> emp<span class="token comment">-- 再根据t1按照base_type分组处理</span><span class="token keyword">select</span> t1<span class="token punctuation">.</span>base_type<span class="token punctuation">,</span>concat_ws<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span>collect_set<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> concat<span class="token punctuation">(</span>constellation<span class="token punctuation">,</span><span class="token string">','</span><span class="token punctuation">,</span>blood_type<span class="token punctuation">)</span> base_type<span class="token punctuation">,</span>name<span class="token keyword">from</span> emp<span class="token punctuation">)</span>t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>base_type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="列转行"><a href="#列转行" class="headerlink" title="列转行"></a>列转行</h4><p>讲白了就是爆破.拆分列</p><ul><li>   explode()<br>这是自带的exploed()爆破函数,但是只能对map或者array类型进行操作<br>操作格式:<br>lateral view UDTF函数()<br>e.g<br>lateral view explode()<h5 id="直接上实例"><a href="#直接上实例" class="headerlink" title="直接上实例"></a>直接上实例</h5></li><li>   原始数据</li></ul><table><thead><tr><th align="center">movie</th><th align="center">category</th></tr></thead><tbody><tr><td align="center">《疑犯追踪》</td><td align="center">悬疑,动作,科幻,剧情</td></tr><tr><td align="center">《Lie to me》</td><td align="center">悬疑,警匪,动作,心理,剧情</td></tr><tr><td align="center">《战狼2》</td><td align="center">战争,动作,灾难</td></tr></tbody></table><ul><li><p>   需求<br>将电影分类中的数组数据展开<br>《疑犯追踪》      悬疑<br>《疑犯追踪》      动作<br>《疑犯追踪》      科幻<br>《疑犯追踪》      剧情<br>《Lie to me》   悬疑<br>《Lie to me》   警匪<br>《Lie to me》   动作<br>《Lie to me》   心理<br>《Lie to me》   剧情<br>《战狼2》        战争<br>《战狼2》        动作<br>《战狼2》        灾难</p></li><li><p>   解决</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 把category炸开</span><span class="token keyword">select</span> moive<span class="token punctuation">,</span>ex_category<span class="token keyword">from</span> moives lateral <span class="token keyword">view</span> explode<span class="token punctuation">(</span>category<span class="token punctuation">)</span> 侧表 <span class="token keyword">as</span> ex_category<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="开天窗"><a href="#开天窗" class="headerlink" title="开天窗"></a>开天窗</h3><p>有几点总结一下吧:</p></li></ul><ol><li>更具最后查询结果进行开天窗</li><li>天窗逐步扩大(步数为:1行)</li><li>开窗最终大小以分区大小决定</li></ol><ul><li>   以一下这组数据为例<br>name,日期<br>zs,20210801<br>zs,20210802<br>zs,20210803<br>zs,20210804<br>zs,20210806<br>zs,20210807<br>zs,20210808<br>zs,20210811<br>zs,20210812<br>ls,20210730<br>ls,20210731<br>ls,20210801<br>ls,20210804<br>ls,20210806</li></ul><p>若是over(partition by name),那么有逐步开窗示意图如下:<br><img src="/2021/11/19/hive-ji-chu/017d9a7f-5665-4022-8646-fa428eb7d536.png"></p><p>之后就来几组经典例题帮组理解吧.</p>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awk函数辨析</title>
      <link href="/2021/11/18/awk-ming-ling-bian-xi/"/>
      <url>/2021/11/18/awk-ming-ling-bian-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="awk命名基础解析"><a href="#awk命名基础解析" class="headerlink" title="awk命名基础解析"></a>awk命名基础解析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>awk会将传递过来的数据按照一个整体处理的</p><p>awk主要有三模块组成:(可以按照junit测试来理解.)</p><pre><code>BEGIN&#123;&#125;:开始执行前的准备阶段,可以理解为初始化PATTERN&#123;&#125;:操作命令END&#123;&#125;:操作结束后的处理,收尾工作.</code></pre><ul><li>样式<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">awk <span class="token string">'BEGIN&#123;&#125;&#123;&#125;END&#123;&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>由此我们可以想到:    在BEGIN阶段用于指定按照什么分割传入过来的一行数据.</p><h2 id="不多BB直接上案例"><a href="#不多BB直接上案例" class="headerlink" title="不多BB直接上案例"></a>不多BB直接上案例</h2><br><ul><li>example<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 按照","分割 打印出第一列数据(下标从1开始)</span>awk <span class="token string">'BEGIN&#123;FS=","&#125;&#123;print $1&#125;'</span><span class="token comment"># 等价写法</span>awk <span class="token operator">-</span>F<span class="token punctuation">,</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token comment"># 关于\t,就有了一些区别</span><span class="token comment"># 想如下这样写法</span>awk <span class="token operator">-</span>F\t <span class="token string">'&#123;print $1&#125;'</span><span class="token comment"># 这里的\他是识别不到的,直接把他理解成了t</span><span class="token comment"># 即:在他的理解里,当前是按照"t"为分割付进行处理的</span><span class="token comment"># auther: tzkTangXS</span><span class="token comment"># 那么就有两种处理办法</span><span class="token comment"># 1.在加上一个反斜杠"\"将这个原来的"\"转义一下,转义成"\"</span>awk <span class="token operator">-</span>F\\t <span class="token string">'&#123;print $1&#125;'</span><span class="token comment"># 2.第二种写法: 使用''号</span>awk <span class="token operator">-</span>F <span class="token string">'\t'</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token comment"># 讲到了'',那么有一个点就可以提一下:</span><span class="token comment"># 多分割付操作.不多BB,看例题</span>awk <span class="token operator">-</span>F <span class="token string">'[ a]'</span> <span class="token string">'&#123;print $1&#125;'</span> tzkTest<span class="token comment"># 这句话的意识就是:</span><span class="token comment"># 读取tzkTest里的数据.首先按照空格来切割.</span><span class="token comment">#   再然后按照a类切割</span><span class="token comment">#   最后输出第一列</span><span class="token comment"># exmaple</span><span class="token comment"># 假如tzkTest里的数据是如下形式(按\t分割):</span><span class="token comment"># wo heng hao heng shuai</span><span class="token comment"># wo  ui  ni  lk  gs</span>awk <span class="token operator">-</span>F <span class="token string">'[\te]'</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token comment"># terimal</span>huiawk <span class="token operator">-</span>F <span class="token string">'[\te]'</span> <span class="token string">'&#123;print $3&#125;'</span><span class="token comment"># terimal</span>ng<span class="token function">ni</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="常用参数解释"><a href="#常用参数解释" class="headerlink" title="常用参数解释"></a>常用参数解释</h2><ul><li>NR行数(官方语言)一以读出的记录数目</li><li>NF这一行的列数(字段数目)(官方语言)一条记录的字段数目</li><li>FS指定分隔符</li><li>$n指定第几列(字段)</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctrl+c,ctrl+z等指令解析</title>
      <link href="/2021/11/18/ctrl-z-ztrl-c-deng-ming-ling-jie-xi/"/>
      <url>/2021/11/18/ctrl-z-ztrl-c-deng-ming-ling-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="命令解析"><a href="#命令解析" class="headerlink" title="命令解析"></a>命令解析</h2><h3 id="ctrl-z"><a href="#ctrl-z" class="headerlink" title="ctrl+z"></a>ctrl+z</h3><ul><li><p>英文名:</p><p>suspend foreground process</p></li><li><p>详解:</p><p>发送SIGSTOP型号给前台进程组中的所有进程.</p><p>由名字可知,他是用于<strong>挂起前台进程</strong>的命令.那么就可以使用fg命令回复.</p></li><li><p>实用案例:</p><p>在使用vi编辑时,如果需要去使用shell命令了,可以使用ctrl+z进行挂起,然后再利用fg命令回到vi编辑界面.</p></li></ul><br><h3 id="ctrl-c"><a href="#ctrl-c" class="headerlink" title="ctrl+c"></a>ctrl+c</h3><ul><li>英文名:kill foreground process</li><li>详解:发送SIGINT 型号给前台进程组中的所有进程.<strong>强制终止程序的执行</strong></li></ul><h3 id="ctrl-d"><a href="#ctrl-d" class="headerlink" title="ctrl+d"></a>ctrl+d</h3><ul><li><p>解析:</p><p>一个特殊的二进制值:EOF.(结尾符).代表结束.</p><p>文件流也是EOF作为结尾.(数据流都是二进制?目前的理解.目前的计算机大部分都是二进制计算机,所以所有信号都是二进制的方式传递的)</p><p>**edit:**写到此处,想到了我们老师说过,以前也出现过三进制的计算机,但是由于成本太低赚不到钱所以就被淘汰了.这……..万恶的资本主义.</p></li><li><p>用例:</p><p>终止当前shell等等</p></li></ul><h3 id="ctrl"><a href="#ctrl" class="headerlink" title="ctrl+/"></a>ctrl+/</h3><ul><li>解析:发送SIGQUIT型号给前台进程组终止前台进程并<strong>生成core文件</strong></li></ul><h3 id="ctrl-s"><a href="#ctrl-s" class="headerlink" title="ctrl+s"></a>ctrl+s</h3><ul><li>解析:中断控制台输出</li></ul><h3 id="ctrl-q"><a href="#ctrl-q" class="headerlink" title="ctrl+q"></a>ctrl+q</h3><ul><li>解析:恢复控制台输出</li></ul><h3 id="ctrl-l"><a href="#ctrl-l" class="headerlink" title="ctrl-l"></a>ctrl-l</h3><ul><li>解析:=clean</li></ul><p>**edit:**以上这些控制字符均可通过stty -a 命令查看</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>适用所有情况的VM扩容(在做数仓时遇到的问题)</title>
      <link href="/2021/11/17/xu-ni-ji-kuo-rong/"/>
      <url>/2021/11/17/xu-ni-ji-kuo-rong/</url>
      
        <content type="html"><![CDATA[<p><strong>edti:</strong></p><ul><li>   <strong>起因:</strong> 在做数仓项目的时候,由于数据过多,划分的磁盘不够用了,需要在根目录下扩容.</li><li>   <strong>但是:</strong> 由于当初下载的是最小版centos,导致根本没有分组卷等等一些情况.网上的扩容方法并不适用于我.</li><li>   <strong>解决思路:</strong> 于是乎想到了,划分的是一块地址连续的空间,那么只要满足”/“的这块空间是扩容后空间的子集那么数据就没有问题了,至于紧随其后的swap分区,本身就是交换分区,从新在尾部再划一块给他就行了</li><li>   <strong>使用范围:</strong> 该方法适用于所有情况.</li></ul><h2 id="查看分区"><a href="#查看分区" class="headerlink" title="查看分区"></a>查看分区</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">lsblk -f<span class="token function">fdisk</span> -l<span class="token comment">#查看磁盘使用情况</span><span class="token function">df</span> -h<span class="token comment">#如果swap分区在根分区的下面，那么肯定要重新划分swap分区的。查看下swap分区的情况</span><span class="token function">free</span> -h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除当前分区，并且重新划分大小"><a href="#删除当前分区，并且重新划分大小" class="headerlink" title="删除当前分区，并且重新划分大小"></a>删除当前分区，并且重新划分大小</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">fdisk</span> /dev/sda<span class="token comment">#查看分区</span>p<span class="token comment">#删除指定分区</span>d<span class="token comment">#选择你所要删除的分区序列号</span><span class="token comment">#添加新分区</span>n<span class="token comment">#选择相同序列好即可</span><span class="token comment">#重新分配大小，即：start --> end</span><span class="token comment">#写入分区操作</span>w<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><h3 id="查看分区格式"><a href="#查看分区格式" class="headerlink" title="查看分区格式"></a>查看分区格式</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">lsblk -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更具分区类型执行以下"><a href="#更具分区类型执行以下" class="headerlink" title="更具分区类型执行以下"></a>更具分区类型执行以下</h2><h3 id="如果分区是-ext格式"><a href="#如果分区是-ext格式" class="headerlink" title="如果分区是 ext格式"></a>如果分区是 ext格式</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">resize2fs /dev/sda2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="如果分区是xfs格式"><a href="#如果分区是xfs格式" class="headerlink" title="如果分区是xfs格式"></a>如果分区是xfs格式</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">xfs_growfs /dev/sda2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看磁盘使用情况"><a href="#查看磁盘使用情况" class="headerlink" title="查看磁盘使用情况"></a>查看磁盘使用情况</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">df</span> -h<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="就此更目录扩容完成，但是如果你的swap分区的序列在你的更目录的下面，那么就需要重新划分一下swap分区。"><a href="#就此更目录扩容完成，但是如果你的swap分区的序列在你的更目录的下面，那么就需要重新划分一下swap分区。" class="headerlink" title="就此更目录扩容完成，但是如果你的swap分区的序列在你的更目录的下面，那么就需要重新划分一下swap分区。"></a>就此更目录扩容完成，但是如果你的swap分区的序列在你的更目录的下面，那么就需要重新划分一下swap分区。</h2><h2 id="查看swap分区"><a href="#查看swap分区" class="headerlink" title="查看swap分区"></a>查看swap分区</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">lsblk -f<span class="token function">free</span> -h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>发现没有uuid,没有该分区，大小为0G</strong><br>制造swap分区</p><hr><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkswap</span> /dev/sda3<span class="token comment">#查看uuid</span>blkid /dev/sda3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="将这个写入-etc-fstab-并挂载所有"><a href="#将这个写入-etc-fstab-并挂载所有" class="headerlink" title="将这个写入/etc/fstab,并挂载所有"></a>将这个写入/etc/fstab,并挂载所有</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#将sda3的uuid改为当前新的uuid即可</span><span class="token function">vim</span> /etc/fstab<span class="token comment">#挂载所有</span><span class="token function">mount</span> -a<span class="token comment">#再次查看</span><span class="token function">free</span> -h<span class="token comment">#发现已经挂载了swap分区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hive常用函数</title>
      <link href="/2021/11/17/hive-chang-yong-han-shu/"/>
      <url>/2021/11/17/hive-chang-yong-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="判空"><a href="#判空" class="headerlink" title="判空"></a>判空</h1><h2 id="nvl"><a href="#nvl" class="headerlink" title="nvl"></a>nvl</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> nvl<span class="token punctuation">(</span>salary<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="coalesce"><a href="#coalesce" class="headerlink" title="coalesce"></a>coalesce</h2><p>coalesce(a,b,c,’ddd’)<br>解析:</p><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token comment">// scala</span><span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token string">'ddd'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="对集合的操作"><a href="#对集合的操作" class="headerlink" title="对集合的操作"></a>对集合的操作</h1><h2 id="将String-转换成Map"><a href="#将String-转换成Map" class="headerlink" title="将String 转换成Map"></a>将String 转换成Map</h2><p>str_to_map()</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">str_to_map<span class="token punctuation">(</span><span class="token keyword">text</span><span class="token punctuation">,</span>delimited1<span class="token punctuation">,</span>delimited2<span class="token punctuation">)</span><span class="token comment">-- 解析:</span><span class="token comment">-- delimited1是kv kv kv 之间的分隔符</span><span class="token comment">-- delimited2是k与v之间的分隔符</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="判断集合中是否包含某元素"><a href="#判断集合中是否包含某元素" class="headerlink" title="判断集合中是否包含某元素"></a>判断集合中是否包含某元素</h2><p>array_contains()</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 这是数仓项目中,对于DWS层访客用户表的装载语句中的一个条件判断</span><span class="token comment">-- 判断是否为新增访客</span><span class="token comment">-- 将is_new字段放入set中去重,然后判断是否存在'0',如果存在则返回true,否者返回false</span><span class="token keyword">if</span><span class="token punctuation">(</span>array_contains<span class="token punctuation">(</span>collect_set<span class="token punctuation">(</span>is_new<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将数据放入结构体中"><a href="#将数据放入结构体中" class="headerlink" title="将数据放入结构体中"></a>将数据放入结构体中</h2><p><em><strong>named_struct</strong></em></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">with</span> t1 <span class="token keyword">as</span>         <span class="token punctuation">(</span><span class="token keyword">select</span> mid_id<span class="token punctuation">,</span>                 page_id<span class="token punctuation">,</span>                 <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>         page_count<span class="token punctuation">,</span>                 <span class="token function">sum</span><span class="token punctuation">(</span>during_time<span class="token punctuation">)</span> during_time          <span class="token keyword">from</span> dwd_page_log          <span class="token keyword">where</span> dt <span class="token operator">=</span> <span class="token string">'2020-06-14'</span>          <span class="token keyword">group</span> <span class="token keyword">by</span> mid_id<span class="token punctuation">,</span> page_id<span class="token punctuation">)</span><span class="token keyword">select</span> mid_id<span class="token punctuation">,</span>       collect_set<span class="token punctuation">(</span>named_struct<span class="token punctuation">(</span><span class="token string">'page_id'</span><span class="token punctuation">,</span> page_id<span class="token punctuation">,</span> <span class="token string">'page_count'</span><span class="token punctuation">,</span> page_count<span class="token punctuation">,</span> <span class="token string">'during_time'</span><span class="token punctuation">,</span> during_time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span> t1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h1><ul><li>select date_format(‘2017-3-4’,’yyyy-mm-dd HH:mm:ss’);</li><li>   select date_add(‘2017-6-29’,4);<br>terminal: 2017-7-3</li><li>   select date_add(‘2017-6-27’,-4);<br>terminal: 2017-6-23</li><li>   select datediff(‘2017-7-3’,’2017-6-29’);<br>terminal: 4</li><li>   select datediff(‘2017-6-29’,’2017-7-3’);<br>terminal: -4</li><li>select next_day(‘2020-06-14’,’MO’)<br>返回下一周周一的日期</li><li>select date_add(next_day(‘2020-06-14’,’MO’),-7);<br>当前周周一的日期</li><li>   select regexp_replace(‘2019/07/03’,’/‘,’-‘);<br>terminal: 2019-07-03</li></ul><h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><h2 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h2><p><em><strong>case when then else end</strong></em></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 格式:</span><span class="token keyword">case</span> <span class="token keyword">when</span> finish_time <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> refund_time <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token operator">and</span> date_add<span class="token punctuation">(</span>date_format<span class="token punctuation">(</span>finish_time<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token string">'2020-6-14'</span> <span class="token keyword">then</span> date_format<span class="token punctuation">(</span>finish_time<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">when</span> refund_finish_time <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">then</span> date_format<span class="token punctuation">(</span>refund_finish_time<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">when</span> cancel_time <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">then</span> date_format<span class="token punctuation">(</span>cancel_time<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">when</span> expire_time <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">then</span> date_format<span class="token punctuation">(</span>expire_time<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">'9999-99-99'</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> sex <span class="token keyword">when</span> <span class="token string">'男'</span>  <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> male_count<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> sex <span class="token keyword">when</span> <span class="token string">'女'</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> female_count<span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno <span class="token keyword">order</span> <span class="token keyword">by</span> deptno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 这是数仓项目中,对于DWS层访客用户表的装载语句中的一个条件判断</span><span class="token comment">-- 判断是否为新增访客</span><span class="token comment">-- 将is_new字段放入set中去重,然后判断是否存在'0',如果存在则返回true,否者返回false</span><span class="token comment">-- 然后放入if中进行判断给与相应返回值</span><span class="token keyword">if</span><span class="token punctuation">(</span>array_contains<span class="token punctuation">(</span>collect_set<span class="token punctuation">(</span>is_new<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="with-as"><a href="#with-as" class="headerlink" title="with as"></a>with as</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">with</span>tmp1 <span class="token keyword">as</span><span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1<span class="token punctuation">)</span>tmp2 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t2<span class="token punctuation">)</span>tmp3 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t3<span class="token punctuation">)</span><span class="token keyword">insert</span> overwirte <span class="token keyword">table</span> t4<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> tmp1<span class="token keyword">left</span> <span class="token keyword">join</span> tmp2<span class="token keyword">on</span> tmp1<span class="token punctuation">.</span>id <span class="token operator">=</span> tmp2<span class="token punctuation">.</span>id<span class="token keyword">left</span> <span class="token keyword">join</span> tmp3<span class="token keyword">on</span> <span class="token keyword">coalesce</span><span class="token punctuation">(</span>tmp1<span class="token punctuation">.</span>id<span class="token punctuation">,</span>tmp2<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token operator">=</span> tmp3<span class="token punctuation">.</span>id<span class="token comment">-- on nvl(tmp1.id,tmp2.id) = tmp3.id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="concat-行转列"><a href="#concat-行转列" class="headerlink" title="concat//行转列"></a>concat//行转列</h1><h2 id="第一步-t1"><a href="#第一步-t1" class="headerlink" title="第一步 t1"></a>第一步 t1</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> concat_sw<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>xz<span class="token punctuation">,</span>xx<span class="token punctuation">)</span> xz_xx<span class="token keyword">from</span> emp<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="第二步t2"><a href="#第二步t2" class="headerlink" title="第二步t2"></a>第二步t2</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> t1<span class="token punctuation">.</span>xz_xx<span class="token punctuation">,</span> concat_sw<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span>collect_set<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span> t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>xz_xx<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三步-整合"><a href="#第三步-整合" class="headerlink" title="第三步:整合"></a>第三步:整合</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> t1<span class="token punctuation">.</span>xz_xx<span class="token punctuation">,</span> concat_sw<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span>collect_set<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> concat_sw<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>xz<span class="token punctuation">,</span>xx<span class="token punctuation">)</span> xz_xx<span class="token keyword">from</span> emp<span class="token punctuation">;</span><span class="token punctuation">)</span>    t1<span class="token keyword">group</span> <span class="token keyword">by</span> t1<span class="token punctuation">.</span>xz_xx<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="列转行"><a href="#列转行" class="headerlink" title="列转行"></a>列转行</h1><h2 id="explode-将hive中复杂的array-或-map-拆分"><a href="#explode-将hive中复杂的array-或-map-拆分" class="headerlink" title="explode 将hive中复杂的array 或 map 拆分"></a>explode 将hive中复杂的array 或 map 拆分</h2><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> movie_info<span class="token punctuation">(</span>movie_name string<span class="token punctuation">,</span>category array<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">'\t'</span>collection items <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/opt/module/datas/movie.txt'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> <span class="token keyword">into</span> movie_info<span class="token punctuation">;</span><span class="token keyword">select</span> movie<span class="token punctuation">,</span>category_name<span class="token keyword">from</span>movie_info lateral <span class="token keyword">view</span> explode<span class="token punctuation">(</span>category<span class="token punctuation">)</span> table_tmp <span class="token keyword">as</span> category_name<span class="token punctuation">;</span><span class="token keyword">select</span> movie_name<span class="token punctuation">,</span>category_name<span class="token keyword">from</span>movie_info cateral <span class="token keyword">view</span> explode<span class="token punctuation">(</span>category<span class="token punctuation">)</span> table_tmp <span class="token keyword">as</span> catgory_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h1><h2 id="over"><a href="#over" class="headerlink" title="over():"></a>over():</h2><p>指定分析函数工作窗口大小，随着行变化</p><h4 id="current-row"><a href="#current-row" class="headerlink" title="current row"></a>current row</h4><h4 id="n-preceding-向前移动n行"><a href="#n-preceding-向前移动n行" class="headerlink" title="n preceding:    向前移动n行"></a>n preceding:    向前移动n行</h4><h4 id="n-following-向后移动N行"><a href="#n-following-向后移动N行" class="headerlink" title="n following:    向后移动N行"></a>n following:    向后移动N行</h4><h4 id="unbounded-启点"><a href="#unbounded-启点" class="headerlink" title="unbounded    启点"></a>unbounded    启点</h4><p>unbounded preceding<br>unbounded following</p><h2 id="lag-col-n"><a href="#lag-col-n" class="headerlink" title="lag(col,n);"></a>lag(col,n);</h2><h2 id="lead-col-n"><a href="#lead-col-n" class="headerlink" title="lead(col,n);"></a>lead(col,n);</h2><h1 id="ntile-n-把有序分区的行分发到指定数据的组中，各个组有编号，编号从1开始。对于每一个ntile返回此行所属的组的编号。"><a href="#ntile-n-把有序分区的行分发到指定数据的组中，各个组有编号，编号从1开始。对于每一个ntile返回此行所属的组的编号。" class="headerlink" title="ntile(n)    把有序分区的行分发到指定数据的组中，各个组有编号，编号从1开始。对于每一个ntile返回此行所属的组的编号。"></a>ntile(n)    把有序分区的行分发到指定数据的组中，各个组有编号，编号从1开始。对于每一个ntile返回此行所属的组的编号。</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> business<span class="token punctuation">(</span>name string<span class="token punctuation">,</span>order_date <span class="token keyword">date</span><span class="token punctuation">,</span>cost <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/opt/module/data/business'</span><span class="token keyword">into</span> <span class="token keyword">table</span> business<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询2017-04购买过商品的顾客及总人数"><a href="#查询2017-04购买过商品的顾客及总人数" class="headerlink" title="查询2017-04购买过商品的顾客及总人数"></a>查询2017-04购买过商品的顾客及总人数</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">from</span> business<span class="token keyword">where</span> substring<span class="token punctuation">(</span>orderdate<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'2017-04'</span><span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询顾客购买明细，及月购买总额。"><a href="#查询顾客购买明细，及月购买总额。" class="headerlink" title="查询顾客购买明细，及月购买总额。"></a>查询顾客购买明细，及月购买总额。</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>cost<span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span>partitioned <span class="token keyword">by</span> <span class="token keyword">month</span><span class="token punctuation">(</span>order_date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span>business<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
            <tag> function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL-排序</title>
      <link href="/2021/11/17/dql-pai-xu/"/>
      <url>/2021/11/17/dql-pai-xu/</url>
      
        <content type="html"><![CDATA[<h1 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h1><p>全排序</p><p>reduce数只有一，不管设置没设置。</p><pre class="line-numbers language-hql" data-language="hql"><code class="language-hql">select d.name,e.name from dept d left join emp e on d.id &#x3D; e.deptId order by d.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="sort-by"><a href="#sort-by" class="headerlink" title="sort by"></a>sort by</h1><p>分区排序,通常与distribute by 连用</p><h2 id="查看reduce数"><a href="#查看reduce数" class="headerlink" title="查看reduce数"></a>查看reduce数</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">set mapreduce.job.reduces;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置reduce数"><a href="#设置reduce数" class="headerlink" title="设置reduce数"></a>设置reduce数</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">set mapreduce.job.reduces&#x3D;3;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><pre class="line-numbers language-hql" data-language="hql"><code class="language-hql">select * from dept sort by dept.deptno;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="distribute-by"><a href="#distribute-by" class="headerlink" title="distribute by"></a>distribute by</h1><p>设定以什么分区</p><h2 id="同样的设置reduce数"><a href="#同样的设置reduce数" class="headerlink" title="同样的设置reduce数"></a>同样的设置reduce数</h2><pre class="line-numbers language-none"><code class="language-none">set mapreduce.job.redueces&#x3D;6;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="distribute-by-sort-by"><a href="#distribute-by-sort-by" class="headerlink" title="distribute by + sort by;"></a>distribute by + sort by;</h2><pre class="line-numbers language-none"><code class="language-none">select d.no,d.name,e.no,e.name from dept d left join emp e on d.eno &#x3D; e.no distribute by dept.no sort by e.no;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="cluster-by"><a href="#cluster-by" class="headerlink" title="cluster by"></a>cluster by</h1><p>相当于使用同一标准的distribute by + sort by;<br>例如：</p><pre class="line-numbers language-none"><code class="language-none">select d.*,e.* from dept d left join emp e on d.eno &#x3D; e.nocluster by d.no;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">select d.*,e.* from dept d left join emp e on d.eno&#x3D;e.no distribute by d.no sort by d.no;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DQL </tag>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开天窗与否的区别</title>
      <link href="/2021/11/17/kai-tian-chuang-yu-fou-de-qu-bie/"/>
      <url>/2021/11/17/kai-tian-chuang-yu-fou-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h1 id="关于开天窗与不开天窗的区别"><a href="#关于开天窗与不开天窗的区别" class="headerlink" title="关于开天窗与不开天窗的区别"></a>关于开天窗与不开天窗的区别</h1><p>使用 over()是对<strong>最终结果集</strong>进行开天窗。</p><p>如果不使用，即不开天窗。受到group by等函数影响。</p><h2 id="example"><a href="#example" class="headerlink" title="example:"></a>example:</h2><pre class="line-numbers language-hql" data-language="hql"><code class="language-hql">select name,count(1) from business where substring(orderdate,1,7) &#x3D; &#39;2017-04&#39;group by name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="terminal"><a href="#terminal" class="headerlink" title="terminal:"></a>terminal:</h3><p>name    _c1<br>jack    1<br>mart    4</p><pre class="line-numbers language-hql" data-language="hql"><code class="language-hql">select name,count(1) over() from business where substring(orderdate,1,7) &#x3D; &#39;2017-04&#39;group by name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="terminal-1"><a href="#terminal-1" class="headerlink" title="terminal:"></a>terminal:</h3><p>name    count_window_0<br>mart    2<br>jack    2</p><h2 id="business表"><a href="#business表" class="headerlink" title="business表"></a>business表</h2><p>jack,2017-01-01,10<br>tony,2017-01-02,15<br>jack,2017-02-03,23<br>tony,2017-01-04,29<br>jack,2017-01-05,46<br>jack,2017-04-06,42<br>tony,2017-01-07,50<br>jack,2017-01-08,55<br>mart,2017-04-08,62<br>mart,2017-04-09,68<br>neil,2017-05-10,12<br>mart,2017-04-11,75<br>neil,2017-06-12,80<br>mart,2017-04-13,94</p><h2 id="建表语句"><a href="#建表语句" class="headerlink" title="建表语句"></a>建表语句</h2><pre class="line-numbers language-hql" data-language="hql"><code class="language-hql">create table business(name string,orderdate string,cost int) ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;,&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
            <tag> over() </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell指令(电商数仓项目)</title>
      <link href="/2021/11/17/shell-jiao-ben/"/>
      <url>/2021/11/17/shell-jiao-ben/</url>
      
        <content type="html"><![CDATA[<h2 id="集群分发脚本"><a href="#集群分发脚本" class="headerlink" title="集群分发脚本"></a>集群分发脚本</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token comment">#使用方法:</span><span class="token comment">#第一个参数输入文件路径</span><span class="token comment">#如果只同步到一个服务器上就只要在第二个参数上填写服务器编号就行</span><span class="token comment">#如果是要同步一个范围的服务器,那么写上开始节点和结束节点就行</span><span class="token assign-left variable">num</span><span class="token operator">=</span><span class="token variable">$#</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$num</span> -lt <span class="token number">2</span> <span class="token punctuation">]</span><span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">'参数小于二,参数至少要两个'</span><span class="token keyword">else</span>        <span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token variable">$1</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> -e <span class="token variable">$path</span> <span class="token punctuation">]</span>        <span class="token keyword">then</span>                <span class="token assign-left variable">fname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $path<span class="token variable">`</span></span>                <span class="token assign-left variable">dname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">cd</span> -P <span class="token punctuation">$(</span>dirname $path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>                <span class="token assign-left variable">me</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">whoami</span><span class="token variable">`</span></span>                <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$num</span> -gt <span class="token number">2</span> <span class="token punctuation">]</span>                <span class="token keyword">then</span>                        <span class="token assign-left variable">startNode</span><span class="token operator">=</span><span class="token variable">$2</span>                        <span class="token assign-left variable">endNode</span><span class="token operator">=</span><span class="token variable">$3</span>                        <span class="token keyword">for</span><span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span>startNode<span class="token punctuation">;</span>i <span class="token operator">&lt;</span> endNode<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span>                        <span class="token keyword">do</span>                                <span class="token builtin class-name">echo</span> <span class="token string">"======同步hadoop<span class="token variable">$i</span>======"</span>                                <span class="token function">rsync</span> -avl <span class="token variable">$dname</span>/<span class="token variable">$fname</span> <span class="token variable">$me</span>@hadoop<span class="token variable">$i</span><span class="token builtin class-name">:</span><span class="token variable">$dname</span>/                        <span class="token keyword">done</span>                <span class="token keyword">else</span>                                <span class="token builtin class-name">echo</span> <span class="token string">"======同步hadoop<span class="token variable">$2</span>======"</span>                                <span class="token function">rsync</span> -avl <span class="token variable">$dname</span>/<span class="token variable">$fname</span> <span class="token variable">$me</span>@hadoop<span class="token variable">$2</span><span class="token builtin class-name">:</span><span class="token variable">$dname</span>/                  <span class="token keyword">fi</span>         <span class="token keyword">else</span>                <span class="token builtin class-name">echo</span> <span class="token string">"没有<span class="token variable">$dname</span>/<span class="token variable">$fname</span>这个文件或目录或等等"</span>        <span class="token keyword">fi</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="集群查看脚本"><a href="#集群查看脚本" class="headerlink" title="集群查看脚本"></a>集群查看脚本</h2><h3 id="xcall"><a href="#xcall" class="headerlink" title="xcall"></a>xcall</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103<span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token variable">$i</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"<span class="token variable">$*</span>"</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="集群启动脚本"><a href="#集群启动脚本" class="headerlink" title="集群启动脚本"></a>集群启动脚本</h2><h3 id="cluster-sh"><a href="#cluster-sh" class="headerlink" title="cluster.sh"></a>cluster.sh</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token builtin class-name">echo</span> <span class="token string">"==============集群统一启动中============"</span>        <span class="token builtin class-name">echo</span> <span class="token string">"=======启动zookeeper======="</span>        zk start        <span class="token builtin class-name">echo</span> <span class="token string">"=====启动hadoop===="</span>        hdp start        <span class="token builtin class-name">echo</span> <span class="token string">"====启动Kafka======="</span>        kfk start        <span class="token builtin class-name">echo</span> <span class="token string">"======启动采集Flume====="</span>        f1 start        <span class="token builtin class-name">echo</span> <span class="token string">"========启动消费Flume========"</span>        f2 start<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token builtin class-name">echo</span> <span class="token string">"=========停止集群========="</span>        <span class="token builtin class-name">echo</span> <span class="token string">"=======停止消费Flume======"</span>        f2 stop        <span class="token builtin class-name">echo</span> <span class="token string">"=======停止采集Flume======"</span>        f1 stop        <span class="token builtin class-name">echo</span> <span class="token string">"=======停止Kafka======"</span>        kfk stop        <span class="token builtin class-name">echo</span> <span class="token string">"=======停止Hadoop======"</span>        hdp stop        <span class="token builtin class-name">echo</span> <span class="token string">"=======停止Zookeeper======"</span>        zk stop<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="zk"><a href="#zk" class="headerlink" title="zk"></a>zk</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103    <span class="token keyword">do</span>        <span class="token builtin class-name">echo</span> <span class="token string">"===========<span class="token variable">$i</span>=========="</span>        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh start"</span>    <span class="token keyword">done</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103    <span class="token keyword">do</span>        <span class="token builtin class-name">echo</span> <span class="token string">"===========<span class="token variable">$i</span>=========="</span>        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh stop"</span>    <span class="token keyword">done</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"status"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103    <span class="token keyword">do</span>        <span class="token builtin class-name">echo</span> <span class="token string">"===========<span class="token variable">$i</span>=========="</span>        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh status"</span>    <span class="token keyword">done</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="hdp"><a href="#hdp" class="headerlink" title="hdp"></a>hdp</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> -lt <span class="token number">1</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"No Args Input..."</span>    <span class="token builtin class-name">exit</span> <span class="token punctuation">;</span><span class="token keyword">fi</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">" =================== 启动 hadoop集群 ==================="</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 启动 hdfs ---------------"</span>        <span class="token function">ssh</span> hadoop101 <span class="token string">"start-dfs.sh"</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 启动 yarn ---------------"</span>        <span class="token function">ssh</span> hadoop102 <span class="token string">"start-yarn.sh"</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 启动 historyserver ---------------"</span>        <span class="token function">ssh</span> hadoop101 <span class="token string">"mapred --daemon start historyserver"</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">" =================== 关闭 hadoop集群 ==================="</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 关闭 historyserver ---------------"</span>        <span class="token function">ssh</span> hadoop101 <span class="token string">"mapred --daemon stop historyserver"</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 关闭 yarn ---------------"</span>        <span class="token function">ssh</span> hadoop102 <span class="token string">"stop-yarn.sh"</span>        <span class="token builtin class-name">echo</span> <span class="token string">" --------------- 关闭 hdfs ---------------"</span>        <span class="token function">ssh</span> hadoop101 <span class="token string">"stop-dfs.sh"</span><span class="token punctuation">;</span><span class="token punctuation">;</span>*<span class="token punctuation">)</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Input Args Error..."</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="kfk"><a href="#kfk" class="headerlink" title="kfk"></a>kfk</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103    <span class="token keyword">do</span>        <span class="token builtin class-name">echo</span> <span class="token string">"================starting <span class="token variable">$i</span> kafka==========="</span>        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"kafka-server-start.sh -daemon <span class="token variable">$KAFKA_HOME</span>/config/server.properties"</span>    <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103    <span class="token keyword">do</span>        <span class="token builtin class-name">echo</span> <span class="token string">"=============stoping <span class="token variable">$i</span> kafka==========="</span>        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"kafka-server-stop.sh stop"</span>    <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="f1"><a href="#f1" class="headerlink" title="f1"></a>f1</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#! /bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">" --------启动 <span class="token variable">$i</span> 采集flume-------"</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"nohup flume-ng agent --conf-file <span class="token variable">$FLUME_HOME</span>/conf/file-flume-kafka.conf --name a1 -Dflume.root.logger=INFO,LOGFILE >/opt/module/EBDW/flume/log1.txt 2>&amp;1  &amp;"</span>        <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">" --------停止 <span class="token variable">$i</span> 采集flume-------"</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"ps -ef | grep file-flume-kafka | grep -v grep |awk  '&#123;print \<span class="token variable">$2</span>&#125;' | xargs -n1 kill -9 "</span>        <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="f2"><a href="#f2" class="headerlink" title="f2"></a>f2</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#消费flume集群操作脚本</span><span class="token comment">#! /bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop103        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">" --------启动 <span class="token variable">$i</span> 消费flume-------"</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"nohup flume-ng agent --conf-file <span class="token variable">$FLUME_HOME</span>/conf/kafka-flume-hdfs.conf --name a1 -Dflume.root.logger=INFO,LOGFILE > <span class="token variable">$FLUME_HOME</span>/log2.txt   2>&amp;1 &amp;"</span>        <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop103        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">" --------停止 <span class="token variable">$i</span> 消费flume-------"</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"ps -ef | grep kafka-flume-hdfs | grep -v grep |awk '&#123;print \<span class="token variable">$2</span>&#125;' | xargs -n1 kill"</span>        <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将业务数据从mysql传递到hdfs上"><a href="#将业务数据从mysql传递到hdfs上" class="headerlink" title="将业务数据从mysql传递到hdfs上"></a>将业务数据从mysql传递到hdfs上</h2><h3 id="mysql-to-hdfs-init-首日同步脚本"><a href="#mysql-to-hdfs-init-首日同步脚本" class="headerlink" title="mysql_to_hdfs_init(首日同步脚本)"></a>mysql_to_hdfs_init(首日同步脚本)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#! /bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token comment"># sqoop=/opt/module/sqoop/bin/sqoop</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>   <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"请传入日期参数"</span>   <span class="token builtin class-name">exit</span><span class="token keyword">fi</span> <span class="token function-name function">import_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>sqoop <span class="token function">import</span> <span class="token punctuation">\</span>--connect jdbc:mysql://hadoop101:3306/<span class="token variable">$APP</span> <span class="token punctuation">\</span>--username root <span class="token punctuation">\</span>--password <span class="token number">764991</span> <span class="token punctuation">\</span>--target-dir /origin_data/<span class="token variable">$APP</span>/db/<span class="token variable">$1</span>/<span class="token variable">$do_date</span> <span class="token punctuation">\</span>--delete-target-dir <span class="token punctuation">\</span>--query <span class="token string">"<span class="token variable">$2</span> where \<span class="token variable">$CONDITIONS</span>"</span> <span class="token punctuation">\</span>--num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>--fields-terminated-by <span class="token string">'\t'</span> <span class="token punctuation">\</span>--compress <span class="token punctuation">\</span>--compression-codec lzop <span class="token punctuation">\</span>--null-string <span class="token string">'\\N'</span> <span class="token punctuation">\</span>--null-non-string <span class="token string">'\\N'</span>hadoop jar /opt/module/EBDW/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /origin_data/<span class="token variable">$APP</span>/db/<span class="token variable">$1</span>/<span class="token variable">$do_date</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data order_info <span class="token string">"select                            id,                             total_amount,                             order_status,                             user_id,                             payment_way,                            delivery_address,                            out_trade_no,                             create_time,                             operate_time,                            expire_time,                            tracking_no,                            province_id,                            activity_reduce_amount,                            coupon_reduce_amount,                                                        original_total_amount,                            feight_fee,                            feight_fee_reduce                              from order_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_coupon_use</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data coupon_use <span class="token string">"select                          id,                          coupon_id,                          user_id,                          order_id,                          coupon_status,                          get_time,                          using_time,                          used_time,                          expire_time                        from coupon_use"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_status_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data order_status_log <span class="token string">"select                                  id,                                  order_id,                                  order_status,                                  operate_time                                from order_status_log"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_user_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data <span class="token string">"user_info"</span> <span class="token string">"select                             id,                            login_name,                            nick_name,                            name,                            phone_num,                            email,                            user_level,                             birthday,                            gender,                            create_time,                            operate_time                          from user_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_detail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data order_detail <span class="token string">"select                               id,                              order_id,                               sku_id,                              sku_name,                              order_price,                              sku_num,                               create_time,                              source_type,                              source_id,                              split_total_amount,                              split_activity_amount,                              split_coupon_amount                            from order_detail"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_payment_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data <span class="token string">"payment_info"</span>  <span class="token string">"select                                 id,                                  out_trade_no,                                 order_id,                                 user_id,                                 payment_type,                                 trade_no,                                 total_amount,                                  subject,                                 payment_status,                                create_time,                                callback_time                               from payment_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_comment_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data comment_info <span class="token string">"select                              id,                              user_id,                              sku_id,                              spu_id,                              order_id,                              appraise,                              create_time                            from comment_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_refund_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data order_refund_info <span class="token string">"select                                id,                                user_id,                                order_id,                                sku_id,                                refund_type,                                refund_num,                                refund_amount,                                refund_reason_type,                                refund_status,                                create_time                              from order_refund_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_sku_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data sku_info <span class="token string">"select                           id,                          spu_id,                          price,                          sku_name,                          sku_desc,                          weight,                          tm_id,                          category3_id,                          is_sale,                          create_time                        from sku_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_category1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data <span class="token string">"base_category1"</span> <span class="token string">"select                                   id,                                  name                                 from base_category1"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_category2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data <span class="token string">"base_category2"</span> <span class="token string">"select                                  id,                                  name,                                  category1_id                                 from base_category2"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_category3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data <span class="token string">"base_category3"</span> <span class="token string">"select                                  id,                                  name,                                  category2_id                                from base_category3"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_province</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data base_province <span class="token string">"select                              id,                              name,                              region_id,                              area_code,                              iso_code,                              iso_3166_2                            from base_province"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_region</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data base_region <span class="token string">"select                              id,                              region_name                            from base_region"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_trademark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data base_trademark <span class="token string">"select                                id,                                tm_name                              from base_trademark"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_spu_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data spu_info <span class="token string">"select                            id,                            spu_name,                            category3_id,                            tm_id                          from spu_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_favor_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data favor_info <span class="token string">"select                          id,                          user_id,                          sku_id,                          spu_id,                          is_cancel,                          create_time,                          cancel_time                        from favor_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_cart_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data cart_info <span class="token string">"select                        id,                        user_id,                        sku_id,                        cart_price,                        sku_num,                        sku_name,                        create_time,                        operate_time,                        is_ordered,                        order_time,                        source_type,                        source_id                      from cart_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_coupon_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data coupon_info <span class="token string">"select                          id,                          coupon_name,                          coupon_type,                          condition_amount,                          condition_num,                          activity_id,                          benefit_amount,                          benefit_discount,                          create_time,                          range_type,                          limit_num,                          taken_count,                          start_time,                          end_time,                          operate_time,                          expire_time                        from coupon_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_activity_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  import_data activity_info <span class="token string">"select                              id,                              activity_name,                              activity_type,                              start_time,                              end_time,                              create_time                            from activity_info"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_activity_rule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data activity_rule <span class="token string">"select                                    id,                                    activity_id,                                    activity_type,                                    condition_amount,                                    condition_num,                                    benefit_amount,                                    benefit_discount,                                    benefit_level                                from activity_rule"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_base_dic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data base_dic <span class="token string">"select                            dic_code,                            dic_name,                            parent_code,                            create_time,                            operate_time                          from base_dic"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_detail_activity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data order_detail_activity <span class="token string">"select                                                                id,                                                                order_id,                                                                order_detail_id,                                                                activity_id,                                                                activity_rule_id,                                                                sku_id,                                                                create_time                                                            from order_detail_activity"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_order_detail_coupon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data order_detail_coupon <span class="token string">"select                                                                id,                                                                                order_id,                                                                order_detail_id,                                                                coupon_id,                                                                coupon_use_id,                                                                sku_id,                                                                create_time                                                            from order_detail_coupon"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_refund_payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data refund_payment <span class="token string">"select                                                        id,                                                        out_trade_no,                                                        order_id,                                                        sku_id,                                                        payment_type,                                                        trade_no,                                                        total_amount,                                                        subject,                                                        refund_status,                                                        create_time,                                                        callback_time                                                    from refund_payment"</span>                                                    <span class="token punctuation">&#125;</span><span class="token function-name function">import_sku_attr_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data sku_attr_value <span class="token string">"select                                                    id,                                                    attr_id,                                                    value_id,                                                    sku_id,                                                    attr_name,                                                    value_name                                                from sku_attr_value"</span><span class="token punctuation">&#125;</span><span class="token function-name function">import_sku_sale_attr_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    import_data sku_sale_attr_value <span class="token string">"select                                                            id,                                                            sku_id,                                                            spu_id,                                                            sale_attr_value_id,                                                            sale_attr_id,                                                            sale_attr_name,                                                            sale_attr_value_name                                                        from sku_sale_attr_value"</span><span class="token punctuation">&#125;</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>  <span class="token string">"order_info"</span><span class="token punctuation">)</span>     import_order_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_category1"</span><span class="token punctuation">)</span>     import_base_category1<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_category2"</span><span class="token punctuation">)</span>     import_base_category2<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_category3"</span><span class="token punctuation">)</span>     import_base_category3<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"order_detail"</span><span class="token punctuation">)</span>     import_order_detail<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"sku_info"</span><span class="token punctuation">)</span>     import_sku_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"user_info"</span><span class="token punctuation">)</span>     import_user_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"payment_info"</span><span class="token punctuation">)</span>     import_payment_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_province"</span><span class="token punctuation">)</span>     import_base_province<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_region"</span><span class="token punctuation">)</span>     import_base_region<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_trademark"</span><span class="token punctuation">)</span>     import_base_trademark<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"activity_info"</span><span class="token punctuation">)</span>      import_activity_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"cart_info"</span><span class="token punctuation">)</span>      import_cart_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"comment_info"</span><span class="token punctuation">)</span>      import_comment_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"coupon_info"</span><span class="token punctuation">)</span>      import_coupon_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"coupon_use"</span><span class="token punctuation">)</span>      import_coupon_use<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"favor_info"</span><span class="token punctuation">)</span>      import_favor_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"order_refund_info"</span><span class="token punctuation">)</span>      import_order_refund_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"order_status_log"</span><span class="token punctuation">)</span>      import_order_status_log<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"spu_info"</span><span class="token punctuation">)</span>      import_spu_info<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"activity_rule"</span><span class="token punctuation">)</span>      import_activity_rule<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"base_dic"</span><span class="token punctuation">)</span>      import_base_dic<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"order_detail_activity"</span><span class="token punctuation">)</span>      import_order_detail_activity<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"order_detail_coupon"</span><span class="token punctuation">)</span>      import_order_detail_coupon<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"refund_payment"</span><span class="token punctuation">)</span>      import_refund_payment<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"sku_attr_value"</span><span class="token punctuation">)</span>      import_sku_attr_value<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"sku_sale_attr_value"</span><span class="token punctuation">)</span>      import_sku_sale_attr_value<span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token string">"all"</span><span class="token punctuation">)</span>   import_base_category1   import_base_category2   import_base_category3   import_order_info   import_order_detail   import_sku_info   import_user_info   import_payment_info   import_base_region   import_base_province   import_base_trademark   import_activity_info   import_cart_info   import_comment_info   import_coupon_use   import_coupon_info   import_favor_info   import_order_refund_info   import_order_status_log   import_spu_info   import_activity_rule   import_base_dic   import_order_detail_activity   import_order_detail_coupon   import_refund_payment   import_sku_attr_value   import_sku_sale_attr_value<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mysql-to-hdfs-每日同步脚本"><a href="#mysql-to-hdfs-每日同步脚本" class="headerlink" title="mysql_to_hdfs(每日同步脚本)"></a>mysql_to_hdfs(每日同步脚本)</h3><pre class="line-numbers language-none"><code class="language-none">#! &#x2F;bin&#x2F;bashAPP&#x3D;gmall#sqoop&#x3D;&#x2F;opt&#x2F;module&#x2F;sqoop&#x2F;bin&#x2F;sqoopif [ -n &quot;$2&quot; ] ;then    do_date&#x3D;$2else    do_date&#x3D;&#96;date -d &#39;-1 day&#39; +%F&#96;fiimport_data()&#123;sqoop import \--connect jdbc:mysql:&#x2F;&#x2F;hadoop101:3306&#x2F;$APP \--username root \--password 764991 \--target-dir &#x2F;origin_data&#x2F;$APP&#x2F;db&#x2F;$1&#x2F;$do_date \--delete-target-dir \--query &quot;$2 and  \$CONDITIONS&quot; \--num-mappers 1 \--fields-terminated-by &#39;\t&#39; \--compress \--compression-codec lzop \--null-string &#39;\\N&#39; \--null-non-string &#39;\\N&#39;hadoop jar &#x2F;opt&#x2F;module&#x2F;EBDW&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer &#x2F;origin_data&#x2F;$APP&#x2F;db&#x2F;$1&#x2F;$do_date&#125;import_order_info()&#123;  import_data order_info &quot;select                            id,                             total_amount,                             order_status,                             user_id,                             payment_way,                            delivery_address,                            out_trade_no,                             create_time,                             operate_time,                            expire_time,                            tracking_no,                            province_id,                            activity_reduce_amount,                            coupon_reduce_amount,                                                        original_total_amount,                            feight_fee,                            feight_fee_reduce                              from order_info                        where (date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                         or date_format(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;)&quot;&#125;import_coupon_use()&#123;  import_data coupon_use &quot;select                          id,                          coupon_id,                          user_id,                          order_id,                          coupon_status,                          get_time,                          using_time,                          used_time,                          expire_time                        from coupon_use                        where (date_format(get_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                        or date_format(using_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                        or date_format(used_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                        or date_format(expire_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;)&quot;&#125;import_order_status_log()&#123;  import_data order_status_log &quot;select                                  id,                                  order_id,                                  order_status,                                  operate_time                                from order_status_log                                where date_format(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_user_info()&#123;  import_data &quot;user_info&quot; &quot;select                             id,                            login_name,                            nick_name,                            name,                            phone_num,                            email,                            user_level,                             birthday,                            gender,                            create_time,                            operate_time                          from user_info                           where (DATE_FORMAT(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                           or DATE_FORMAT(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;)&quot;&#125;import_order_detail()&#123;  import_data order_detail &quot;select                               id,                              order_id,                               sku_id,                              sku_name,                              order_price,                              sku_num,                               create_time,                              source_type,                              source_id,                              split_total_amount,                              split_activity_amount,                              split_coupon_amount                            from order_detail                             where DATE_FORMAT(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_payment_info()&#123;  import_data &quot;payment_info&quot;  &quot;select                                 id,                                  out_trade_no,                                 order_id,                                 user_id,                                 payment_type,                                 trade_no,                                 total_amount,                                  subject,                                 payment_status,                                create_time,                                callback_time                               from payment_info                               where (DATE_FORMAT(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                               or DATE_FORMAT(callback_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;)&quot;&#125;import_comment_info()&#123;  import_data comment_info &quot;select                              id,                              user_id,                              sku_id,                              spu_id,                              order_id,                              appraise,                              create_time                            from comment_info                            where date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_order_refund_info()&#123;  import_data order_refund_info &quot;select                                id,                                user_id,                                order_id,                                sku_id,                                refund_type,                                refund_num,                                refund_amount,                                refund_reason_type,                                refund_status,                                create_time                              from order_refund_info                              where date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_sku_info()&#123;  import_data sku_info &quot;select                           id,                          spu_id,                          price,                          sku_name,                          sku_desc,                          weight,                          tm_id,                          category3_id,                          is_sale,                          create_time                        from sku_info where 1&#x3D;1&quot;&#125;import_base_category1()&#123;  import_data &quot;base_category1&quot; &quot;select                                   id,                                  name                                 from base_category1 where 1&#x3D;1&quot;&#125;import_base_category2()&#123;  import_data &quot;base_category2&quot; &quot;select                                  id,                                  name,                                  category1_id                                 from base_category2 where 1&#x3D;1&quot;&#125;import_base_category3()&#123;  import_data &quot;base_category3&quot; &quot;select                                  id,                                  name,                                  category2_id                                from base_category3 where 1&#x3D;1&quot;&#125;import_base_province()&#123;  import_data base_province &quot;select                              id,                              name,                              region_id,                              area_code,                              iso_code,                              iso_3166_2                            from base_province                            where 1&#x3D;1&quot;&#125;import_base_region()&#123;  import_data base_region &quot;select                              id,                              region_name                            from base_region                            where 1&#x3D;1&quot;&#125;import_base_trademark()&#123;  import_data base_trademark &quot;select                                id,                                tm_name                              from base_trademark                              where 1&#x3D;1&quot;&#125;import_spu_info()&#123;  import_data spu_info &quot;select                            id,                            spu_name,                            category3_id,                            tm_id                          from spu_info                          where 1&#x3D;1&quot;&#125;import_favor_info()&#123;  import_data favor_info &quot;select                          id,                          user_id,                          sku_id,                          spu_id,                          is_cancel,                          create_time,                          cancel_time                        from favor_info                        where 1&#x3D;1&quot;&#125;import_cart_info()&#123;  import_data cart_info &quot;select                        id,                        user_id,                        sku_id,                        cart_price,                        sku_num,                        sku_name,                        create_time,                        operate_time,                        is_ordered,                        order_time,                        source_type,                        source_id                      from cart_info                      where 1&#x3D;1&quot;&#125;import_coupon_info()&#123;  import_data coupon_info &quot;select                          id,                          coupon_name,                          coupon_type,                          condition_amount,                          condition_num,                          activity_id,                          benefit_amount,                          benefit_discount,                          create_time,                          range_type,                          limit_num,                          taken_count,                          start_time,                          end_time,                          operate_time,                          expire_time                        from coupon_info                        where 1&#x3D;1&quot;&#125;import_activity_info()&#123;  import_data activity_info &quot;select                              id,                              activity_name,                              activity_type,                              start_time,                              end_time,                              create_time                            from activity_info                            where 1&#x3D;1&quot;&#125;import_activity_rule()&#123;    import_data activity_rule &quot;select                                    id,                                    activity_id,                                    activity_type,                                    condition_amount,                                    condition_num,                                    benefit_amount,                                    benefit_discount,                                    benefit_level                                from activity_rule                                where 1&#x3D;1&quot;&#125;import_base_dic()&#123;    import_data base_dic &quot;select                            dic_code,                            dic_name,                            parent_code,                            create_time,                            operate_time                          from base_dic                          where 1&#x3D;1&quot;&#125;import_order_detail_activity()&#123;    import_data order_detail_activity &quot;select                                                                id,                                                                order_id,                                                                order_detail_id,                                                                activity_id,                                                                activity_rule_id,                                                                sku_id,                                                                create_time                                                            from order_detail_activity                                                            where date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_order_detail_coupon()&#123;    import_data order_detail_coupon &quot;select                                                                id,                                                                                order_id,                                                                order_detail_id,                                                                coupon_id,                                                                coupon_use_id,                                                                sku_id,                                                                create_time                                                            from order_detail_coupon                                                            where date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;&quot;&#125;import_refund_payment()&#123;    import_data refund_payment &quot;select                                                        id,                                                        out_trade_no,                                                        order_id,                                                        sku_id,                                                        payment_type,                                                        trade_no,                                                        total_amount,                                                        subject,                                                        refund_status,                                                        create_time,                                                        callback_time                                                    from refund_payment                                                    where (DATE_FORMAT(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;                                                     or DATE_FORMAT(callback_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$do_date&#39;)&quot;                                                    &#125;import_sku_attr_value()&#123;    import_data sku_attr_value &quot;select                                                    id,                                                    attr_id,                                                    value_id,                                                    sku_id,                                                    attr_name,                                                    value_name                                                from sku_attr_value                                                where 1&#x3D;1&quot;&#125;import_sku_sale_attr_value()&#123;    import_data sku_sale_attr_value &quot;select                                                            id,                                                            sku_id,                                                            spu_id,                                                            sale_attr_value_id,                                                            sale_attr_id,                                                            sale_attr_name,                                                            sale_attr_value_name                                                        from sku_sale_attr_value                                                        where 1&#x3D;1&quot;&#125;case $1 in  &quot;order_info&quot;)     import_order_info;;  &quot;base_category1&quot;)     import_base_category1;;  &quot;base_category2&quot;)     import_base_category2;;  &quot;base_category3&quot;)     import_base_category3;;  &quot;order_detail&quot;)     import_order_detail;;  &quot;sku_info&quot;)     import_sku_info;;  &quot;user_info&quot;)     import_user_info;;  &quot;payment_info&quot;)     import_payment_info;;  &quot;base_province&quot;)     import_base_province;;  &quot;activity_info&quot;)      import_activity_info;;  &quot;cart_info&quot;)      import_cart_info;;  &quot;comment_info&quot;)      import_comment_info;;  &quot;coupon_info&quot;)      import_coupon_info;;  &quot;coupon_use&quot;)      import_coupon_use;;  &quot;favor_info&quot;)      import_favor_info;;  &quot;order_refund_info&quot;)      import_order_refund_info;;  &quot;order_status_log&quot;)      import_order_status_log;;  &quot;spu_info&quot;)      import_spu_info;;  &quot;activity_rule&quot;)      import_activity_rule;;  &quot;base_dic&quot;)      import_base_dic;;  &quot;order_detail_activity&quot;)      import_order_detail_activity;;  &quot;order_detail_coupon&quot;)      import_order_detail_coupon;;  &quot;refund_payment&quot;)      import_refund_payment;;  &quot;sku_attr_value&quot;)      import_sku_attr_value;;  &quot;sku_sale_attr_value&quot;)      import_sku_sale_attr_value;;&quot;all&quot;)   import_base_category1   import_base_category2   import_base_category3   import_order_info   import_order_detail   import_sku_info   import_user_info   import_payment_info   import_base_trademark   import_activity_info   import_cart_info   import_comment_info   import_coupon_use   import_coupon_info   import_favor_info   import_order_refund_info   import_order_status_log   import_spu_info   import_activity_rule   import_base_dic   import_order_detail_activity   import_order_detail_coupon   import_refund_payment   import_sku_attr_value   import_sku_sale_attr_value;;esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将数据从hdfs转入ods层"><a href="#将数据从hdfs转入ods层" class="headerlink" title="将数据从hdfs转入ods层"></a>将数据从hdfs转入ods层</h2><h3 id="将业务数据从hdfs层转入ods层-首日同步脚本"><a href="#将业务数据从hdfs层转入ods层-首日同步脚本" class="headerlink" title="将业务数据从hdfs层转入ods层(首日同步脚本)"></a>将业务数据从hdfs层转入ods层(首日同步脚本)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>   <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"请传入日期参数"</span>   <span class="token builtin class-name">exit</span><span class="token keyword">fi</span> <span class="token assign-left variable">ods_order_info</span><span class="token operator">=</span><span class="token string">" load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_order_detail</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_sku_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_user_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/user_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_user_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_payment_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/payment_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_payment_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category1</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category1/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category1 partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category2</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category2/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category2 partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category3</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category3/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category3 partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_base_trademark</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_trademark/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_trademark partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_activity_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/activity_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_activity_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_cart_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/cart_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_cart_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_comment_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/comment_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_comment_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_coupon_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/coupon_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_coupon_use</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/coupon_use/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_use partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_favor_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/favor_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_favor_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_refund_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_refund_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_refund_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_status_log</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_status_log/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_status_log partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_spu_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/spu_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_spu_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_activity_rule</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/activity_rule/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_activity_rule partition(dt='<span class="token variable">$do_date</span>');"</span> <span class="token assign-left variable">ods_base_dic</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_dic/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_dic partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_detail_activity</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail_activity/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail_activity partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_detail_coupon</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail_coupon/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail_coupon partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_refund_payment</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/refund_payment/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_refund_payment partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_sku_attr_value</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_attr_value/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_attr_value partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_sku_sale_attr_value</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_sale_attr_value/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_sale_attr_value partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_base_province</span><span class="token operator">=</span><span class="token string">" load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_province/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_province;"</span><span class="token assign-left variable">ods_base_region</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_region/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_region;"</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>    <span class="token string">"ods_order_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_user_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_user_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_payment_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_payment_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category1</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category2"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category2</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category3"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category3</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_trademark"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_trademark</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_activity_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_activity_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_cart_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_cart_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_comment_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_comment_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_coupon_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_coupon_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_coupon_use"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_coupon_use</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_favor_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_favor_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_refund_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_refund_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_status_log"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_status_log</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_spu_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_spu_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_activity_rule"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_activity_rule</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_dic"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_dic</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail_activity"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail_activity</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail_coupon"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail_coupon</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_refund_payment"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_refund_payment</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_attr_value"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_attr_value</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_sale_attr_value"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_sale_attr_value</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_province"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_province</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_region"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_region</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_info</span><span class="token variable">$ods_order_detail</span><span class="token variable">$ods_sku_info</span><span class="token variable">$ods_user_info</span><span class="token variable">$ods_payment_info</span><span class="token variable">$ods_base_category1</span><span class="token variable">$ods_base_category2</span><span class="token variable">$ods_base_category3</span><span class="token variable">$ods_base_trademark</span><span class="token variable">$ods_activity_info</span><span class="token variable">$ods_cart_info</span><span class="token variable">$ods_comment_info</span><span class="token variable">$ods_coupon_info</span><span class="token variable">$ods_coupon_use</span><span class="token variable">$ods_favor_info</span><span class="token variable">$ods_order_refund_info</span><span class="token variable">$ods_order_status_log</span><span class="token variable">$ods_spu_info</span><span class="token variable">$ods_activity_rule</span><span class="token variable">$ods_base_dic</span><span class="token variable">$ods_order_detail_activity</span><span class="token variable">$ods_order_detail_coupon</span><span class="token variable">$ods_refund_payment</span><span class="token variable">$ods_sku_attr_value</span><span class="token variable">$ods_sku_sale_attr_value</span><span class="token variable">$ods_base_province</span><span class="token variable">$ods_base_region</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将业务数据从hdfs转入ods层-每日同步脚本"><a href="#将业务数据从hdfs转入ods层-每日同步脚本" class="headerlink" title="将业务数据从hdfs转入ods层(每日同步脚本)"></a>将业务数据从hdfs转入ods层(每日同步脚本)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token comment"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>    <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>     <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> -d <span class="token string">"-1 day"</span> +%F<span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token assign-left variable">ods_order_info</span><span class="token operator">=</span><span class="token string">" load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_order_detail</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_sku_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_user_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/user_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_user_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_payment_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/payment_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_payment_info partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category1</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category1/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category1 partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category2</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category2/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category2 partition(dt='<span class="token variable">$do_date</span>');"</span><span class="token assign-left variable">ods_base_category3</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_category3/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_category3 partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_base_trademark</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_trademark/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_trademark partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_activity_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/activity_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_activity_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_cart_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/cart_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_cart_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_comment_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/comment_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_comment_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_coupon_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/coupon_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_coupon_use</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/coupon_use/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_use partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_favor_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/favor_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_favor_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_refund_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_refund_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_refund_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_status_log</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_status_log/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_status_log partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_spu_info</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/spu_info/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_spu_info partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_activity_rule</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/activity_rule/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_activity_rule partition(dt='<span class="token variable">$do_date</span>');"</span> <span class="token assign-left variable">ods_base_dic</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_dic/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_dic partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_detail_activity</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail_activity/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail_activity partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_order_detail_coupon</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/order_detail_coupon/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_order_detail_coupon partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_refund_payment</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/refund_payment/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_refund_payment partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_sku_attr_value</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_attr_value/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_attr_value partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_sku_sale_attr_value</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/sku_sale_attr_value/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_sku_sale_attr_value partition(dt='<span class="token variable">$do_date</span>'); "</span><span class="token assign-left variable">ods_base_province</span><span class="token operator">=</span><span class="token string">" load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_province/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_province;"</span><span class="token assign-left variable">ods_base_region</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/db/base_region/<span class="token variable">$do_date</span>' OVERWRITE into table <span class="token variable">$&#123;APP&#125;</span>.ods_base_region;"</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>    <span class="token string">"ods_order_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_user_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_user_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_payment_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_payment_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category1</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category2"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category2</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_category3"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_category3</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_trademark"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_trademark</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_activity_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_activity_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_cart_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_cart_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_comment_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_comment_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_coupon_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_coupon_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_coupon_use"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_coupon_use</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_favor_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_favor_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_refund_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_refund_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_status_log"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_status_log</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_spu_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_spu_info</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_activity_rule"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_activity_rule</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_base_dic"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_base_dic</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail_activity"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail_activity</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_order_detail_coupon"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_detail_coupon</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_refund_payment"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_refund_payment</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_attr_value"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_attr_value</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"ods_sku_sale_attr_value"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_sku_sale_attr_value</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hive -e <span class="token string">"<span class="token variable">$ods_order_info</span><span class="token variable">$ods_order_detail</span><span class="token variable">$ods_sku_info</span><span class="token variable">$ods_user_info</span><span class="token variable">$ods_payment_info</span><span class="token variable">$ods_base_category1</span><span class="token variable">$ods_base_category2</span><span class="token variable">$ods_base_category3</span><span class="token variable">$ods_base_trademark</span><span class="token variable">$ods_activity_info</span><span class="token variable">$ods_cart_info</span><span class="token variable">$ods_comment_info</span><span class="token variable">$ods_coupon_info</span><span class="token variable">$ods_coupon_use</span><span class="token variable">$ods_favor_info</span><span class="token variable">$ods_order_refund_info</span><span class="token variable">$ods_order_status_log</span><span class="token variable">$ods_spu_info</span><span class="token variable">$ods_activity_rule</span><span class="token variable">$ods_base_dic</span><span class="token variable">$ods_order_detail_activity</span><span class="token variable">$ods_order_detail_coupon</span><span class="token variable">$ods_refund_payment</span><span class="token variable">$ods_sku_attr_value</span><span class="token variable">$ods_sku_sale_attr_value</span>"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将用户行为数据从hdfs转入ods层"><a href="#将用户行为数据从hdfs转入ods层" class="headerlink" title="将用户行为数据从hdfs转入ods层"></a>将用户行为数据从hdfs转入ods层</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># 定义变量方便修改</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token comment"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>   <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token keyword">else</span>    <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> -d <span class="token string">"-1 day"</span> +%F<span class="token variable">`</span></span><span class="token keyword">fi</span> <span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> 日志日期为 <span class="token variable">$do_date</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token assign-left variable">sql</span><span class="token operator">=</span><span class="token string">"load data inpath '/origin_data/<span class="token variable">$APP</span>/log/topic_log/<span class="token variable">$do_date</span>' into table <span class="token variable">$&#123;APP&#125;</span>.ods_log partition(dt='<span class="token variable">$do_date</span>');"</span>hive -e <span class="token string">"<span class="token variable">$sql</span>"</span>hadoop jar /opt/module/EBDW/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /warehouse/<span class="token variable">$APP</span>/ods/ods_log/dt<span class="token operator">=</span><span class="token variable">$do_date</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将dos层数据传入dim层"><a href="#将dos层数据传入dim层" class="headerlink" title="将dos层数据传入dim层"></a>将dos层数据传入dim层</h2><h3 id="ods-to-dim-db-init-首日同步脚本"><a href="#ods-to-dim-db-init-首日同步脚本" class="headerlink" title="ods_to_dim_db_init(首日同步脚本)"></a>ods_to_dim_db_init(首日同步脚本)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>   <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"请传入日期参数"</span>   <span class="token builtin class-name">exit</span><span class="token keyword">fi</span> <span class="token assign-left variable">dim_user_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_user_info partition(dt='9999-99-99')select    id,    login_name,    nick_name,    md5(name),    md5(phone_num),    md5(email),    user_level,    birthday,    gender,    create_time,    operate_time,    '<span class="token variable">$do_date</span>',    '9999-99-99'from <span class="token variable">$&#123;APP&#125;</span>.ods_user_infowhere dt='<span class="token variable">$do_date</span>';"</span><span class="token assign-left variable">dim_sku_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;withsku as(    select        id,        price,        sku_name,        sku_desc,        weight,        is_sale,        spu_id,        category3_id,        tm_id,        create_time    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_info    where dt='<span class="token variable">$do_date</span>'),spu as(    select        id,        spu_name    from <span class="token variable">$&#123;APP&#125;</span>.ods_spu_info    where dt='<span class="token variable">$do_date</span>'),c3 as(    select        id,        name,        category2_id    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category3    where dt='<span class="token variable">$do_date</span>'),c2 as(    select        id,        name,        category1_id    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category2    where dt='<span class="token variable">$do_date</span>'),c1 as(    select        id,        name    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category1    where dt='<span class="token variable">$do_date</span>'),tm as(    select        id,        tm_name    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_trademark    where dt='<span class="token variable">$do_date</span>'),attr as(    select        sku_id,        collect_set(named_struct('attr_id',attr_id,'value_id',value_id,'attr_name',attr_name,'value_name',value_name)) attrs    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_attr_value    where dt='<span class="token variable">$do_date</span>'    group by sku_id),sale_attr as(    select        sku_id,        collect_set(named_struct('sale_attr_id',sale_attr_id,'sale_attr_value_id',sale_attr_value_id,'sale_attr_name',sale_attr_name,'sale_attr_value_name',sale_attr_value_name)) sale_attrs    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_sale_attr_value    where dt='<span class="token variable">$do_date</span>'    group by sku_id)insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_sku_info partition(dt='<span class="token variable">$do_date</span>')select    sku.id,    sku.price,    sku.sku_name,    sku.sku_desc,    sku.weight,    sku.is_sale,    sku.spu_id,    spu.spu_name,    sku.category3_id,    c3.name,    c3.category2_id,    c2.name,    c2.category1_id,    c1.name,    sku.tm_id,    tm.tm_name,    attr.attrs,    sale_attr.sale_attrs,    sku.create_timefrom skuleft join spu on sku.spu_id=spu.idleft join c3 on sku.category3_id=c3.idleft join c2 on c3.category2_id=c2.idleft join c1 on c2.category1_id=c1.idleft join tm on sku.tm_id=tm.idleft join attr on sku.id=attr.sku_idleft join sale_attr on sku.id=sale_attr.sku_id;"</span><span class="token assign-left variable">dim_base_province</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_base_provinceselect    bp.id,    bp.name,    bp.area_code,    bp.iso_code,    bp.iso_3166_2,    bp.region_id,    br.region_namefrom <span class="token variable">$&#123;APP&#125;</span>.ods_base_province bpjoin <span class="token variable">$&#123;APP&#125;</span>.ods_base_region br on bp.region_id = br.id;"</span><span class="token assign-left variable">dim_coupon_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_coupon_info partition(dt='<span class="token variable">$do_date</span>')select    id,    coupon_name,    coupon_type,    condition_amount,    condition_num,    activity_id,    benefit_amount,    benefit_discount,    create_time,    range_type,    limit_num,    taken_count,    start_time,    end_time,    operate_time,    expire_timefrom <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_infowhere dt='<span class="token variable">$do_date</span>';"</span><span class="token assign-left variable">dim_activity_rule_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_activity_rule_info partition(dt='<span class="token variable">$do_date</span>')select    ar.id,    ar.activity_id,    ai.activity_name,    ar.activity_type,    ai.start_time,    ai.end_time,    ai.create_time,    ar.condition_amount,    ar.condition_num,    ar.benefit_amount,    ar.benefit_discount,    ar.benefit_levelfrom(    select        id,        activity_id,        activity_type,        condition_amount,        condition_num,        benefit_amount,        benefit_discount,        benefit_level    from <span class="token variable">$&#123;APP&#125;</span>.ods_activity_rule    where dt='<span class="token variable">$do_date</span>')arleft join(    select        id,        activity_name,        start_time,        end_time,        create_time    from <span class="token variable">$&#123;APP&#125;</span>.ods_activity_info    where dt='<span class="token variable">$do_date</span>')aion ar.activity_id=ai.id;"</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"dim_user_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_user_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_sku_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_sku_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_base_province"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_base_province</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_coupon_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_coupon_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_activity_rule_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_activity_rule_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_user_info</span><span class="token variable">$dim_sku_info</span><span class="token variable">$dim_coupon_info</span><span class="token variable">$dim_activity_rule_info</span><span class="token variable">$dim_base_province</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ods-to-dim-db-每日同步脚本"><a href="#ods-to-dim-db-每日同步脚本" class="headerlink" title="ods_to_dim_db(每日同步脚本)"></a>ods_to_dim_db(每日同步脚本)</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token comment"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>    <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>     <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> -d <span class="token string">"-1 day"</span> +%F<span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token assign-left variable">dim_user_info</span><span class="token operator">=</span><span class="token string">"set hive.exec.dynamic.partition.mode=nonstrict;set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;withtmp as(    select        old.id old_id,        old.login_name old_login_name,        old.nick_name old_nick_name,        old.name old_name,        old.phone_num old_phone_num,        old.email old_email,        old.user_level old_user_level,        old.birthday old_birthday,        old.gender old_gender,        old.create_time old_create_time,        old.operate_time old_operate_time,        old.start_date old_start_date,        old.end_date old_end_date,        new.id new_id,        new.login_name new_login_name,        new.nick_name new_nick_name,        new.name new_name,        new.phone_num new_phone_num,        new.email new_email,        new.user_level new_user_level,        new.birthday new_birthday,        new.gender new_gender,        new.create_time new_create_time,        new.operate_time new_operate_time,        new.start_date new_start_date,        new.end_date new_end_date    from    (        select            id,            login_name,            nick_name,            name,            phone_num,            email,            user_level,            birthday,            gender,            create_time,            operate_time,            start_date,            end_date        from <span class="token variable">$&#123;APP&#125;</span>.dim_user_info        where dt='9999-99-99'        and start_date&lt;'<span class="token variable">$do_date</span>'    )old    full outer join    (        select            id,            login_name,            nick_name,            md5(name) name,            md5(phone_num) phone_num,            md5(email) email,            user_level,            birthday,            gender,            create_time,            operate_time,            '<span class="token variable">$do_date</span>' start_date,            '9999-99-99' end_date        from <span class="token variable">$&#123;APP&#125;</span>.ods_user_info        where dt='<span class="token variable">$do_date</span>'    )new    on old.id=new.id)insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_user_info partition(dt)select    nvl(new_id,old_id),    nvl(new_login_name,old_login_name),    nvl(new_nick_name,old_nick_name),    nvl(new_name,old_name),    nvl(new_phone_num,old_phone_num),    nvl(new_email,old_email),    nvl(new_user_level,old_user_level),    nvl(new_birthday,old_birthday),    nvl(new_gender,old_gender),    nvl(new_create_time,old_create_time),    nvl(new_operate_time,old_operate_time),    nvl(new_start_date,old_start_date),    nvl(new_end_date,old_end_date),    nvl(new_end_date,old_end_date) dtfrom tmpunion allselect    old_id,    old_login_name,    old_nick_name,    old_name,    old_phone_num,    old_email,    old_user_level,    old_birthday,    old_gender,    old_create_time,    old_operate_time,    old_start_date,    cast(date_add('<span class="token variable">$do_date</span>',-1) as string),    cast(date_add('<span class="token variable">$do_date</span>',-1) as string) dtfrom tmpwhere new_id is not null and old_id is not null;"</span><span class="token assign-left variable">dim_sku_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;withsku as(    select        id,        price,        sku_name,        sku_desc,        weight,        is_sale,        spu_id,        category3_id,        tm_id,        create_time    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_info    where dt='<span class="token variable">$do_date</span>'),spu as(    select        id,        spu_name    from <span class="token variable">$&#123;APP&#125;</span>.ods_spu_info    where dt='<span class="token variable">$do_date</span>'),c3 as(    select        id,        name,        category2_id    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category3    where dt='<span class="token variable">$do_date</span>'),c2 as(    select        id,        name,        category1_id    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category2    where dt='<span class="token variable">$do_date</span>'),c1 as(    select        id,        name    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_category1    where dt='<span class="token variable">$do_date</span>'),tm as(    select        id,        tm_name    from <span class="token variable">$&#123;APP&#125;</span>.ods_base_trademark    where dt='<span class="token variable">$do_date</span>'),attr as(    select        sku_id,        collect_set(named_struct('attr_id',attr_id,'value_id',value_id,'attr_name',attr_name,'value_name',value_name)) attrs    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_attr_value    where dt='<span class="token variable">$do_date</span>'    group by sku_id),sale_attr as(    select        sku_id,        collect_set(named_struct('sale_attr_id',sale_attr_id,'sale_attr_value_id',sale_attr_value_id,'sale_attr_name',sale_attr_name,'sale_attr_value_name',sale_attr_value_name)) sale_attrs    from <span class="token variable">$&#123;APP&#125;</span>.ods_sku_sale_attr_value    where dt='<span class="token variable">$do_date</span>'    group by sku_id)insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_sku_info partition(dt='<span class="token variable">$do_date</span>')select    sku.id,    sku.price,    sku.sku_name,    sku.sku_desc,    sku.weight,    sku.is_sale,    sku.spu_id,    spu.spu_name,    sku.category3_id,    c3.name,    c3.category2_id,    c2.name,    c2.category1_id,    c1.name,    sku.tm_id,    tm.tm_name,    attr.attrs,    sale_attr.sale_attrs,    sku.create_timefrom skuleft join spu on sku.spu_id=spu.idleft join c3 on sku.category3_id=c3.idleft join c2 on c3.category2_id=c2.idleft join c1 on c2.category1_id=c1.idleft join tm on sku.tm_id=tm.idleft join attr on sku.id=attr.sku_idleft join sale_attr on sku.id=sale_attr.sku_id;"</span><span class="token assign-left variable">dim_base_province</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_base_provinceselect    bp.id,    bp.name,    bp.area_code,    bp.iso_code,    bp.iso_3166_2,    bp.region_id,    bp.namefrom <span class="token variable">$&#123;APP&#125;</span>.ods_base_province bpjoin <span class="token variable">$&#123;APP&#125;</span>.ods_base_region br on bp.region_id = br.id;"</span><span class="token assign-left variable">dim_coupon_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_coupon_info partition(dt='<span class="token variable">$do_date</span>')select    id,    coupon_name,    coupon_type,    condition_amount,    condition_num,    activity_id,    benefit_amount,    benefit_discount,    create_time,    range_type,    limit_num,    taken_count,    start_time,    end_time,    operate_time,    expire_timefrom <span class="token variable">$&#123;APP&#125;</span>.ods_coupon_infowhere dt='<span class="token variable">$do_date</span>';"</span><span class="token assign-left variable">dim_activity_rule_info</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dim_activity_rule_info partition(dt='<span class="token variable">$do_date</span>')select    ar.id,    ar.activity_id,    ai.activity_name,    ar.activity_type,    ai.start_time,    ai.end_time,    ai.create_time,    ar.condition_amount,    ar.condition_num,    ar.benefit_amount,    ar.benefit_discount,    ar.benefit_levelfrom(    select        id,        activity_id,        activity_type,        condition_amount,        condition_num,        benefit_amount,        benefit_discount,        benefit_level    from <span class="token variable">$&#123;APP&#125;</span>.ods_activity_rule    where dt='<span class="token variable">$do_date</span>')arleft join(    select        id,        activity_name,        start_time,        end_time,        create_time    from <span class="token variable">$&#123;APP&#125;</span>.ods_activity_info    where dt='<span class="token variable">$do_date</span>')aion ar.activity_id=ai.id;"</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"dim_user_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_user_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_sku_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_sku_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_base_province"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_base_province</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_coupon_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_coupon_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"dim_activity_rule_info"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_activity_rule_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    hive -e <span class="token string">"<span class="token variable">$dim_user_info</span><span class="token variable">$dim_sku_info</span><span class="token variable">$dim_coupon_info</span><span class="token variable">$dim_activity_rule_info</span>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将ods层数据同步到dwd层"><a href="#将ods层数据同步到dwd层" class="headerlink" title="将ods层数据同步到dwd层"></a>将ods层数据同步到dwd层</h2><h3 id="ods-to-dwd-log"><a href="#ods-to-dwd-log" class="headerlink" title="ods_to_dwd_log"></a>ods_to_dwd_log</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">APP</span><span class="token operator">=</span>gmall<span class="token comment"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span>    <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token keyword">else</span>     <span class="token assign-left variable">do_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> -d <span class="token string">"-1 day"</span> +%F<span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token assign-left variable">dwd_start_log</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dwd_start_log partition(dt='<span class="token variable">$do_date</span>')select    get_json_object(line,'$.common.ar'),    get_json_object(line,'$.common.ba'),    get_json_object(line,'$.common.ch'),    get_json_object(line,'$.common.is_new'),    get_json_object(line,'$.common.md'),    get_json_object(line,'$.common.mid'),    get_json_object(line,'$.common.os'),    get_json_object(line,'$.common.uid'),    get_json_object(line,'$.common.vc'),    get_json_object(line,'$.start.entry'),    get_json_object(line,'$.start.loading_time'),    get_json_object(line,'$.start.open_ad_id'),    get_json_object(line,'$.start.open_ad_ms'),    get_json_object(line,'$.start.open_ad_skip_ms'),    get_json_object(line,'$.ts')from <span class="token variable">$&#123;APP&#125;</span>.ods_logwhere dt='<span class="token variable">$do_date</span>'and get_json_object(line,'$.start') is not null;"</span><span class="token assign-left variable">dwd_page_log</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dwd_page_log partition(dt='<span class="token variable">$do_date</span>')select    get_json_object(line,'$.common.ar'),    get_json_object(line,'$.common.ba'),    get_json_object(line,'$.common.ch'),    get_json_object(line,'$.common.is_new'),    get_json_object(line,'$.common.md'),    get_json_object(line,'$.common.mid'),    get_json_object(line,'$.common.os'),    get_json_object(line,'$.common.uid'),    get_json_object(line,'$.common.vc'),    get_json_object(line,'$.page.during_time'),    get_json_object(line,'$.page.item'),    get_json_object(line,'$.page.item_type'),    get_json_object(line,'$.page.last_page_id'),    get_json_object(line,'$.page.page_id'),    get_json_object(line,'$.page.source_type'),    get_json_object(line,'$.ts')from <span class="token variable">$&#123;APP&#125;</span>.ods_logwhere dt='<span class="token variable">$do_date</span>'and get_json_object(line,'$.page') is not null;"</span><span class="token assign-left variable">dwd_action_log</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dwd_action_log partition(dt='<span class="token variable">$do_date</span>')select    get_json_object(line,'$.common.ar'),    get_json_object(line,'$.common.ba'),    get_json_object(line,'$.common.ch'),    get_json_object(line,'$.common.is_new'),    get_json_object(line,'$.common.md'),    get_json_object(line,'$.common.mid'),    get_json_object(line,'$.common.os'),    get_json_object(line,'$.common.uid'),    get_json_object(line,'$.common.vc'),    get_json_object(line,'$.page.during_time'),    get_json_object(line,'$.page.item'),    get_json_object(line,'$.page.item_type'),    get_json_object(line,'$.page.last_page_id'),    get_json_object(line,'$.page.page_id'),    get_json_object(line,'$.page.source_type'),    get_json_object(action,'$.action_id'),    get_json_object(action,'$.item'),    get_json_object(action,'$.item_type'),    get_json_object(action,'$.ts')from <span class="token variable">$&#123;APP&#125;</span>.ods_log lateral view <span class="token variable">$&#123;APP&#125;</span>.explode_json_array(get_json_object(line,'$.actions')) tmp as actionwhere dt='<span class="token variable">$do_date</span>'and get_json_object(line,'$.actions') is not null;"</span><span class="token assign-left variable">dwd_display_log</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dwd_display_log partition(dt='<span class="token variable">$do_date</span>')select    get_json_object(line,'$.common.ar'),    get_json_object(line,'$.common.ba'),    get_json_object(line,'$.common.ch'),    get_json_object(line,'$.common.is_new'),    get_json_object(line,'$.common.md'),    get_json_object(line,'$.common.mid'),    get_json_object(line,'$.common.os'),    get_json_object(line,'$.common.uid'),    get_json_object(line,'$.common.vc'),    get_json_object(line,'$.page.during_time'),    get_json_object(line,'$.page.item'),    get_json_object(line,'$.page.item_type'),    get_json_object(line,'$.page.last_page_id'),    get_json_object(line,'$.page.page_id'),    get_json_object(line,'$.page.source_type'),    get_json_object(line,'$.ts'),    get_json_object(display,'$.display_type'),    get_json_object(display,'$.item'),    get_json_object(display,'$.item_type'),    get_json_object(display,'$.order'),    get_json_object(display,'$.pos_id')from <span class="token variable">$&#123;APP&#125;</span>.ods_log lateral view <span class="token variable">$&#123;APP&#125;</span>.explode_json_array(get_json_object(line,'$.displays')) tmp as displaywhere dt='<span class="token variable">$do_date</span>'and get_json_object(line,'$.displays') is not null;"</span><span class="token assign-left variable">dwd_error_log</span><span class="token operator">=</span><span class="token string">"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;insert overwrite table <span class="token variable">$&#123;APP&#125;</span>.dwd_error_log partition(dt='<span class="token variable">$do_date</span>')select    get_json_object(line,'$.common.ar'),    get_json_object(line,'$.common.ba'),    get_json_object(line,'$.common.ch'),    get_json_object(line,'$.common.is_new'),    get_json_object(line,'$.common.md'),    get_json_object(line,'$.common.mid'),    get_json_object(line,'$.common.os'),    get_json_object(line,'$.common.uid'),    get_json_object(line,'$.common.vc'),    get_json_object(line,'$.page.item'),    get_json_object(line,'$.page.item_type'),    get_json_object(line,'$.page.last_page_id'),    get_json_object(line,'$.page.page_id'),    get_json_object(line,'$.page.source_type'),    get_json_object(line,'$.start.entry'),    get_json_object(line,'$.start.loading_time'),    get_json_object(line,'$.start.open_ad_id'),    get_json_object(line,'$.start.open_ad_ms'),    get_json_object(line,'$.start.open_ad_skip_ms'),    get_json_object(line,'$.actions'),    get_json_object(line,'$.displays'),    get_json_object(line,'$.ts'),    get_json_object(line,'$.err.error_code'),    get_json_object(line,'$.err.msg')from <span class="token variable">$&#123;APP&#125;</span>.ods_logwhere dt='<span class="token variable">$do_date</span>'and get_json_object(line,'$.err') is not null;"</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>    dwd_start_log <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_start_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    dwd_page_log <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_page_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    dwd_action_log <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_action_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    dwd_display_log <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_display_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    dwd_error_log <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_error_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    all <span class="token punctuation">)</span>        hive -e <span class="token string">"<span class="token variable">$dwd_start_log</span><span class="token variable">$dwd_page_log</span><span class="token variable">$dwd_action_log</span><span class="token variable">$dwd_display_log</span><span class="token variable">$dwd_error_log</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="azkaban启动脚本"><a href="#azkaban启动脚本" class="headerlink" title="azkaban启动脚本"></a>azkaban启动脚本</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"===============开始启动azkaban"</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">"============<span class="token variable">$i</span>的azkaban-exec启动中==========="</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">'cd /opt/module/EBDW/azkaban/azkaban-exec &amp;&amp; bin/start-exec.sh'</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"cd /opt/module/EBDW/azkaban/azkaban-exec &amp;&amp; curl -G <span class="token variable">$i</span>:12321/executor?action=activate"</span>        <span class="token keyword">done</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"===============开始启动azkaban"</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102 hadoop103        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">"============<span class="token variable">$i</span>的azkaban-exec启动中==========="</span>                <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"cd /opt/module/EBDW/azkaban/azkaban-exec &amp;&amp; bin/shutdown-exec.sh"</span>        <span class="token keyword">done</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是暂时不知道为什么,在执行激活命令的时候出现了端口请求拒绝的反馈.<br>只能分别手动执行激活命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># curl 就是符合URL规则的文件传输工具</span><span class="token function">curl</span> -G hadoop101:12321/executor?action<span class="token operator">=</span>activate <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span><span class="token function">curl</span> -G hadoop102:12321/executor?action<span class="token operator">=</span>activate <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span><span class="token function">curl</span> -G hadoop103:12321/executor?action<span class="token operator">=</span>activate <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>azkaban-web端口: 8081<br>url: hadoop101:8081<br>user: tzk<br>password: tzk</p><h2 id="superset"><a href="#superset" class="headerlink" title="superset"></a>superset</h2><p>Superset-web端口: 8787</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 1.进入conda设置的superset环境</span>conda activate superset<span class="token comment"># 退出环境代码为:</span>conda deactivate<span class="token comment"># 启动Superset服务</span>gunicorn --workers <span class="token number">5</span> --timeout <span class="token number">120</span> --bind hadoop101:8787 <span class="token string">"superset.app:create_app()"</span> --daemon<span class="token comment"># 关闭Superset</span>  <span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/gunicorn/ &amp;&amp; !/awk/&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> -9  <span class="token comment"># 也可以像下面这样写</span>  <span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> superset<span class="token operator">|</span><span class="token function">grep</span> -v <span class="token function">grep</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'&#123;print$2&#125;'</span><span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">kill</span> -9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>user: Superset init<br>password: 764991</p><h3 id="Superset-sh"><a href="#Superset-sh" class="headerlink" title="Superset.sh"></a>Superset.sh</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token function-name function">superset_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/gunicorn/ &amp;&amp; !/awk/&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">wc</span> -l<span class="token variable">`</span></span>    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$result</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">return</span> <span class="token number">0</span>    <span class="token keyword">else</span>        <span class="token builtin class-name">return</span> <span class="token number">1</span>    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token function-name function">superset_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token builtin class-name">source</span> ~/.bashrc        superset_status <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            conda activate superset <span class="token punctuation">;</span> gunicorn --workers <span class="token number">5</span> --timeout <span class="token number">120</span> --bind hadoop101:8787 --daemon <span class="token string">'superset.app:create_app()'</span>        <span class="token keyword">else</span>            <span class="token builtin class-name">echo</span> <span class="token string">"superset正在运行"</span>        <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token function-name function">superset_stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    superset_status <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"superset未在运行"</span>    <span class="token keyword">else</span>        <span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/gunicorn/ &amp;&amp; !/awk/&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> -9    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>    start <span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"启动Superset"</span>        superset_start    <span class="token punctuation">;</span><span class="token punctuation">;</span>    stop <span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"停止Superset"</span>        superset_stop    <span class="token punctuation">;</span><span class="token punctuation">;</span>    restart <span class="token punctuation">)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"重启Superset"</span>        superset_stop        superset_start    <span class="token punctuation">;</span><span class="token punctuation">;</span>    status <span class="token punctuation">)</span>        superset_status <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token string">"superset未在运行"</span>        <span class="token keyword">else</span>            <span class="token builtin class-name">echo</span> <span class="token string">"superset正在运行"</span>        <span class="token keyword">fi</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hiveserver2"><a href="#hiveserver2" class="headerlink" title="hiveserver2"></a>hiveserver2</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hive --service hiveserver<span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="日志数据生成脚本"><a href="#日志数据生成脚本" class="headerlink" title="日志数据生成脚本"></a>日志数据生成脚本</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop101 hadoop102<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"========== <span class="token variable">$i</span> =========="</span>    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"cd /opt/module/EBDW/applog/; java -jar gmall2020-mock-log-2021-01-22.jar >/dev/null 2>&amp;1 &amp;"</span><span class="token keyword">done</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
          <category> Data Warehouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop端口使用情况汇总(记)</title>
      <link href="/2021/11/17/hadoop-duan-kou/"/>
      <url>/2021/11/17/hadoop-duan-kou/</url>
      
        <content type="html"><![CDATA[<h2 id="汇总表"><a href="#汇总表" class="headerlink" title="汇总表"></a>汇总表</h2><table><thead><tr><th align="center">端口名称</th><th align="center">hadoop2.x</th><th align="center">hadoop3.x</th></tr></thead><tbody><tr><td align="center">NameNode内部通信端口</td><td align="center"><font color="red">8082</font>/9000</td><td align="center"><font color="red">8082</font>/9000/9820</td></tr><tr><td align="center">NameNode Web端口</td><td align="center"><font color="red">50070</font></td><td align="center"><font color="red">9870</font></td></tr><tr><td align="center">MapReduce查看执行任务端口</td><td align="center">8088</td><td align="center">8088</td></tr><tr><td align="center">历史服务器 WEB端口</td><td align="center">19888</td><td align="center">19888</td></tr></tbody></table><h2 id="NameNode"><a href="#NameNode" class="headerlink" title="NameNode"></a>NameNode</h2><h3 id="服务器端口"><a href="#服务器端口" class="headerlink" title="服务器端口"></a>服务器端口</h3><p>core-site.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 指定NameNode的地址 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoop102:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="web端口"><a href="#web端口" class="headerlink" title="web端口"></a>web端口</h3><p>hdfs-site.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop102:9870<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SeconderyNameNode"><a href="#SeconderyNameNode" class="headerlink" title="SeconderyNameNode"></a>SeconderyNameNode</h2><h3 id="web端"><a href="#web端" class="headerlink" title="web端"></a>web端</h3><p>9868<br>hdfs-site.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 2nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop104:9868<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="历史服务器的端口配置："><a href="#历史服务器的端口配置：" class="headerlink" title="历史服务器的端口配置："></a>历史服务器的端口配置：</h2><ul><li><p>   服务器:<br>10020</p></li><li><p>   web端：<br>19888</p></li></ul><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><p>mapred-site.xml</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&lt;!-- 历史服务器端地址 --&gt;&lt;property&gt;&lt;name&gt;mapreduce.jobhistory.address&lt;&#x2F;name&gt;    &lt;value&gt;hadoop101:10020&lt;&#x2F;value&gt;&lt;&#x2F;property&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="web端-1"><a href="#web端-1" class="headerlink" title="web端"></a>web端</h3><p>mapred-site.xml</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&lt;!-- 历史服务器web端地址 --&gt;&lt;property&gt;&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;&#x2F;name&gt;    &lt;value&gt;hadoop102:19888&lt;&#x2F;value&gt;&lt;&#x2F;property&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数仓分成</title>
      <link href="/2021/11/17/shu-ju-cang-ku-fen-ceng/"/>
      <url>/2021/11/17/shu-ju-cang-ku-fen-ceng/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库分层图"><a href="#数据库分层图" class="headerlink" title="数据库分层图"></a>数据库分层图</h2><p><img src="/2021/11/17/shu-ju-cang-ku-fen-ceng/387d3d14-02d2-4a6d-940c-29fa6232be81.png"></p><h2 id="数据库各层的功能解析"><a href="#数据库各层的功能解析" class="headerlink" title="数据库各层的功能解析"></a>数据库各层的功能解析</h2><ol><li><p>ODS：元数据层，对于原始数据的一个备份</p></li><li><p>DWD：数据明细层，对数据的一个清洗（判空过滤，去除脏数据），保存业务事实明细，一行数据代表用户的一次业务行为。如：一次下单。</p></li><li><p>ADS：数据应用层，为各种报表提供数据支持。</p></li><li><p>DIM：维度层，对数据的维度建模主要是业务事实信息的描述。何人，何时，何地</p></li><li><p>DWS：服务数据层，按天进行轻度汇总。一行信息代表一个主题对象的一天汇总行为。</p></li><li><p>DWT：主题数据层，数据累计汇总，一行信息代表一个主题对象的一段时间数据的累计汇总。</p></li></ol><h2 id="为什么要数据分层："><a href="#为什么要数据分层：" class="headerlink" title="为什么要数据分层："></a>为什么要数据分层：</h2><ol><li><p>隔离原始数据：对数据进行备份，解耦（将原始数据和统计数据据解耦开）。</p></li><li><p>减少重复开发：规范数据分层，通过中间层数据，减少数据的重复开发，一次计算多次复用。</p></li><li><p>把复杂任务简单化： 把任务分层处理，每层只处理简单问题。方便问题的定位。<br>命名规范</p></li></ol><hr><ul><li>   表名</li></ul><p>Ø  ODS层命名为ods_表名</p><p>Ø  DIM层命名为dim_表名</p><p>Ø  DWD层命名为dwd_表名</p><p>Ø  DWS层命名为dws_表名  </p><p>Ø  DWT层命名为dwt_表名</p><p>Ø  ADS层命名为ads_表名</p><p>Ø  临时表命名为tmp_表名</p><ul><li>脚本名<br>数据源_to_目标_db/log.sh<br>行为数据：log<br>业务数据：db</li><li>   字段类型<br>金钱：decimal(16,2), edit:16表示16位有效数字，2表示，其中小数部分为2位<br>数量：bigint<br>时间戳类型：bigint</li></ul><p>主外键类型为：string<br>建模理论</p><hr><h3 id="关系建模"><a href="#关系建模" class="headerlink" title="关系建模"></a>关系建模</h3><p>遵循三范式</p><ol><li><p>属性不可切</p></li><li><p>部分函数依赖不可有<br> 非主键不可部分函数依赖于主键</p></li><li><p>传递函数依赖不可有<br> 非主键不可传递函数依赖于主键</p></li></ol><h3 id="维度建模"><a href="#维度建模" class="headerlink" title="维度建模"></a>维度建模</h3><h4 id="维度表"><a href="#维度表" class="headerlink" title="维度表"></a>维度表</h4><p>对事实的描述。包含大量属性。</p><h4 id="事实表"><a href="#事实表" class="headerlink" title="事实表"></a>事实表</h4><p>业务事件</p><p>维度表的外键+度量值</p><ul><li>事实表的类型分类：</li></ul><ol><li>事务型事实表<br>使用增量同步</li><li>周期型快照事实表<br>使用全量同步</li><li>累积周期性快照事实表<br>使用增量修改同步</li></ol><p><strong>业务总线矩阵</strong></p><table><thead><tr><th align="left">事实\维度</th><th align="center">时间</th><th align="center">用户</th><th align="center">地区</th><th align="center">商品</th><th align="center">优惠券</th><th align="center">活动</th><th align="center">度量值</th></tr></thead><tbody><tr><td align="left">订单</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">运费,优惠金额</td></tr><tr><td align="left">订单明细</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">商品件数,订单金额,优惠金额</td></tr><tr><td align="left">支付</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">支付金额</td></tr><tr><td align="left">加购</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">商品件数,金额</td></tr><tr><td align="left">收藏</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">收藏次数(1)</td></tr><tr><td align="left">退单</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">商品件数,退单金额</td></tr><tr><td align="left">退款</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">商品件数,退款金额</td></tr><tr><td align="left">评价</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">评价次数(1)</td></tr><tr><td align="left">优惠券领用</td><td align="center">&radic;</td><td align="center">&radic;</td><td align="center"></td><td align="center"></td><td align="center">&radic;</td><td align="center"></td><td align="center">领券次数(1)</td></tr></tbody></table><ul><li><input checked disabled type="checkbox"> 理解没有</li></ul>]]></content>
      
      
      <categories>
          
          <category> Data Warehouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Warehouse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常规指令</title>
      <link href="/2021/11/17/git-chang-gui-zhi-ling/"/>
      <url>/2021/11/17/git-chang-gui-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="一些常用指令汇总"><a href="#一些常用指令汇总" class="headerlink" title="一些常用指令汇总"></a>一些常用指令汇总</h1><ul><li> edit:<br>  昨天提交考试作业,需要提交到gitee上的分支上.因为很久没用git了,有点忘记了.今早在此做一次昨天命令汇总复习吧.</li></ul><h2 id="首先建立本地仓库-初始化"><a href="#首先建立本地仓库-初始化" class="headerlink" title="首先建立本地仓库,初始化"></a>首先建立本地仓库,初始化</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="remote-一下远程仓库"><a href="#remote-一下远程仓库" class="headerlink" title="remote 一下远程仓库"></a>remote 一下远程仓库</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git remote add origin https:&#x2F;&#x2F;gitee.com&#x2F;xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="pull一下我的分支-学号"><a href="#pull一下我的分支-学号" class="headerlink" title="pull一下我的分支(学号)"></a>pull一下我的分支(学号)</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git pull origin 学号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加本地仓库"><a href="#添加本地仓库" class="headerlink" title="添加本地仓库"></a>添加本地仓库</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="commite-一下"><a href="#commite-一下" class="headerlink" title="commite 一下"></a>commite 一下</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git commit -m &quot;初始&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="切换分支到我的学号"><a href="#切换分支到我的学号" class="headerlink" title="切换分支到我的学号"></a>切换分支到我的学号</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git checkout 学号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="push到仓库分支"><a href="#push到仓库分支" class="headerlink" title="push到仓库分支"></a>push到仓库分支</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git push origin 学号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="删除本地仓库"><a href="#删除本地仓库" class="headerlink" title="删除本地仓库"></a>删除本地仓库</h2><p>**edit:**直接把本地的”.git”文件删除就行了,采用shell命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find . -name &quot;.git&quot;|xargs rm -rf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UDTF原理</title>
      <link href="/2021/11/16/udtf/"/>
      <url>/2021/11/16/udtf/</url>
      
        <content type="html"><![CDATA[<h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p>Hive 的每一个sql会被解释成一个个的operator组成operators,<br>数据放在java中的object中,<br>数据类型放在object inspector中<br>在oprator之间传递.</p><blockquote><p>edit:<br>(object inspector提供了用以解析保存在object中的数据的方法)</p></blockquote><p><img src="https://img-blog.csdnimg.cn/b45be8e0b8894b7c97973d2b0769f95c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5oiR5piv5aW95Lq65aSn5oCq5YW9,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="这是从我的csdn引用的"><br><img src="/2021/11/16/udtf/udtf.png" alt="这是安装插件后,从相对路径引用的"><br><a href="https://f60bec40.wiz06.com/wapp/pages/view/share/s/3S2-N02Et17F2tGvlH3MdUWD0HjvNV08rABS2UL3b20OfkF7">我的为知笔记</a></p>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
            <tag> udtf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电商数仓-测试与优化</title>
      <link href="/2021/11/16/ebdw-testandoptimize/"/>
      <url>/2021/11/16/ebdw-testandoptimize/</url>
      
        <content type="html"><![CDATA[<h1 id="电商数据仓库项目"><a href="#电商数据仓库项目" class="headerlink" title="电商数据仓库项目"></a>电商数据仓库项目</h1><h2 id="基准测试"><a href="#基准测试" class="headerlink" title="基准测试"></a>基准测试</h2><h3 id="为什么要做基准测试"><a href="#为什么要做基准测试" class="headerlink" title="为什么要做基准测试?"></a>为什么要做基准测试?</h3><p>在企业中非常关心每天从Java后台拉取过来的数据，需要多久能上传到集群？消费者关心多久能从HDFS上拉取需要的数据？</p><p>为了搞清楚HDFS的读写性能，生产环境上非常需要对集群进行压测。</p><h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><ul><li> <strong>第一步</strong>,<em><strong>设置统一网络传输速度</strong></em>    *    hadoop102、hadoop103、hadoop104虚拟机网络都设置为100mbps。<br>  原因:HDFS的读写性能主要受网络和磁盘影响比较大。<br>edit:    100Mbps单位是bit；10M/s单位是byte ; 1byte=8bit，100Mbps/8=12.5M/s。<br><img src="/2021/11/16/ebdw-testandoptimize/b5795d33-9457-458f-95ac-85505eb55a88.png">    * 开启python的简单http服务器进行网速测试  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">    [tzk@hadoop101 module]$ python -m SimpleHTTPServerServing HTTP on 0.0.0.0 port 8000 ...192.168.32.1 - - [07&#x2F;Oct&#x2F;2021 19:42:38] &quot;GET &#x2F; HTTP&#x2F;1.1&quot; 200 -192.168.32.1 - - [07&#x2F;Oct&#x2F;2021 19:42:38] code 404, message File not found192.168.32.1 - - [07&#x2F;Oct&#x2F;2021 19:42:38] &quot;GET &#x2F;favicon.ico HTTP&#x2F;1.1&quot; 404 -192.168.32.1 - - [07&#x2F;Oct&#x2F;2021 19:42:43] &quot;GET &#x2F;bigtable.lzo HTTP&#x2F;1.1&quot; 200 -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>    * 验证结果  <img src="/2021/11/16/ebdw-testandoptimize/fd789e7f-76c7-40e4-889a-96d36d6f8bc6.png"></li><li><strong>第二步</strong>,<em><strong>测试hdfs的写性能</strong></em><br>向HDFS写10个128M的文件<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[tzk@hadoop101 hadoop-3.1.3]$ hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -write -nrFiles 10 -fileSize 128MB <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2021/11/16/ebdw-testandoptimize/a0baf880-9449-4ebf-a71f-42a940f3c368.png"><br>两个平均数:<ul><li>第一个的计算方式: 所有数据量相加 <strong>/</strong> 总时间</li><li>第二个的计算方式: 每一个map的平均速度相加</li></ul></li></ul><p>由上图可以看出,这两个平均速度远远大于网络速度.很明显,这里走的是磁盘,并没有走网络.<br>即:只在hadoop101上运行,因为我们在一开始把备份数改成了1.现在去hdfs-site.xml进行修改为3<br><strong>来看一下运行结果图</strong><br><img src="/2021/11/16/ebdw-testandoptimize/4fd8e791-e9dd-4082-a425-caddb58e8a29.png"><br>10个任务,由于我们的客户端是在hadoop101上,所以网络传输为 10*20分.<br>那么传输速度为:<br>v X 20<br>实测数据: 1.77 * 20 = 35.4<br>每台服务器速度(按最大值:100 / 8 = 12.5)相加: 12.5 + 12.5 + 12.5 = 37.5<br>由此可得,带宽已经跑满了</p><ul><li><strong>第三步</strong>,<em><strong>测试HDFS的读性能</strong></em><br>客户端: hadoop101<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[tzk@hadoop101 hadoop-3.1.3]$ hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -read -nrFiles 10 -fileSize 128MB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><em>测试结果图:</em>*<br><img src="/2021/11/16/ebdw-testandoptimize/57facd70-6104-4316-8214-83f523968f9c.png"></li></ul><p><strong>最后</strong>,<em><strong>删除测试生成数据</strong></em></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[tzk@hadoop101 hadoop-3.1.3]$ hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用Sort程序评测MapReduce"><a href="#使用Sort程序评测MapReduce" class="headerlink" title="使用Sort程序评测MapReduce"></a><em><strong>使用Sort程序评测MapReduce</strong></em></h3><p>（1）使用RandomWriter来产生随机数，每个节点运行10个Map任务，每个Map产生大约1G大小的二进制随机数</p><pre class="line-numbers language-none"><code class="language-none">[atguigu@hadoop102 mapreduce]$ hadoop jar &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-3.1.3.jar randomwriter random-data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）执行Sort程序</p><pre class="line-numbers language-none"><code class="language-none">[atguigu@hadoop102 mapreduce]$ hadoop jar &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-3.1.3.jar sort random-data sorted-data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）验证数据是否真正排好序了</p><pre class="line-numbers language-none"><code class="language-none">[atguigu@hadoop102 mapreduce]$hadoop jar &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-client-jobclient-3.1.3-tests.jar testmapredsort -sortInput random-data -sortOutput sorted-data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="hadoop参数调优"><a href="#hadoop参数调优" class="headerlink" title="hadoop参数调优"></a>hadoop参数调优</h2><h3 id="1-）HDFS参数调优"><a href="#1-）HDFS参数调优" class="headerlink" title="1 ）HDFS参数调优"></a><strong>1</strong> ）HDFS参数调优</h3><p><strong>hdfs-site.xml</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">NameNode有一个工作线程池，用来处理不同DataNode的并发心跳以及客户端并发的元数据操作。对于大集群或者有大量客户端的集群来说，通常需要增大参数dfs.namenode.handler.count的默认值10。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.handler.count<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>计算公式</strong><br><img src="/2021/11/16/ebdw-testandoptimize/bb5a529f-803b-4b8b-ad8c-27ca2108be24.png"></p><p>通过python实现计算</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[tzk@hadoop101 hadoop-3.1.3]$ pythonPython 2.7.5 (default, Apr  2 2020, 13:16:51) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux2Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; import math&gt;&gt;&gt; print int(20*math.log(3))21&gt;&gt;&gt; quit()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-）YARN参数调优"><a href="#2-）YARN参数调优" class="headerlink" title="2 ）YARN参数调优"></a><strong>2</strong> ）YARN参数调优</h3><p><strong>yarn-site.xml</strong><br>（1）情景描述：总共7台机器，每天几亿条数据，数据源-&gt;Flume-&gt;Kafka-&gt;HDFS-&gt;Hive</p><p>面临问题：数据统计主要用HiveSQL，没有数据倾斜，小文件已经做了合并处理，开启的JVM重用，而且IO没有阻塞，内存用了不到50%。但是还是跑的非常慢，而且数据量洪峰过来时，整个集群都会宕掉。基于这种情况有没有优化方案。</p><p>（2）解决办法：</p><p>NodeManager内存和服务器实际内存配置尽量接近，如服务器有128g内存，但是NodeManager默认内存8G，不修改该参数最多只能用8G内存。NodeManager使用的CPU核数和服务器CPU核数尽量接近。</p><p>①yarn.nodemanager.resource.memory-mb   NodeManager使用内存数</p><p>②yarn.nodemanager.resource.cpu-vcores  NodeManager使用CPU核数</p><h2 id="kafka压测"><a href="#kafka压测" class="headerlink" title="kafka压测"></a>kafka压测</h2><h3 id="生产压测"><a href="#生产压测" class="headerlink" title="生产压测"></a>生产压测</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kafka-topics.sh --zookeeper hadoop101:2181,hadoop102:2181,hadoop103:2181&#x2F;kafka --create --replication-factor 2 --partitions 3 --topic test#再来一遍kafka-topics.sh --zookeeper hadoop101:2181,hadoop102:2181,hadoop103:2181&#x2F;kafka --create --replication-factor 2 partitions 3 --topic test#在来亿遍kafka-topics.sh --zookeeper hadoop101:2181,hadoop102:2181,hadoop103:2181&#x2F;kafka --create --replication-factor 2 --partitions 3 --topic test#生产测试kafka-producer-perf-test.sh  --topic test --record-size 100 --num-records 10000000 --throughput -1 --producer-props bootstrap.servers&#x3D;hadoop101:9092,hadoop102:9092,hadoop103:9092kafka-producer-perf-test.sh --topic test --record-size 100 --num-records 10000000 --throughput -1 --producer-props bootstrap.servers&#x3D;hadoop101:9092,hadoop102:9092,hadoop103:9092<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试结果图:<br><img src="/2021/11/16/ebdw-testandoptimize/25ec958a-9caf-446e-b8f1-3108cc678cb9.png"><br>集群总带宽: 12.5 + 12.5 + 12.5 约等于 10 + 10 + 10 = 30M/s<br>由于有两个副本,则传输速度应该为: 30 / 2 = 15M/s<br><font color="red"><em>测试结果与预期相符</em></font></p><h3 id="消费压测"><a href="#消费压测" class="headerlink" title="消费压测"></a>消费压测</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kafka-consumer-perf-test.sh --broker-list hadoop101:9092,hadoop102:9092,hadoop103:9092 --topic test --fetch-size 10000 --messages 10000000 --threads 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/11/16/ebdw-testandoptimize/0f7172e2-a88d-470a-ac6c-836b934c59af.png"><br>将 fetch-size的值加大10倍</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># threads 地址对结果没影响,因为底层源码中并没有调取它kafka-consumer-perf-test.sh --broker-list hadoop101:9092,hadoop102:9092,hadoop103:9092 --topic test --fetch-size 100000 --messages 10000000 --threads 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/11/16/ebdw-testandoptimize/d59fa9ae-e296-4409-8b77-dd151b80559b.png"></p>]]></content>
      
      
      <categories>
          
          <category> Data Warehouse </category>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Warehouse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础</title>
      <link href="/2021/11/16/mysql-ji-chu/"/>
      <url>/2021/11/16/mysql-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的好处"><a href="#数据库的好处" class="headerlink" title="数据库的好处"></a>数据库的好处</h2><pre><code>1.持久化数据到本地2.可以实现结构化查询，方便管理</code></pre><h2 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h2><pre><code>1、DB：数据库，保存一组有组织的数据的容器2、DBMS：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据3、SQL:结构化查询语言，用于和DBMS通信的语言</code></pre><h2 id="数据库存储数据的特点"><a href="#数据库存储数据的特点" class="headerlink" title="数据库存储数据的特点"></a>数据库存储数据的特点</h2><pre><code>1、将数据放到表中，表再放到库中2、一个数据库中可以有多个表，每个表都有一个的名字，用来标识自己。表名具有唯一性。3、表具有一些特性，这些特性定义了数据在表中如何存储，类似java中 “类”的设计。4、表由列组成，我们也称为字段。所有表都是由一个或多个列组成的，每一列类似java 中的”属性”5、表中的数据是按行存储的，每一行类似于java中的“对象”。</code></pre><h2 id="MySQL产品的介绍和安装"><a href="#MySQL产品的介绍和安装" class="headerlink" title="MySQL产品的介绍和安装"></a>MySQL产品的介绍和安装</h2><h3 id="MySQL服务的启动和停止"><a href="#MySQL服务的启动和停止" class="headerlink" title="MySQL服务的启动和停止"></a>MySQL服务的启动和停止</h3><pre><code>方式一：计算机——右击管理——服务方式二：通过管理员身份运行net start 服务名（启动服务）net stop 服务名（停止服务）</code></pre><h3 id="MySQL服务的登录和退出"><a href="#MySQL服务的登录和退出" class="headerlink" title="MySQL服务的登录和退出"></a>MySQL服务的登录和退出</h3><pre><code>方式一：通过mysql自带的客户端只限于root用户方式二：通过windows自带的客户端登录：mysql 【-h主机名 -P端口号 】-u用户名 -p密码退出：exit或ctrl+C</code></pre><h3 id="MySQL的常见命令"><a href="#MySQL的常见命令" class="headerlink" title="MySQL的常见命令"></a>MySQL的常见命令</h3><pre><code>1.查看当前所有的数据库show databases;2.打开指定的库use 库名3.查看当前库的所有表show tables;4.查看其它库的所有表show tables from 库名;5.创建表create table 表名(    列名 列类型,    列名 列类型，    。。。);6.查看表结构desc 表名;7.查看服务器的版本方式一：登录到mysql服务端select version();方式二：没有登录到mysql服务端mysql --version或mysql --V</code></pre><h3 id="MySQL的语法规范"><a href="#MySQL的语法规范" class="headerlink" title="MySQL的语法规范"></a>MySQL的语法规范</h3><pre><code>1.不区分大小写,但建议关键字大写，表名、列名小写2.每条命令最好用分号结尾3.每条命令根据需要，可以进行缩进 或换行4.注释    单行注释：#注释文字    单行注释：-- 注释文字    多行注释：/* 注释文字  */</code></pre><h3 id="SQL的语言分类"><a href="#SQL的语言分类" class="headerlink" title="SQL的语言分类"></a>SQL的语言分类</h3><pre><code>DQL（Data Query Language）：数据查询语言    select DML(Data Manipulate Language):数据操作语言    insert 、update、deleteDDL（Data Define Languge）：数据定义语言    create、drop、alterTCL（Transaction Control Language）：事务控制语言    commit、rollback</code></pre><h3 id="SQL的常见命令"><a href="#SQL的常见命令" class="headerlink" title="SQL的常见命令"></a>SQL的常见命令</h3><pre><code>show databases； 查看所有的数据库use 库名； 打开指定 的库show tables ; 显示库中的所有表show tables from 库名;显示指定库中的所有表create table 表名(    字段名 字段类型,        字段名 字段类型); 创建表desc 表名; 查看指定表的结构select * from 表名;显示表中的所有数据</code></pre><h2 id="DQL语言的学习"><a href="#DQL语言的学习" class="headerlink" title="DQL语言的学习"></a>DQL语言的学习</h2><h3 id="进阶1：基础查询"><a href="#进阶1：基础查询" class="headerlink" title="进阶1：基础查询"></a>进阶1：基础查询</h3><pre><code>语法：SELECT 要查询的东西【FROM 表名】;类似于Java中 :System.out.println(要打印的东西);特点：①通过select查询完的结果 ，是一个虚拟的表格，不是真实存在② 要查询的东西 可以是常量值、可以是表达式、可以是字段、可以是函数</code></pre><h3 id="进阶2：条件查询"><a href="#进阶2：条件查询" class="headerlink" title="进阶2：条件查询"></a>进阶2：条件查询</h3><pre><code>条件查询：根据条件过滤原始表的数据，查询到想要的数据语法：select     要查询的字段|表达式|常量值|函数from     表where     条件 ;分类：一、条件表达式    示例：salary&gt;10000    条件运算符：    &gt; &lt; &gt;= &lt;= = != &lt;&gt;二、逻辑表达式示例：salary&gt;10000 &amp;&amp; salary&lt;20000逻辑运算符：    and（&amp;&amp;）:两个条件如果同时成立，结果为true，否则为false    or(||)：两个条件只要有一个成立，结果为true，否则为false    not(!)：如果条件成立，则not后为false，否则为true三、模糊查询示例：last_name like &#39;a%&#39;</code></pre><h3 id="进阶3：排序查询"><a href="#进阶3：排序查询" class="headerlink" title="进阶3：排序查询"></a>进阶3：排序查询</h3><pre><code>语法：select    要查询的东西from    表where     条件order by 排序的字段|表达式|函数|别名 【asc|desc】</code></pre><h3 id="进阶4：常见函数"><a href="#进阶4：常见函数" class="headerlink" title="进阶4：常见函数"></a>进阶4：常见函数</h3><pre><code>一、单行函数1、字符函数    concat拼接    substr截取子串    upper转换成大写    lower转换成小写    trim去前后指定的空格和字符    ltrim去左边空格    rtrim去右边空格    replace替换    lpad左填充    rpad右填充    instr返回子串第一次出现的索引    length 获取字节个数    2、数学函数    round 四舍五入    rand 随机数    floor向下取整    ceil向上取整    mod取余    truncate截断3、日期函数    now当前系统日期+时间    curdate当前系统日期    curtime当前系统时间    str_to_date 将字符转换成日期    date_format将日期转换成字符4、流程控制函数    if 处理双分支    case语句 处理多分支        情况1：处理等值判断        情况2：处理条件判断    5、其他函数    version版本    database当前库    user当前连接用户</code></pre><p>二、分组函数</p><pre><code>    sum 求和    max 最大值    min 最小值    avg 平均值    count 计数    特点：    1、以上五个分组函数都忽略null值，除了count(*)    2、sum和avg一般用于处理数值型        max、min、count可以处理任何数据类型    3、都可以搭配distinct使用，用于统计去重后的结果    4、count的参数可以支持：        字段、*、常量值，一般放1       建议使用 count(*)</code></pre><h2 id="进阶5：分组查询"><a href="#进阶5：分组查询" class="headerlink" title="进阶5：分组查询"></a>进阶5：分组查询</h2><pre><code>语法：select 查询的字段，分组函数from 表group by 分组的字段特点：1、可以按单个字段分组2、和分组函数一同查询的字段最好是分组后的字段3、分组筛选        针对的表    位置            关键字分组前筛选：    原始表        group by的前面        where分组后筛选：    分组后的结果集    group by的后面        having4、可以按多个字段分组，字段之间用逗号隔开5、可以支持排序6、having后可以支持别名</code></pre><h2 id="进阶6：多表连接查询"><a href="#进阶6：多表连接查询" class="headerlink" title="进阶6：多表连接查询"></a>进阶6：多表连接查询</h2><pre><code>笛卡尔乘积：如果连接条件省略或无效则会出现解决办法：添加上连接条件</code></pre><p>一、传统模式下的连接 ：等值连接——非等值连接</p><pre><code>1.等值连接的结果 = 多个表的交集2.n表连接，至少需要n-1个连接条件3.多个表不分主次，没有顺序要求4.一般为表起别名，提高阅读性和性能</code></pre><p>二、sql99语法：通过join关键字实现连接</p><pre><code>含义：1999年推出的sql语法支持：等值连接、非等值连接 （内连接）外连接交叉连接语法：select 字段，...from 表1【inner|left outer|right outer|cross】join 表2 on  连接条件【inner|left outer|right outer|cross】join 表3 on  连接条件【where 筛选条件】【group by 分组字段】【having 分组后的筛选条件】【order by 排序的字段或表达式】好处：语句上，连接条件和筛选条件实现了分离，简洁明了！</code></pre><p>三、自连接</p><p>案例：查询员工名和直接上级的名称</p><p>sql99</p><pre><code>SELECT e.last_name,m.last_nameFROM employees eJOIN employees m ON e.`manager_id`=m.`employee_id`;</code></pre><p>sql92</p><pre><code>SELECT e.last_name,m.last_nameFROM employees e,employees m WHERE e.`manager_id`=m.`employee_id`;</code></pre><h2 id="进阶7：子查询"><a href="#进阶7：子查询" class="headerlink" title="进阶7：子查询"></a>进阶7：子查询</h2><p>含义：</p><pre><code>一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询在外面的查询语句，称为主查询或外查询</code></pre><p>特点：</p><pre><code>1、子查询都放在小括号内2、子查询可以放在from后面、select后面、where后面、having后面，但一般放在条件的右侧3、子查询优先于主查询执行，主查询使用了子查询的执行结果4、子查询根据查询结果的行数不同分为以下两类：① 单行子查询    结果集只有一行    一般搭配单行操作符使用：&gt; &lt; = &lt;&gt; &gt;= &lt;=     非法使用子查询的情况：    a、子查询的结果为一组值    b、子查询的结果为空    ② 多行子查询    结果集有多行    一般搭配多行操作符使用：any、all、in、not in    in： 属于子查询结果中的任意一个就行    any和all往往可以用其他查询代替</code></pre><h2 id="进阶8：分页查询"><a href="#进阶8：分页查询" class="headerlink" title="进阶8：分页查询"></a>进阶8：分页查询</h2><p>应用场景：</p><pre><code>实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句</code></pre><p>语法：</p><pre><code>select 字段|表达式,...from 表【where 条件】【group by 分组字段】【having 条件】【order by 排序的字段】limit 【起始的条目索引，】条目数;</code></pre><p>特点：</p><pre><code>1.起始条目索引从0开始2.limit子句放在查询语句的最后3.公式：select * from  表 limit （page-1）*sizePerPage,sizePerPage假如:每页显示条目数sizePerPage要显示的页数 page</code></pre><h2 id="进阶9：联合查询"><a href="#进阶9：联合查询" class="headerlink" title="进阶9：联合查询"></a>进阶9：联合查询</h2><p>引入：<br>    union 联合、合并</p><p>语法：</p><pre><code>select 字段|常量|表达式|函数 【from 表】 【where 条件】 union 【all】select 字段|常量|表达式|函数 【from 表】 【where 条件】 union 【all】select 字段|常量|表达式|函数 【from 表】 【where 条件】 union  【all】.....select 字段|常量|表达式|函数 【from 表】 【where 条件】</code></pre><p>特点：</p><pre><code>1、多条查询语句的查询的列数必须是一致的2、多条查询语句的查询的列的类型几乎相同3、union代表去重，union all代表不去重</code></pre><h2 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>语法：<br>    insert into 表名(字段名，…)<br>    values(值1，…);</p><p>特点：</p><pre><code>1、字段类型和值类型一致或兼容，而且一一对应2、可以为空的字段，可以不用插入值，或用null填充3、不可以为空的字段，必须插入值4、字段个数和值的个数必须一致5、字段可以省略，但默认所有字段，并且顺序和表中的存储顺序一致</code></pre><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>修改单表语法：</p><pre><code>update 表名 set 字段=新值,字段=新值【where 条件】</code></pre><p>修改多表语法：</p><pre><code>update 表1 别名1,表2 别名2set 字段=新值，字段=新值where 连接条件and 筛选条件</code></pre><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>方式1：delete语句 </p><p>单表的删除： ★<br>    delete from 表名 【where 筛选条件】</p><p>多表的删除：<br>    delete 别名1，别名2<br>    from 表1 别名1，表2 别名2<br>    where 连接条件<br>    and 筛选条件;</p><p>方式2：truncate语句</p><pre><code>truncate table 表名</code></pre><p>两种方式的区别【面试题】</p><pre><code>#1.truncate不能加where条件，而delete可以加where条件#2.truncate的效率高一丢丢#3.truncate 删除带自增长的列的表后，如果再插入数据，数据从1开始#delete 删除带自增长列的表后，如果再插入数据，数据从上一次的断点处开始#4.truncate删除不能回滚，delete删除可以回滚</code></pre><h2 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h2><h3 id="库和表的管理"><a href="#库和表的管理" class="headerlink" title="库和表的管理"></a>库和表的管理</h3><p>库的管理：</p><pre><code>一、创建库create database 库名二、删除库drop database 库名</code></pre><p>表的管理：<br>    #1.创建表</p><pre><code>CREATE TABLE IF NOT EXISTS stuinfo(    stuId INT,    stuName VARCHAR(20),    gender CHAR,    bornDate DATETIME    );DESC studentinfo;#2.修改表 alter语法：ALTER TABLE 表名 ADD|MODIFY|DROP|CHANGE COLUMN 字段名 【字段类型】;#①修改字段名ALTER TABLE studentinfo CHANGE  COLUMN sex gender CHAR;#②修改表名ALTER TABLE stuinfo RENAME [TO]  studentinfo;#③修改字段类型和列级约束ALTER TABLE studentinfo MODIFY COLUMN borndate DATE ;#④添加字段ALTER TABLE studentinfo ADD COLUMN email VARCHAR(20) first;#⑤删除字段ALTER TABLE studentinfo DROP COLUMN email;#3.删除表DROP TABLE [IF EXISTS] studentinfo;</code></pre><h3 id="常见类型"><a href="#常见类型" class="headerlink" title="常见类型"></a>常见类型</h3><pre><code>整型：    小数：    浮点型    定点型字符型：日期型：Blob类型：</code></pre><h3 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h3><pre><code>NOT NULLDEFAULTUNIQUECHECKPRIMARY KEYFOREIGN KEY</code></pre><h2 id="数据库事务"><a href="#数据库事务" class="headerlink" title="数据库事务"></a>数据库事务</h2><h3 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h3><pre><code>通过一组逻辑操作单元（一组DML——sql语句），将数据从一种状态切换到另外一种状态</code></pre><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><pre><code>（ACID）原子性：要么都执行，要么都回滚一致性：保证数据的状态操作前和操作后保持一致隔离性：多个事务同时操作相同数据库的同一个数据时，一个事务的执行不受另外一个事务的干扰持久性：一个事务一旦提交，则数据将持久化到本地，除非其他事务对其进行修改</code></pre><p>相关步骤：</p><pre><code>1、开启事务2、编写事务的一组逻辑操作单元（多条sql语句）3、提交事务或回滚事务</code></pre><h3 id="事务的分类："><a href="#事务的分类：" class="headerlink" title="事务的分类："></a>事务的分类：</h3><p>隐式事务，没有明显的开启和结束事务的标志</p><pre><code>比如insert、update、delete语句本身就是一个事务</code></pre><p>显式事务，具有明显的开启和结束事务的标志</p><pre><code>    1、开启事务    取消自动提交事务的功能        2、编写事务的一组逻辑操作单元（多条sql语句）    insert    update    delete        3、提交事务或回滚事务</code></pre><h3 id="使用到的关键字"><a href="#使用到的关键字" class="headerlink" title="使用到的关键字"></a>使用到的关键字</h3><pre><code>set autocommit=0;start transaction;commit;rollback;savepoint  断点commit to 断点rollback to 断点</code></pre><h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别:"></a>事务的隔离级别:</h3><p>事务并发问题如何发生？</p><pre><code>当多个事务同时操作同一个数据库的相同数据时</code></pre><p>事务的并发问题有哪些？</p><pre><code>脏读：一个事务读取到了另外一个事务未提交的数据不可重复读：同一个事务中，多次读取到的数据不一致幻读：一个事务读取数据时，另外一个事务进行更新，导致第一个事务读取到了没有更新的数据</code></pre><p>如何避免事务的并发问题？</p><pre><code>通过设置事务的隔离级别1、READ UNCOMMITTED2、READ COMMITTED 可以避免脏读3、REPEATABLE READ 可以避免脏读、不可重复读和一部分幻读4、SERIALIZABLE可以避免脏读、不可重复读和幻读</code></pre><p>设置隔离级别：</p><pre><code>set session|global  transaction isolation level 隔离级别名;</code></pre><p>查看隔离级别：</p><pre><code>select @@tx_isolation;</code></pre><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>含义：理解成一张虚拟的表</p><p>视图和表的区别：</p><pre><code>    使用方式    占用物理空间视图    完全相同    不占用，仅仅保存的是sql逻辑表    完全相同    占用</code></pre><p>视图的好处：</p><pre><code>1、sql语句提高重用性，效率高2、和表实现了分离，提高了安全性</code></pre><h3 id="视图的创建"><a href="#视图的创建" class="headerlink" title="视图的创建"></a>视图的创建</h3><pre><code>语法：CREATE VIEW  视图名AS查询语句;</code></pre><h3 id="视图的增删改查"><a href="#视图的增删改查" class="headerlink" title="视图的增删改查"></a>视图的增删改查</h3><pre><code>1、查看视图的数据 ★SELECT * FROM my_v4;SELECT * FROM my_v1 WHERE last_name=&#39;Partners&#39;;2、插入视图的数据INSERT INTO my_v4(last_name,department_id) VALUES(&#39;虚竹&#39;,90);3、修改视图的数据UPDATE my_v4 SET last_name =&#39;梦姑&#39; WHERE last_name=&#39;虚竹&#39;;4、删除视图的数据DELETE FROM my_v4;</code></pre><h3 id="某些视图不能更新"><a href="#某些视图不能更新" class="headerlink" title="某些视图不能更新"></a>某些视图不能更新</h3><pre><code>包含以下关键字的sql语句：分组函数、distinct、group  by、having、union或者union all常量视图Select中包含子查询joinfrom一个不能更新的视图where子句的子查询引用了from子句中的表</code></pre><h3 id="视图逻辑的更新"><a href="#视图逻辑的更新" class="headerlink" title="视图逻辑的更新"></a>视图逻辑的更新</h3><pre><code>#方式一：CREATE OR REPLACE VIEW test_v7ASSELECT last_name FROM employeesWHERE employee_id&gt;100;#方式二:ALTER VIEW test_v7ASSELECT employee_id FROM employees;SELECT * FROM test_v7;</code></pre><h3 id="视图的删除"><a href="#视图的删除" class="headerlink" title="视图的删除"></a>视图的删除</h3><pre><code>DROP VIEW test_v1,test_v2,test_v3;</code></pre><h3 id="视图结构的查看"><a href="#视图结构的查看" class="headerlink" title="视图结构的查看"></a>视图结构的查看</h3><pre><code>DESC test_v7;SHOW CREATE VIEW test_v7;</code></pre><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><p>含义：一组经过预先编译的sql语句的集合<br>好处：</p><pre><code>1、提高了sql语句的重用性，减少了开发程序员的压力2、提高了效率3、减少了传输次数</code></pre><p>分类：</p><pre><code>1、无返回无参2、仅仅带in类型，无返回有参3、仅仅带out类型，有返回无参4、既带in又带out，有返回有参5、带inout，有返回有参注意：in、out、inout都可以在一个存储过程中带多个</code></pre><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><p>语法：</p><pre><code>create procedure 存储过程名(in|out|inout 参数名  参数类型,...)begin    存储过程体end</code></pre><p>类似于方法：</p><pre><code>修饰符 返回类型 方法名(参数类型 参数名,...)&#123;    方法体;&#125;</code></pre><p>注意</p><pre><code>1、需要设置新的结束标记delimiter 新的结束标记示例：delimiter $CREATE PROCEDURE 存储过程名(IN|OUT|INOUT 参数名  参数类型,...)BEGIN    sql语句1;    sql语句2;END $2、存储过程体中可以有多条sql语句，如果仅仅一条sql语句，则可以省略begin end3、参数前面的符号的意思in:该参数只能作为输入 （该参数不能做返回值）out：该参数只能作为输出（该参数只能做返回值）inout：既能做输入又能做输出</code></pre><h1 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h1><pre><code>call 存储过程名(实参列表)</code></pre><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="创建函数"><a href="#创建函数" class="headerlink" title="创建函数"></a>创建函数</h3><p>学过的函数：LENGTH、SUBSTR、CONCAT等<br>语法：</p><pre><code>CREATE FUNCTION 函数名(参数名 参数类型,...) RETURNS 返回类型BEGIN    函数体END</code></pre><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><pre><code>SELECT 函数名（实参列表）</code></pre><h3 id="函数和存储过程的区别"><a href="#函数和存储过程的区别" class="headerlink" title="函数和存储过程的区别"></a>函数和存储过程的区别</h3><pre><code>        关键字        调用语法    返回值            应用场景函数        FUNCTION    SELECT 函数()    只能是一个        一般用于查询结果为一个值并返回时，当有返回值而且仅仅一个存储过程    PROCEDURE    CALL 存储过程()    可以有0个或多个        一般用于更新</code></pre><h2 id="流程控制结构"><a href="#流程控制结构" class="headerlink" title="流程控制结构"></a>流程控制结构</h2><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><p>一、全局变量</p><p>作用域：针对于所有会话（连接）有效，但不能跨重启</p><pre><code>查看所有全局变量SHOW GLOBAL VARIABLES;查看满足条件的部分系统变量SHOW GLOBAL VARIABLES LIKE &#39;%char%&#39;;查看指定的系统变量的值SELECT @@global.autocommit;为某个系统变量赋值SET @@global.autocommit=0;SET GLOBAL autocommit=0;</code></pre><p>二、会话变量</p><p>作用域：针对于当前会话（连接）有效</p><pre><code>查看所有会话变量SHOW SESSION VARIABLES;查看满足条件的部分会话变量SHOW SESSION VARIABLES LIKE &#39;%char%&#39;;查看指定的会话变量的值SELECT @@autocommit;SELECT @@session.tx_isolation;为某个会话变量赋值SET @@session.tx_isolation=&#39;read-uncommitted&#39;;SET SESSION tx_isolation=&#39;read-committed&#39;;</code></pre><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><p>一、用户变量</p><p>声明并初始化：</p><pre><code>SET @变量名=值;SET @变量名:=值;SELECT @变量名:=值;</code></pre><p>赋值：</p><pre><code>方式一：一般用于赋简单的值SET 变量名=值;SET 变量名:=值;SELECT 变量名:=值;方式二：一般用于赋表 中的字段值SELECT 字段名或表达式 INTO 变量FROM 表;</code></pre><p>使用：</p><pre><code>select @变量名;</code></pre><p>二、局部变量</p><p>声明：</p><pre><code>declare 变量名 类型 【default 值】;</code></pre><p>赋值：</p><pre><code>方式一：一般用于赋简单的值SET 变量名=值;SET 变量名:=值;SELECT 变量名:=值;方式二：一般用于赋表 中的字段值SELECT 字段名或表达式 INTO 变量FROM 表;</code></pre><p>使用：</p><pre><code>select 变量名</code></pre><p>二者的区别：</p><pre><code>        作用域            定义位置        语法</code></pre><p>用户变量    当前会话        会话的任何地方        加@符号，不用指定类型<br>局部变量    定义它的BEGIN END中     BEGIN END的第一句话    一般不用加@,需要指定类型</p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>一、if函数<br>    语法：if(条件，值1，值2)<br>    特点：可以用在任何位置</p><p>二、case语句</p><p>语法：</p><pre><code>情况一：类似于switchcase 表达式when 值1 then 结果1或语句1(如果是语句，需要加分号) when 值2 then 结果2或语句2(如果是语句，需要加分号)...else 结果n或语句n(如果是语句，需要加分号)end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）情况二：类似于多重ifcase when 条件1 then 结果1或语句1(如果是语句，需要加分号) when 条件2 then 结果2或语句2(如果是语句，需要加分号)...else 结果n或语句n(如果是语句，需要加分号)end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）</code></pre><p>特点：<br>    可以用在任何位置</p><p>三、if elseif语句</p><p>语法：</p><pre><code>if 情况1 then 语句1;elseif 情况2 then 语句2;...else 语句n;end if;</code></pre><p>特点：<br>    只能用在begin end中！！！！！！！！！！！！！！！</p><p>三者比较：<br>            应用场合<br>    if函数        简单双分支<br>    case结构    等值判断 的多分支<br>    if结构        区间判断 的多分支</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>语法：</p><pre><code>【标签：】WHILE 循环条件  DO    循环体END WHILE 【标签】;</code></pre><p>特点：</p><pre><code>只能放在BEGIN END里面如果要搭配leave跳转语句，需要使用标签，否则可以不用标签leave类似于java中的break语句，跳出所在循环！！！</code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/16/hello-world/"/>
      <url>/2021/11/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
